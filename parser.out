Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    CLEAR
    DEF
    DEFINED
    DELETE
    ELSE
    ENSURE
    FETCH
    MODULE
    NEWLINE
    NEXT
    NIL
    NOT
    NUMERAL
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> sentenciafor
Rule 7     cuerpo -> sentenciawhile
Rule 8     cuerpo -> sentenciaElsif
Rule 9     impresion -> PUTS factor
Rule 10    impresion -> PUTS comparacion
Rule 11    impresion -> PUTS comparacion_bool
Rule 12    impresion -> PUTS STRING
Rule 13    leer -> GETS PUNTO CHOMP
Rule 14    expression -> factor operadoresMat factor
Rule 15    comparacion -> factor operadoresComp factor
Rule 16    comparacion_bool -> booleanos operadoresBool booleanos
Rule 17    operadoresComp -> MAYORQUE
Rule 18    operadoresComp -> MENORQUE
Rule 19    operadoresComp -> operadoresEquals
Rule 20    operadoresMat -> PLUS
Rule 21    operadoresMat -> MINUS
Rule 22    operadoresMat -> TIMES
Rule 23    operadoresMat -> DIVIDE
Rule 24    operadoresMat -> MOD
Rule 25    factor -> INT
Rule 26    factor -> variables
Rule 27    factor -> FLOAT
Rule 28    factor -> expression
Rule 29    booleanos -> TRUE
Rule 30    booleanos -> FALSE
Rule 31    operadoresBool -> AND
Rule 32    operadoresBool -> OR
Rule 33    operadoresBool -> operadoresEquals
Rule 34    operadoresEquals -> EQUALSX2
Rule 35    operadoresEquals -> NOTEQUALS
Rule 36    variables -> ID
Rule 37    variables -> CONSTANT
Rule 38    variables -> GLOBAL
Rule 39    asignacion -> variables EQUAL factor
Rule 40    asignacion -> variables EQUAL STRING
Rule 41    asignacion -> variables EQUAL booleanos
Rule 42    asignacion -> variables EQUAL comparacion_bool
Rule 43    asignacion -> variables EQUAL struct
Rule 44    struct -> conjunto
Rule 45    struct -> formacion
Rule 46    struct -> hash
Rule 47    conjunto -> SET arr
Rule 48    conjunto -> SET LCOR RCOR
Rule 49    valor -> INT
Rule 50    valor -> ID
Rule 51    valor -> STRING
Rule 52    valor -> booleanos
Rule 53    valor -> FLOAT
Rule 54    repetirvalor -> valor
Rule 55    repetirvalor -> valor COMMA repetirvalor
Rule 56    arr -> LCOR repetirvalor RCOR
Rule 57    funcionstruct -> funcionsconjunto
Rule 58    funcionstruct -> funcionsformacion
Rule 59    funcionstruct -> funcionsHash
Rule 60    funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN
Rule 61    funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN
Rule 62    funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN
Rule 63    funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN
Rule 64    funcionsconjunto -> variables PUNTO SIZE
Rule 65    contenido -> impresion
Rule 66    contenido -> asignacion
Rule 67    contenido -> funcionstruct
Rule 68    repetircontenido -> contenido
Rule 69    repetircontenido -> contenido repetircontenido
Rule 70    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
Rule 71    condicion -> comparacion
Rule 72    condicion -> comparacion_bool
Rule 73    condicion -> booleanos
Rule 74    condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN
Rule 75    sentenciawhile -> WHILE condicion DO repetircontenido END
Rule 76    formacion -> LCOR repetirvalor RCOR
Rule 77    formacion -> LCOR RCOR
Rule 78    formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 79    formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 80    funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN
Rule 81    funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 82    funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN
Rule 83    funcionsformacion -> variables PUNTO FIRST
Rule 84    funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN
Rule 85    hash -> LBRACE hash_content RBRACE
Rule 86    hash_elements -> hash_element hash_more_elements
Rule 87    hash_content -> hash_element
Rule 88    hash_content -> hash_elements
Rule 89    hash_element -> clave FLECHA value
Rule 90    hash_more_elements -> COMMA hash_element
Rule 91    hash_more_elements -> COMMA hash_element hash_more_elements
Rule 92    clave -> variables
Rule 93    clave -> STRING
Rule 94    clave -> INT
Rule 95    clave -> FLOAT
Rule 96    value -> valor
Rule 97    value -> struct
Rule 98    hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN
Rule 99    hash_delete -> variables PUNTO LPAREN clave RPAREN
Rule 100   hash_key -> variables PUNTO KEY LPAREN value RPAREN
Rule 101   funcionsHash -> hash_add
Rule 102   funcionsHash -> hash_delete
Rule 103   funcionsHash -> hash_key
Rule 104   sentenciaElsif -> IF condicion repetircontenido mas_sentencias END
Rule 105   mas_sentencias -> ELSIF repetircontenido
Rule 106   mas_sentencias -> ELSIF repetircontenido mas_sentencias

Terminals, with rules where they appear

ADD                  : 60 61
ALIAS                : 
AND                  : 31
ARRAY                : 74 78 79
BEGIN                : 
BREAK                : 
CASE                 : 
CHOMP                : 13
CLASS                : 
CLEAR                : 
COMMA                : 55 90 91
CONSTANT             : 37
DEF                  : 
DEFINED              : 
DELETE               : 
DIVIDE               : 23
DO                   : 75
ELSE                 : 
ELSIF                : 105 106
END                  : 70 75 104
ENSURE               : 
EQUAL                : 39 40 41 42 43
EQUALSX2             : 34
FALSE                : 30
FETCH                : 
FIRST                : 83 84
FLECHA               : 89
FLOAT                : 27 53 95
FOR                  : 70
GETS                 : 13
GLOBAL               : 38
ID                   : 36 50
IF                   : 104
IN                   : 70
INT                  : 25 49 70 70 78 94
KEY                  : 100
LBRACE               : 85
LCOR                 : 48 56 76 77
LENGTH               : 80
LPAREN               : 60 61 62 63 70 74 78 79 80 81 82 84 98 99 100
MAYORQUE             : 17
MENORQUE             : 18
MERGE                : 62
MINUS                : 21
MOD                  : 24
MODULE               : 
NEW                  : 74 78 79
NEWLINE              : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUALS            : 35
NUMERAL              : 
OR                   : 32
PLUS                 : 20
PUNTO                : 13 60 61 62 63 64 70 70 74 78 79 80 81 82 83 84 98 99 100
PUSH                 : 81
PUTS                 : 9 10 11 12
RBRACE               : 85
RCOR                 : 48 56 76 77
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 60 61 62 63 70 74 78 79 80 81 82 84 98 99 100
SAMPLE               : 82
SELF                 : 
SET                  : 47 48
SIZE                 : 63 64
STORE                : 98
STRING               : 12 40 51 93
SUPER                : 
THEN                 : 
TIMES                : 22
TRUE                 : 29
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 75
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arr                  : 47 61 74
asignacion           : 3 66
booleanos            : 16 16 41 52 73
clave                : 89 99
comparacion          : 10 71
comparacion_bool     : 11 42 72
condicion            : 75 104
conjunto             : 44
contenido            : 68 69
cuerpo               : 0
expression           : 1 28
factor               : 9 14 14 15 15 39
formacion            : 45
funcionsHash         : 59
funcionsconjunto     : 57
funcionsformacion    : 58
funcionstruct        : 5 67
hash                 : 46
hash_add             : 101
hash_content         : 85
hash_delete          : 102
hash_element         : 86 87 90 91 98
hash_elements        : 88
hash_key             : 103
hash_more_elements   : 86 91
impresion            : 2 65
leer                 : 4
mas_sentencias       : 104 106
operadoresBool       : 16
operadoresComp       : 15
operadoresEquals     : 19 33
operadoresMat        : 14
repetircontenido     : 69 70 75 104 105 106
repetirvalor         : 55 56 76 81
sentenciaElsif       : 8
sentenciafor         : 6
sentenciawhile       : 7
struct               : 43 97
valor                : 54 55 60 96
value                : 89 100
variables            : 26 39 40 41 42 43 60 61 62 62 63 64 70 80 81 82 82 83 84 92 98 99 100

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . sentenciafor
    (7) cuerpo -> . sentenciawhile
    (8) cuerpo -> . sentenciaElsif
    (14) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (13) leer -> . GETS PUNTO CHOMP
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (70) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (75) sentenciawhile -> . WHILE condicion DO repetircontenido END
    (104) sentenciaElsif -> . IF condicion repetircontenido mas_sentencias END
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 11
    GETS            shift and go to state 13
    FOR             shift and go to state 17
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    sentenciafor                   shift and go to state 7
    sentenciawhile                 shift and go to state 8
    sentenciaElsif                 shift and go to state 9
    factor                         shift and go to state 10
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (28) factor -> expression .

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> sentenciafor .

    $end            reduce using rule 6 (cuerpo -> sentenciafor .)


state 8

    (7) cuerpo -> sentenciawhile .

    $end            reduce using rule 7 (cuerpo -> sentenciawhile .)


state 9

    (8) cuerpo -> sentenciaElsif .

    $end            reduce using rule 8 (cuerpo -> sentenciaElsif .)


state 10

    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33

    operadoresMat                  shift and go to state 28

state 11

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    STRING          shift and go to state 37
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    factor                         shift and go to state 34
    comparacion                    shift and go to state 35
    comparacion_bool               shift and go to state 36
    variables                      shift and go to state 38
    expression                     shift and go to state 39
    booleanos                      shift and go to state 40

state 12

    (39) asignacion -> variables . EQUAL factor
    (40) asignacion -> variables . EQUAL STRING
    (41) asignacion -> variables . EQUAL booleanos
    (42) asignacion -> variables . EQUAL comparacion_bool
    (43) asignacion -> variables . EQUAL struct
    (26) factor -> variables .
    (60) funcionsconjunto -> variables . PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> variables . PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> variables . PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> variables . PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> variables . PUNTO SIZE
    (80) funcionsformacion -> variables . PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> variables . PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> variables . PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> variables . PUNTO FIRST
    (84) funcionsformacion -> variables . PUNTO FIRST LPAREN RPAREN
    (98) hash_add -> variables . PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> variables . PUNTO LPAREN clave RPAREN
    (100) hash_key -> variables . PUNTO KEY LPAREN value RPAREN

    EQUAL           shift and go to state 43
    PLUS            reduce using rule 26 (factor -> variables .)
    MINUS           reduce using rule 26 (factor -> variables .)
    TIMES           reduce using rule 26 (factor -> variables .)
    DIVIDE          reduce using rule 26 (factor -> variables .)
    MOD             reduce using rule 26 (factor -> variables .)
    PUNTO           shift and go to state 44


state 13

    (13) leer -> GETS . PUNTO CHOMP

    PUNTO           shift and go to state 45


state 14

    (57) funcionstruct -> funcionsconjunto .

    $end            reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    PUTS            reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    ID              reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    CONSTANT        reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    GLOBAL          reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    ELSIF           reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    END             reduce using rule 57 (funcionstruct -> funcionsconjunto .)


state 15

    (58) funcionstruct -> funcionsformacion .

    $end            reduce using rule 58 (funcionstruct -> funcionsformacion .)
    PUTS            reduce using rule 58 (funcionstruct -> funcionsformacion .)
    ID              reduce using rule 58 (funcionstruct -> funcionsformacion .)
    CONSTANT        reduce using rule 58 (funcionstruct -> funcionsformacion .)
    GLOBAL          reduce using rule 58 (funcionstruct -> funcionsformacion .)
    ELSIF           reduce using rule 58 (funcionstruct -> funcionsformacion .)
    END             reduce using rule 58 (funcionstruct -> funcionsformacion .)


state 16

    (59) funcionstruct -> funcionsHash .

    $end            reduce using rule 59 (funcionstruct -> funcionsHash .)
    PUTS            reduce using rule 59 (funcionstruct -> funcionsHash .)
    ID              reduce using rule 59 (funcionstruct -> funcionsHash .)
    CONSTANT        reduce using rule 59 (funcionstruct -> funcionsHash .)
    GLOBAL          reduce using rule 59 (funcionstruct -> funcionsHash .)
    ELSIF           reduce using rule 59 (funcionstruct -> funcionsHash .)
    END             reduce using rule 59 (funcionstruct -> funcionsHash .)


state 17

    (70) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 46

state 18

    (25) factor -> INT .

    PLUS            reduce using rule 25 (factor -> INT .)
    MINUS           reduce using rule 25 (factor -> INT .)
    TIMES           reduce using rule 25 (factor -> INT .)
    DIVIDE          reduce using rule 25 (factor -> INT .)
    MOD             reduce using rule 25 (factor -> INT .)
    MAYORQUE        reduce using rule 25 (factor -> INT .)
    MENORQUE        reduce using rule 25 (factor -> INT .)
    EQUALSX2        reduce using rule 25 (factor -> INT .)
    NOTEQUALS       reduce using rule 25 (factor -> INT .)
    $end            reduce using rule 25 (factor -> INT .)
    PUTS            reduce using rule 25 (factor -> INT .)
    ID              reduce using rule 25 (factor -> INT .)
    CONSTANT        reduce using rule 25 (factor -> INT .)
    GLOBAL          reduce using rule 25 (factor -> INT .)
    ELSIF           reduce using rule 25 (factor -> INT .)
    END             reduce using rule 25 (factor -> INT .)
    DO              reduce using rule 25 (factor -> INT .)


state 19

    (75) sentenciawhile -> WHILE . condicion DO repetircontenido END
    (71) condicion -> . comparacion
    (72) condicion -> . comparacion_bool
    (73) condicion -> . booleanos
    (74) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 51
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    condicion                      shift and go to state 47
    comparacion                    shift and go to state 48
    comparacion_bool               shift and go to state 49
    booleanos                      shift and go to state 50
    factor                         shift and go to state 52
    variables                      shift and go to state 38
    expression                     shift and go to state 39

state 20

    (104) sentenciaElsif -> IF . condicion repetircontenido mas_sentencias END
    (71) condicion -> . comparacion
    (72) condicion -> . comparacion_bool
    (73) condicion -> . booleanos
    (74) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 51
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    condicion                      shift and go to state 53
    comparacion                    shift and go to state 48
    comparacion_bool               shift and go to state 49
    booleanos                      shift and go to state 50
    factor                         shift and go to state 52
    variables                      shift and go to state 38
    expression                     shift and go to state 39

state 21

    (27) factor -> FLOAT .

    PLUS            reduce using rule 27 (factor -> FLOAT .)
    MINUS           reduce using rule 27 (factor -> FLOAT .)
    TIMES           reduce using rule 27 (factor -> FLOAT .)
    DIVIDE          reduce using rule 27 (factor -> FLOAT .)
    MOD             reduce using rule 27 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 27 (factor -> FLOAT .)
    MENORQUE        reduce using rule 27 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 27 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 27 (factor -> FLOAT .)
    $end            reduce using rule 27 (factor -> FLOAT .)
    PUTS            reduce using rule 27 (factor -> FLOAT .)
    ID              reduce using rule 27 (factor -> FLOAT .)
    CONSTANT        reduce using rule 27 (factor -> FLOAT .)
    GLOBAL          reduce using rule 27 (factor -> FLOAT .)
    ELSIF           reduce using rule 27 (factor -> FLOAT .)
    END             reduce using rule 27 (factor -> FLOAT .)
    DO              reduce using rule 27 (factor -> FLOAT .)


state 22

    (36) variables -> ID .

    EQUAL           reduce using rule 36 (variables -> ID .)
    PUNTO           reduce using rule 36 (variables -> ID .)
    PLUS            reduce using rule 36 (variables -> ID .)
    MINUS           reduce using rule 36 (variables -> ID .)
    TIMES           reduce using rule 36 (variables -> ID .)
    DIVIDE          reduce using rule 36 (variables -> ID .)
    MOD             reduce using rule 36 (variables -> ID .)
    MAYORQUE        reduce using rule 36 (variables -> ID .)
    MENORQUE        reduce using rule 36 (variables -> ID .)
    EQUALSX2        reduce using rule 36 (variables -> ID .)
    NOTEQUALS       reduce using rule 36 (variables -> ID .)
    $end            reduce using rule 36 (variables -> ID .)
    PUTS            reduce using rule 36 (variables -> ID .)
    ID              reduce using rule 36 (variables -> ID .)
    CONSTANT        reduce using rule 36 (variables -> ID .)
    GLOBAL          reduce using rule 36 (variables -> ID .)
    ELSIF           reduce using rule 36 (variables -> ID .)
    END             reduce using rule 36 (variables -> ID .)
    IN              reduce using rule 36 (variables -> ID .)
    DO              reduce using rule 36 (variables -> ID .)
    FLECHA          reduce using rule 36 (variables -> ID .)
    RPAREN          reduce using rule 36 (variables -> ID .)


state 23

    (37) variables -> CONSTANT .

    EQUAL           reduce using rule 37 (variables -> CONSTANT .)
    PUNTO           reduce using rule 37 (variables -> CONSTANT .)
    PLUS            reduce using rule 37 (variables -> CONSTANT .)
    MINUS           reduce using rule 37 (variables -> CONSTANT .)
    TIMES           reduce using rule 37 (variables -> CONSTANT .)
    DIVIDE          reduce using rule 37 (variables -> CONSTANT .)
    MOD             reduce using rule 37 (variables -> CONSTANT .)
    MAYORQUE        reduce using rule 37 (variables -> CONSTANT .)
    MENORQUE        reduce using rule 37 (variables -> CONSTANT .)
    EQUALSX2        reduce using rule 37 (variables -> CONSTANT .)
    NOTEQUALS       reduce using rule 37 (variables -> CONSTANT .)
    $end            reduce using rule 37 (variables -> CONSTANT .)
    PUTS            reduce using rule 37 (variables -> CONSTANT .)
    ID              reduce using rule 37 (variables -> CONSTANT .)
    CONSTANT        reduce using rule 37 (variables -> CONSTANT .)
    GLOBAL          reduce using rule 37 (variables -> CONSTANT .)
    ELSIF           reduce using rule 37 (variables -> CONSTANT .)
    END             reduce using rule 37 (variables -> CONSTANT .)
    IN              reduce using rule 37 (variables -> CONSTANT .)
    DO              reduce using rule 37 (variables -> CONSTANT .)
    FLECHA          reduce using rule 37 (variables -> CONSTANT .)
    RPAREN          reduce using rule 37 (variables -> CONSTANT .)


state 24

    (38) variables -> GLOBAL .

    EQUAL           reduce using rule 38 (variables -> GLOBAL .)
    PUNTO           reduce using rule 38 (variables -> GLOBAL .)
    PLUS            reduce using rule 38 (variables -> GLOBAL .)
    MINUS           reduce using rule 38 (variables -> GLOBAL .)
    TIMES           reduce using rule 38 (variables -> GLOBAL .)
    DIVIDE          reduce using rule 38 (variables -> GLOBAL .)
    MOD             reduce using rule 38 (variables -> GLOBAL .)
    MAYORQUE        reduce using rule 38 (variables -> GLOBAL .)
    MENORQUE        reduce using rule 38 (variables -> GLOBAL .)
    EQUALSX2        reduce using rule 38 (variables -> GLOBAL .)
    NOTEQUALS       reduce using rule 38 (variables -> GLOBAL .)
    $end            reduce using rule 38 (variables -> GLOBAL .)
    PUTS            reduce using rule 38 (variables -> GLOBAL .)
    ID              reduce using rule 38 (variables -> GLOBAL .)
    CONSTANT        reduce using rule 38 (variables -> GLOBAL .)
    GLOBAL          reduce using rule 38 (variables -> GLOBAL .)
    ELSIF           reduce using rule 38 (variables -> GLOBAL .)
    END             reduce using rule 38 (variables -> GLOBAL .)
    IN              reduce using rule 38 (variables -> GLOBAL .)
    DO              reduce using rule 38 (variables -> GLOBAL .)
    FLECHA          reduce using rule 38 (variables -> GLOBAL .)
    RPAREN          reduce using rule 38 (variables -> GLOBAL .)


state 25

    (101) funcionsHash -> hash_add .

    $end            reduce using rule 101 (funcionsHash -> hash_add .)
    PUTS            reduce using rule 101 (funcionsHash -> hash_add .)
    ID              reduce using rule 101 (funcionsHash -> hash_add .)
    CONSTANT        reduce using rule 101 (funcionsHash -> hash_add .)
    GLOBAL          reduce using rule 101 (funcionsHash -> hash_add .)
    ELSIF           reduce using rule 101 (funcionsHash -> hash_add .)
    END             reduce using rule 101 (funcionsHash -> hash_add .)


state 26

    (102) funcionsHash -> hash_delete .

    $end            reduce using rule 102 (funcionsHash -> hash_delete .)
    PUTS            reduce using rule 102 (funcionsHash -> hash_delete .)
    ID              reduce using rule 102 (funcionsHash -> hash_delete .)
    CONSTANT        reduce using rule 102 (funcionsHash -> hash_delete .)
    GLOBAL          reduce using rule 102 (funcionsHash -> hash_delete .)
    ELSIF           reduce using rule 102 (funcionsHash -> hash_delete .)
    END             reduce using rule 102 (funcionsHash -> hash_delete .)


state 27

    (103) funcionsHash -> hash_key .

    $end            reduce using rule 103 (funcionsHash -> hash_key .)
    PUTS            reduce using rule 103 (funcionsHash -> hash_key .)
    ID              reduce using rule 103 (funcionsHash -> hash_key .)
    CONSTANT        reduce using rule 103 (funcionsHash -> hash_key .)
    GLOBAL          reduce using rule 103 (funcionsHash -> hash_key .)
    ELSIF           reduce using rule 103 (funcionsHash -> hash_key .)
    END             reduce using rule 103 (funcionsHash -> hash_key .)


state 28

    (14) expression -> factor operadoresMat . factor
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    factor                         shift and go to state 54
    variables                      shift and go to state 38
    expression                     shift and go to state 39

state 29

    (20) operadoresMat -> PLUS .

    INT             reduce using rule 20 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 20 (operadoresMat -> PLUS .)
    ID              reduce using rule 20 (operadoresMat -> PLUS .)
    CONSTANT        reduce using rule 20 (operadoresMat -> PLUS .)
    GLOBAL          reduce using rule 20 (operadoresMat -> PLUS .)


state 30

    (21) operadoresMat -> MINUS .

    INT             reduce using rule 21 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 21 (operadoresMat -> MINUS .)
    ID              reduce using rule 21 (operadoresMat -> MINUS .)
    CONSTANT        reduce using rule 21 (operadoresMat -> MINUS .)
    GLOBAL          reduce using rule 21 (operadoresMat -> MINUS .)


state 31

    (22) operadoresMat -> TIMES .

    INT             reduce using rule 22 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 22 (operadoresMat -> TIMES .)
    ID              reduce using rule 22 (operadoresMat -> TIMES .)
    CONSTANT        reduce using rule 22 (operadoresMat -> TIMES .)
    GLOBAL          reduce using rule 22 (operadoresMat -> TIMES .)


state 32

    (23) operadoresMat -> DIVIDE .

    INT             reduce using rule 23 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 23 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 23 (operadoresMat -> DIVIDE .)
    CONSTANT        reduce using rule 23 (operadoresMat -> DIVIDE .)
    GLOBAL          reduce using rule 23 (operadoresMat -> DIVIDE .)


state 33

    (24) operadoresMat -> MOD .

    INT             reduce using rule 24 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 24 (operadoresMat -> MOD .)
    ID              reduce using rule 24 (operadoresMat -> MOD .)
    CONSTANT        reduce using rule 24 (operadoresMat -> MOD .)
    GLOBAL          reduce using rule 24 (operadoresMat -> MOD .)


state 34

    (9) impresion -> PUTS factor .
    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (17) operadoresComp -> . MAYORQUE
    (18) operadoresComp -> . MENORQUE
    (19) operadoresComp -> . operadoresEquals
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 9 (impresion -> PUTS factor .)
    PUTS            reduce using rule 9 (impresion -> PUTS factor .)
    ID              reduce using rule 9 (impresion -> PUTS factor .)
    CONSTANT        reduce using rule 9 (impresion -> PUTS factor .)
    GLOBAL          reduce using rule 9 (impresion -> PUTS factor .)
    ELSIF           reduce using rule 9 (impresion -> PUTS factor .)
    END             reduce using rule 9 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 56
    MENORQUE        shift and go to state 57
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33
    EQUALSX2        shift and go to state 59
    NOTEQUALS       shift and go to state 60

    operadoresComp                 shift and go to state 55
    operadoresMat                  shift and go to state 28
    operadoresEquals               shift and go to state 58

state 35

    (10) impresion -> PUTS comparacion .

    $end            reduce using rule 10 (impresion -> PUTS comparacion .)
    PUTS            reduce using rule 10 (impresion -> PUTS comparacion .)
    ID              reduce using rule 10 (impresion -> PUTS comparacion .)
    CONSTANT        reduce using rule 10 (impresion -> PUTS comparacion .)
    GLOBAL          reduce using rule 10 (impresion -> PUTS comparacion .)
    ELSIF           reduce using rule 10 (impresion -> PUTS comparacion .)
    END             reduce using rule 10 (impresion -> PUTS comparacion .)


state 36

    (11) impresion -> PUTS comparacion_bool .

    $end            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    PUTS            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ID              reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    CONSTANT        reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    GLOBAL          reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ELSIF           reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    END             reduce using rule 11 (impresion -> PUTS comparacion_bool .)


state 37

    (12) impresion -> PUTS STRING .

    $end            reduce using rule 12 (impresion -> PUTS STRING .)
    PUTS            reduce using rule 12 (impresion -> PUTS STRING .)
    ID              reduce using rule 12 (impresion -> PUTS STRING .)
    CONSTANT        reduce using rule 12 (impresion -> PUTS STRING .)
    GLOBAL          reduce using rule 12 (impresion -> PUTS STRING .)
    ELSIF           reduce using rule 12 (impresion -> PUTS STRING .)
    END             reduce using rule 12 (impresion -> PUTS STRING .)


state 38

    (26) factor -> variables .

    MAYORQUE        reduce using rule 26 (factor -> variables .)
    MENORQUE        reduce using rule 26 (factor -> variables .)
    PLUS            reduce using rule 26 (factor -> variables .)
    MINUS           reduce using rule 26 (factor -> variables .)
    TIMES           reduce using rule 26 (factor -> variables .)
    DIVIDE          reduce using rule 26 (factor -> variables .)
    MOD             reduce using rule 26 (factor -> variables .)
    EQUALSX2        reduce using rule 26 (factor -> variables .)
    NOTEQUALS       reduce using rule 26 (factor -> variables .)
    $end            reduce using rule 26 (factor -> variables .)
    PUTS            reduce using rule 26 (factor -> variables .)
    ID              reduce using rule 26 (factor -> variables .)
    CONSTANT        reduce using rule 26 (factor -> variables .)
    GLOBAL          reduce using rule 26 (factor -> variables .)
    ELSIF           reduce using rule 26 (factor -> variables .)
    END             reduce using rule 26 (factor -> variables .)
    DO              reduce using rule 26 (factor -> variables .)


state 39

    (28) factor -> expression .

    MAYORQUE        reduce using rule 28 (factor -> expression .)
    MENORQUE        reduce using rule 28 (factor -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)
    EQUALSX2        reduce using rule 28 (factor -> expression .)
    NOTEQUALS       reduce using rule 28 (factor -> expression .)
    $end            reduce using rule 28 (factor -> expression .)
    PUTS            reduce using rule 28 (factor -> expression .)
    ID              reduce using rule 28 (factor -> expression .)
    CONSTANT        reduce using rule 28 (factor -> expression .)
    GLOBAL          reduce using rule 28 (factor -> expression .)
    ELSIF           reduce using rule 28 (factor -> expression .)
    END             reduce using rule 28 (factor -> expression .)
    DO              reduce using rule 28 (factor -> expression .)


state 40

    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUALSX2        shift and go to state 59
    NOTEQUALS       shift and go to state 60

    operadoresBool                 shift and go to state 61
    operadoresEquals               shift and go to state 64

state 41

    (29) booleanos -> TRUE .

    AND             reduce using rule 29 (booleanos -> TRUE .)
    OR              reduce using rule 29 (booleanos -> TRUE .)
    EQUALSX2        reduce using rule 29 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 29 (booleanos -> TRUE .)
    DO              reduce using rule 29 (booleanos -> TRUE .)
    PUTS            reduce using rule 29 (booleanos -> TRUE .)
    ID              reduce using rule 29 (booleanos -> TRUE .)
    CONSTANT        reduce using rule 29 (booleanos -> TRUE .)
    GLOBAL          reduce using rule 29 (booleanos -> TRUE .)
    $end            reduce using rule 29 (booleanos -> TRUE .)
    ELSIF           reduce using rule 29 (booleanos -> TRUE .)
    END             reduce using rule 29 (booleanos -> TRUE .)
    COMMA           reduce using rule 29 (booleanos -> TRUE .)
    RCOR            reduce using rule 29 (booleanos -> TRUE .)
    RPAREN          reduce using rule 29 (booleanos -> TRUE .)
    RBRACE          reduce using rule 29 (booleanos -> TRUE .)


state 42

    (30) booleanos -> FALSE .

    AND             reduce using rule 30 (booleanos -> FALSE .)
    OR              reduce using rule 30 (booleanos -> FALSE .)
    EQUALSX2        reduce using rule 30 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 30 (booleanos -> FALSE .)
    DO              reduce using rule 30 (booleanos -> FALSE .)
    PUTS            reduce using rule 30 (booleanos -> FALSE .)
    ID              reduce using rule 30 (booleanos -> FALSE .)
    CONSTANT        reduce using rule 30 (booleanos -> FALSE .)
    GLOBAL          reduce using rule 30 (booleanos -> FALSE .)
    $end            reduce using rule 30 (booleanos -> FALSE .)
    ELSIF           reduce using rule 30 (booleanos -> FALSE .)
    END             reduce using rule 30 (booleanos -> FALSE .)
    COMMA           reduce using rule 30 (booleanos -> FALSE .)
    RCOR            reduce using rule 30 (booleanos -> FALSE .)
    RPAREN          reduce using rule 30 (booleanos -> FALSE .)
    RBRACE          reduce using rule 30 (booleanos -> FALSE .)


state 43

    (39) asignacion -> variables EQUAL . factor
    (40) asignacion -> variables EQUAL . STRING
    (41) asignacion -> variables EQUAL . booleanos
    (42) asignacion -> variables EQUAL . comparacion_bool
    (43) asignacion -> variables EQUAL . struct
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    STRING          shift and go to state 66
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 73
    LCOR            shift and go to state 74
    ARRAY           shift and go to state 75
    LBRACE          shift and go to state 76

    variables                      shift and go to state 38
    factor                         shift and go to state 65
    booleanos                      shift and go to state 67
    comparacion_bool               shift and go to state 68
    struct                         shift and go to state 69
    expression                     shift and go to state 39
    conjunto                       shift and go to state 70
    formacion                      shift and go to state 71
    hash                           shift and go to state 72

state 44

    (60) funcionsconjunto -> variables PUNTO . ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> variables PUNTO . ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> variables PUNTO . MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> variables PUNTO . SIZE LPAREN RPAREN
    (64) funcionsconjunto -> variables PUNTO . SIZE
    (80) funcionsformacion -> variables PUNTO . LENGTH LPAREN RPAREN
    (81) funcionsformacion -> variables PUNTO . PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> variables PUNTO . SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> variables PUNTO . FIRST
    (84) funcionsformacion -> variables PUNTO . FIRST LPAREN RPAREN
    (98) hash_add -> variables PUNTO . STORE LPAREN hash_element RPAREN
    (99) hash_delete -> variables PUNTO . LPAREN clave RPAREN
    (100) hash_key -> variables PUNTO . KEY LPAREN value RPAREN

    ADD             shift and go to state 77
    MERGE           shift and go to state 79
    SIZE            shift and go to state 80
    LENGTH          shift and go to state 81
    PUSH            shift and go to state 82
    SAMPLE          shift and go to state 83
    FIRST           shift and go to state 84
    STORE           shift and go to state 85
    LPAREN          shift and go to state 78
    KEY             shift and go to state 86


state 45

    (13) leer -> GETS PUNTO . CHOMP

    CHOMP           shift and go to state 87


state 46

    (70) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    IN              shift and go to state 88


state 47

    (75) sentenciawhile -> WHILE condicion . DO repetircontenido END

    DO              shift and go to state 89


state 48

    (71) condicion -> comparacion .

    DO              reduce using rule 71 (condicion -> comparacion .)
    PUTS            reduce using rule 71 (condicion -> comparacion .)
    ID              reduce using rule 71 (condicion -> comparacion .)
    CONSTANT        reduce using rule 71 (condicion -> comparacion .)
    GLOBAL          reduce using rule 71 (condicion -> comparacion .)


state 49

    (72) condicion -> comparacion_bool .

    DO              reduce using rule 72 (condicion -> comparacion_bool .)
    PUTS            reduce using rule 72 (condicion -> comparacion_bool .)
    ID              reduce using rule 72 (condicion -> comparacion_bool .)
    CONSTANT        reduce using rule 72 (condicion -> comparacion_bool .)
    GLOBAL          reduce using rule 72 (condicion -> comparacion_bool .)


state 50

    (73) condicion -> booleanos .
    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    DO              reduce using rule 73 (condicion -> booleanos .)
    PUTS            reduce using rule 73 (condicion -> booleanos .)
    ID              reduce using rule 73 (condicion -> booleanos .)
    CONSTANT        reduce using rule 73 (condicion -> booleanos .)
    GLOBAL          reduce using rule 73 (condicion -> booleanos .)
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUALSX2        shift and go to state 59
    NOTEQUALS       shift and go to state 60

    operadoresBool                 shift and go to state 61
    operadoresEquals               shift and go to state 64

state 51

    (74) condicion -> ARRAY . PUNTO NEW LPAREN arr RPAREN

    PUNTO           shift and go to state 90


state 52

    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (17) operadoresComp -> . MAYORQUE
    (18) operadoresComp -> . MENORQUE
    (19) operadoresComp -> . operadoresEquals
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    MAYORQUE        shift and go to state 56
    MENORQUE        shift and go to state 57
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33
    EQUALSX2        shift and go to state 59
    NOTEQUALS       shift and go to state 60

    operadoresComp                 shift and go to state 55
    operadoresMat                  shift and go to state 28
    operadoresEquals               shift and go to state 58

state 53

    (104) sentenciaElsif -> IF condicion . repetircontenido mas_sentencias END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    repetircontenido               shift and go to state 91
    contenido                      shift and go to state 92
    impresion                      shift and go to state 93
    asignacion                     shift and go to state 94
    funcionstruct                  shift and go to state 95
    variables                      shift and go to state 96
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 54

    (14) expression -> factor operadoresMat factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    $end            reduce using rule 14 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 14 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 14 (expression -> factor operadoresMat factor .)
    PUTS            reduce using rule 14 (expression -> factor operadoresMat factor .)
    ID              reduce using rule 14 (expression -> factor operadoresMat factor .)
    CONSTANT        reduce using rule 14 (expression -> factor operadoresMat factor .)
    GLOBAL          reduce using rule 14 (expression -> factor operadoresMat factor .)
    ELSIF           reduce using rule 14 (expression -> factor operadoresMat factor .)
    END             reduce using rule 14 (expression -> factor operadoresMat factor .)
    DO              reduce using rule 14 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33

  ! PLUS            [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 28

state 55

    (15) comparacion -> factor operadoresComp . factor
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    factor                         shift and go to state 97
    variables                      shift and go to state 38
    expression                     shift and go to state 39

state 56

    (17) operadoresComp -> MAYORQUE .

    INT             reduce using rule 17 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 17 (operadoresComp -> MAYORQUE .)
    ID              reduce using rule 17 (operadoresComp -> MAYORQUE .)
    CONSTANT        reduce using rule 17 (operadoresComp -> MAYORQUE .)
    GLOBAL          reduce using rule 17 (operadoresComp -> MAYORQUE .)


state 57

    (18) operadoresComp -> MENORQUE .

    INT             reduce using rule 18 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 18 (operadoresComp -> MENORQUE .)
    ID              reduce using rule 18 (operadoresComp -> MENORQUE .)
    CONSTANT        reduce using rule 18 (operadoresComp -> MENORQUE .)
    GLOBAL          reduce using rule 18 (operadoresComp -> MENORQUE .)


state 58

    (19) operadoresComp -> operadoresEquals .

    INT             reduce using rule 19 (operadoresComp -> operadoresEquals .)
    FLOAT           reduce using rule 19 (operadoresComp -> operadoresEquals .)
    ID              reduce using rule 19 (operadoresComp -> operadoresEquals .)
    CONSTANT        reduce using rule 19 (operadoresComp -> operadoresEquals .)
    GLOBAL          reduce using rule 19 (operadoresComp -> operadoresEquals .)


state 59

    (34) operadoresEquals -> EQUALSX2 .

    INT             reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    ID              reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    CONSTANT        reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    GLOBAL          reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    TRUE            reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)


state 60

    (35) operadoresEquals -> NOTEQUALS .

    INT             reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    ID              reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    CONSTANT        reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    GLOBAL          reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    TRUE            reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)


state 61

    (16) comparacion_bool -> booleanos operadoresBool . booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleanos                      shift and go to state 98

state 62

    (31) operadoresBool -> AND .

    TRUE            reduce using rule 31 (operadoresBool -> AND .)
    FALSE           reduce using rule 31 (operadoresBool -> AND .)


state 63

    (32) operadoresBool -> OR .

    TRUE            reduce using rule 32 (operadoresBool -> OR .)
    FALSE           reduce using rule 32 (operadoresBool -> OR .)


state 64

    (33) operadoresBool -> operadoresEquals .

    TRUE            reduce using rule 33 (operadoresBool -> operadoresEquals .)
    FALSE           reduce using rule 33 (operadoresBool -> operadoresEquals .)


state 65

    (39) asignacion -> variables EQUAL factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    $end            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    PUTS            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ID              reduce using rule 39 (asignacion -> variables EQUAL factor .)
    CONSTANT        reduce using rule 39 (asignacion -> variables EQUAL factor .)
    GLOBAL          reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ELSIF           reduce using rule 39 (asignacion -> variables EQUAL factor .)
    END             reduce using rule 39 (asignacion -> variables EQUAL factor .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33

    operadoresMat                  shift and go to state 28

state 66

    (40) asignacion -> variables EQUAL STRING .

    $end            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    PUTS            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ID              reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    CONSTANT        reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    GLOBAL          reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ELSIF           reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    END             reduce using rule 40 (asignacion -> variables EQUAL STRING .)


state 67

    (41) asignacion -> variables EQUAL booleanos .
    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    PUTS            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ID              reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    CONSTANT        reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    GLOBAL          reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ELSIF           reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    END             reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    AND             shift and go to state 62
    OR              shift and go to state 63
    EQUALSX2        shift and go to state 59
    NOTEQUALS       shift and go to state 60

    operadoresBool                 shift and go to state 61
    operadoresEquals               shift and go to state 64

state 68

    (42) asignacion -> variables EQUAL comparacion_bool .

    $end            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    PUTS            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ID              reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    CONSTANT        reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    GLOBAL          reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ELSIF           reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    END             reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)


state 69

    (43) asignacion -> variables EQUAL struct .

    $end            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    PUTS            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ID              reduce using rule 43 (asignacion -> variables EQUAL struct .)
    CONSTANT        reduce using rule 43 (asignacion -> variables EQUAL struct .)
    GLOBAL          reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ELSIF           reduce using rule 43 (asignacion -> variables EQUAL struct .)
    END             reduce using rule 43 (asignacion -> variables EQUAL struct .)


state 70

    (44) struct -> conjunto .

    $end            reduce using rule 44 (struct -> conjunto .)
    PUTS            reduce using rule 44 (struct -> conjunto .)
    ID              reduce using rule 44 (struct -> conjunto .)
    CONSTANT        reduce using rule 44 (struct -> conjunto .)
    GLOBAL          reduce using rule 44 (struct -> conjunto .)
    ELSIF           reduce using rule 44 (struct -> conjunto .)
    END             reduce using rule 44 (struct -> conjunto .)
    RPAREN          reduce using rule 44 (struct -> conjunto .)
    COMMA           reduce using rule 44 (struct -> conjunto .)
    RBRACE          reduce using rule 44 (struct -> conjunto .)


state 71

    (45) struct -> formacion .

    $end            reduce using rule 45 (struct -> formacion .)
    PUTS            reduce using rule 45 (struct -> formacion .)
    ID              reduce using rule 45 (struct -> formacion .)
    CONSTANT        reduce using rule 45 (struct -> formacion .)
    GLOBAL          reduce using rule 45 (struct -> formacion .)
    ELSIF           reduce using rule 45 (struct -> formacion .)
    END             reduce using rule 45 (struct -> formacion .)
    RPAREN          reduce using rule 45 (struct -> formacion .)
    COMMA           reduce using rule 45 (struct -> formacion .)
    RBRACE          reduce using rule 45 (struct -> formacion .)


state 72

    (46) struct -> hash .

    $end            reduce using rule 46 (struct -> hash .)
    PUTS            reduce using rule 46 (struct -> hash .)
    ID              reduce using rule 46 (struct -> hash .)
    CONSTANT        reduce using rule 46 (struct -> hash .)
    GLOBAL          reduce using rule 46 (struct -> hash .)
    ELSIF           reduce using rule 46 (struct -> hash .)
    END             reduce using rule 46 (struct -> hash .)
    RPAREN          reduce using rule 46 (struct -> hash .)
    COMMA           reduce using rule 46 (struct -> hash .)
    RBRACE          reduce using rule 46 (struct -> hash .)


state 73

    (47) conjunto -> SET . arr
    (48) conjunto -> SET . LCOR RCOR
    (56) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 100

    arr                            shift and go to state 99

state 74

    (76) formacion -> LCOR . repetirvalor RCOR
    (77) formacion -> LCOR . RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 102
    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 101
    valor                          shift and go to state 103
    booleanos                      shift and go to state 107

state 75

    (78) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 109


state 76

    (85) hash -> LBRACE . hash_content RBRACE
    (87) hash_content -> . hash_element
    (88) hash_content -> . hash_elements
    (89) hash_element -> . clave FLECHA value
    (86) hash_elements -> . hash_element hash_more_elements
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 115
    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_content                   shift and go to state 110
    hash_element                   shift and go to state 111
    hash_elements                  shift and go to state 112
    clave                          shift and go to state 113
    variables                      shift and go to state 114

state 77

    (60) funcionsconjunto -> variables PUNTO ADD . LPAREN valor RPAREN
    (61) funcionsconjunto -> variables PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 118


state 78

    (99) hash_delete -> variables PUNTO LPAREN . clave RPAREN
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 115
    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 114
    clave                          shift and go to state 119

state 79

    (62) funcionsconjunto -> variables PUNTO MERGE . LPAREN variables RPAREN

    LPAREN          shift and go to state 120


state 80

    (63) funcionsconjunto -> variables PUNTO SIZE . LPAREN RPAREN
    (64) funcionsconjunto -> variables PUNTO SIZE .

    LPAREN          shift and go to state 121
    $end            reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    PUTS            reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    ID              reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    CONSTANT        reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    GLOBAL          reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    ELSIF           reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)
    END             reduce using rule 64 (funcionsconjunto -> variables PUNTO SIZE .)


state 81

    (80) funcionsformacion -> variables PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 122


state 82

    (81) funcionsformacion -> variables PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 123


state 83

    (82) funcionsformacion -> variables PUNTO SAMPLE . LPAREN variables RPAREN

    LPAREN          shift and go to state 124


state 84

    (83) funcionsformacion -> variables PUNTO FIRST .
    (84) funcionsformacion -> variables PUNTO FIRST . LPAREN RPAREN

    $end            reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    PUTS            reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    ID              reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    CONSTANT        reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    GLOBAL          reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    ELSIF           reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    END             reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST .)
    LPAREN          shift and go to state 125


state 85

    (98) hash_add -> variables PUNTO STORE . LPAREN hash_element RPAREN

    LPAREN          shift and go to state 126


state 86

    (100) hash_key -> variables PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 127


state 87

    (13) leer -> GETS PUNTO CHOMP .

    $end            reduce using rule 13 (leer -> GETS PUNTO CHOMP .)


state 88

    (70) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    LPAREN          shift and go to state 128


state 89

    (75) sentenciawhile -> WHILE condicion DO . repetircontenido END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    repetircontenido               shift and go to state 129
    contenido                      shift and go to state 92
    impresion                      shift and go to state 93
    asignacion                     shift and go to state 94
    funcionstruct                  shift and go to state 95
    variables                      shift and go to state 96
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 90

    (74) condicion -> ARRAY PUNTO . NEW LPAREN arr RPAREN

    NEW             shift and go to state 130


state 91

    (104) sentenciaElsif -> IF condicion repetircontenido . mas_sentencias END
    (105) mas_sentencias -> . ELSIF repetircontenido
    (106) mas_sentencias -> . ELSIF repetircontenido mas_sentencias

    ELSIF           shift and go to state 132

    mas_sentencias                 shift and go to state 131

state 92

    (68) repetircontenido -> contenido .
    (69) repetircontenido -> contenido . repetircontenido
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    ELSIF           reduce using rule 68 (repetircontenido -> contenido .)
    END             reduce using rule 68 (repetircontenido -> contenido .)
    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    contenido                      shift and go to state 92
    repetircontenido               shift and go to state 133
    impresion                      shift and go to state 93
    asignacion                     shift and go to state 94
    funcionstruct                  shift and go to state 95
    variables                      shift and go to state 96
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 93

    (65) contenido -> impresion .

    PUTS            reduce using rule 65 (contenido -> impresion .)
    ID              reduce using rule 65 (contenido -> impresion .)
    CONSTANT        reduce using rule 65 (contenido -> impresion .)
    GLOBAL          reduce using rule 65 (contenido -> impresion .)
    ELSIF           reduce using rule 65 (contenido -> impresion .)
    END             reduce using rule 65 (contenido -> impresion .)


state 94

    (66) contenido -> asignacion .

    PUTS            reduce using rule 66 (contenido -> asignacion .)
    ID              reduce using rule 66 (contenido -> asignacion .)
    CONSTANT        reduce using rule 66 (contenido -> asignacion .)
    GLOBAL          reduce using rule 66 (contenido -> asignacion .)
    ELSIF           reduce using rule 66 (contenido -> asignacion .)
    END             reduce using rule 66 (contenido -> asignacion .)


state 95

    (67) contenido -> funcionstruct .

    PUTS            reduce using rule 67 (contenido -> funcionstruct .)
    ID              reduce using rule 67 (contenido -> funcionstruct .)
    CONSTANT        reduce using rule 67 (contenido -> funcionstruct .)
    GLOBAL          reduce using rule 67 (contenido -> funcionstruct .)
    ELSIF           reduce using rule 67 (contenido -> funcionstruct .)
    END             reduce using rule 67 (contenido -> funcionstruct .)


state 96

    (39) asignacion -> variables . EQUAL factor
    (40) asignacion -> variables . EQUAL STRING
    (41) asignacion -> variables . EQUAL booleanos
    (42) asignacion -> variables . EQUAL comparacion_bool
    (43) asignacion -> variables . EQUAL struct
    (60) funcionsconjunto -> variables . PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> variables . PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> variables . PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> variables . PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> variables . PUNTO SIZE
    (80) funcionsformacion -> variables . PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> variables . PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> variables . PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> variables . PUNTO FIRST
    (84) funcionsformacion -> variables . PUNTO FIRST LPAREN RPAREN
    (98) hash_add -> variables . PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> variables . PUNTO LPAREN clave RPAREN
    (100) hash_key -> variables . PUNTO KEY LPAREN value RPAREN

    EQUAL           shift and go to state 43
    PUNTO           shift and go to state 44


state 97

    (15) comparacion -> factor operadoresComp factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    $end            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PUTS            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ID              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    CONSTANT        reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    GLOBAL          reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ELSIF           reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    END             reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    DO              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    MOD             shift and go to state 33

    operadoresMat                  shift and go to state 28

state 98

    (16) comparacion_bool -> booleanos operadoresBool booleanos .

    $end            reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    PUTS            reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ID              reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    CONSTANT        reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    GLOBAL          reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ELSIF           reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    END             reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    DO              reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)


state 99

    (47) conjunto -> SET arr .

    $end            reduce using rule 47 (conjunto -> SET arr .)
    PUTS            reduce using rule 47 (conjunto -> SET arr .)
    ID              reduce using rule 47 (conjunto -> SET arr .)
    CONSTANT        reduce using rule 47 (conjunto -> SET arr .)
    GLOBAL          reduce using rule 47 (conjunto -> SET arr .)
    ELSIF           reduce using rule 47 (conjunto -> SET arr .)
    END             reduce using rule 47 (conjunto -> SET arr .)
    RPAREN          reduce using rule 47 (conjunto -> SET arr .)
    COMMA           reduce using rule 47 (conjunto -> SET arr .)
    RBRACE          reduce using rule 47 (conjunto -> SET arr .)


state 100

    (48) conjunto -> SET LCOR . RCOR
    (56) arr -> LCOR . repetirvalor RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 134
    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 135
    valor                          shift and go to state 103
    booleanos                      shift and go to state 107

state 101

    (76) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 136


state 102

    (77) formacion -> LCOR RCOR .

    $end            reduce using rule 77 (formacion -> LCOR RCOR .)
    PUTS            reduce using rule 77 (formacion -> LCOR RCOR .)
    ID              reduce using rule 77 (formacion -> LCOR RCOR .)
    CONSTANT        reduce using rule 77 (formacion -> LCOR RCOR .)
    GLOBAL          reduce using rule 77 (formacion -> LCOR RCOR .)
    ELSIF           reduce using rule 77 (formacion -> LCOR RCOR .)
    END             reduce using rule 77 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 77 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 77 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 77 (formacion -> LCOR RCOR .)


state 103

    (54) repetirvalor -> valor .
    (55) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 54 (repetirvalor -> valor .)
    RPAREN          reduce using rule 54 (repetirvalor -> valor .)
    COMMA           shift and go to state 137


state 104

    (49) valor -> INT .

    COMMA           reduce using rule 49 (valor -> INT .)
    RCOR            reduce using rule 49 (valor -> INT .)
    RPAREN          reduce using rule 49 (valor -> INT .)
    RBRACE          reduce using rule 49 (valor -> INT .)


state 105

    (50) valor -> ID .

    COMMA           reduce using rule 50 (valor -> ID .)
    RCOR            reduce using rule 50 (valor -> ID .)
    RPAREN          reduce using rule 50 (valor -> ID .)
    RBRACE          reduce using rule 50 (valor -> ID .)


state 106

    (51) valor -> STRING .

    COMMA           reduce using rule 51 (valor -> STRING .)
    RCOR            reduce using rule 51 (valor -> STRING .)
    RPAREN          reduce using rule 51 (valor -> STRING .)
    RBRACE          reduce using rule 51 (valor -> STRING .)


state 107

    (52) valor -> booleanos .

    COMMA           reduce using rule 52 (valor -> booleanos .)
    RCOR            reduce using rule 52 (valor -> booleanos .)
    RPAREN          reduce using rule 52 (valor -> booleanos .)
    RBRACE          reduce using rule 52 (valor -> booleanos .)


state 108

    (53) valor -> FLOAT .

    COMMA           reduce using rule 53 (valor -> FLOAT .)
    RCOR            reduce using rule 53 (valor -> FLOAT .)
    RPAREN          reduce using rule 53 (valor -> FLOAT .)
    RBRACE          reduce using rule 53 (valor -> FLOAT .)


state 109

    (78) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (79) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 138


state 110

    (85) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 139


state 111

    (87) hash_content -> hash_element .
    (86) hash_elements -> hash_element . hash_more_elements
    (90) hash_more_elements -> . COMMA hash_element
    (91) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 87 (hash_content -> hash_element .)
    COMMA           shift and go to state 141

    hash_more_elements             shift and go to state 140

state 112

    (88) hash_content -> hash_elements .

    RBRACE          reduce using rule 88 (hash_content -> hash_elements .)


state 113

    (89) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 142


state 114

    (92) clave -> variables .

    FLECHA          reduce using rule 92 (clave -> variables .)
    RPAREN          reduce using rule 92 (clave -> variables .)


state 115

    (93) clave -> STRING .

    FLECHA          reduce using rule 93 (clave -> STRING .)
    RPAREN          reduce using rule 93 (clave -> STRING .)


state 116

    (94) clave -> INT .

    FLECHA          reduce using rule 94 (clave -> INT .)
    RPAREN          reduce using rule 94 (clave -> INT .)


state 117

    (95) clave -> FLOAT .

    FLECHA          reduce using rule 95 (clave -> FLOAT .)
    RPAREN          reduce using rule 95 (clave -> FLOAT .)


state 118

    (60) funcionsconjunto -> variables PUNTO ADD LPAREN . valor RPAREN
    (61) funcionsconjunto -> variables PUNTO ADD LPAREN . arr RPAREN
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (56) arr -> . LCOR repetirvalor RCOR
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    LCOR            shift and go to state 145
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 143
    arr                            shift and go to state 144
    booleanos                      shift and go to state 107

state 119

    (99) hash_delete -> variables PUNTO LPAREN clave . RPAREN

    RPAREN          shift and go to state 146


state 120

    (62) funcionsconjunto -> variables PUNTO MERGE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 147

state 121

    (63) funcionsconjunto -> variables PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 148


state 122

    (80) funcionsformacion -> variables PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 149


state 123

    (81) funcionsformacion -> variables PUNTO PUSH LPAREN . repetirvalor RPAREN
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 150
    valor                          shift and go to state 103
    booleanos                      shift and go to state 107

state 124

    (82) funcionsformacion -> variables PUNTO SAMPLE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 151

state 125

    (84) funcionsformacion -> variables PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 152


state 126

    (98) hash_add -> variables PUNTO STORE LPAREN . hash_element RPAREN
    (89) hash_element -> . clave FLECHA value
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 115
    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 114
    hash_element                   shift and go to state 153
    clave                          shift and go to state 113

state 127

    (100) hash_key -> variables PUNTO KEY LPAREN . value RPAREN
    (96) value -> . valor
    (97) value -> . struct
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 73
    LCOR            shift and go to state 74
    ARRAY           shift and go to state 75
    LBRACE          shift and go to state 76

    value                          shift and go to state 154
    valor                          shift and go to state 155
    struct                         shift and go to state 156
    booleanos                      shift and go to state 107
    conjunto                       shift and go to state 70
    formacion                      shift and go to state 71
    hash                           shift and go to state 72

state 128

    (70) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN repetircontenido END

    INT             shift and go to state 157


state 129

    (75) sentenciawhile -> WHILE condicion DO repetircontenido . END

    END             shift and go to state 158


state 130

    (74) condicion -> ARRAY PUNTO NEW . LPAREN arr RPAREN

    LPAREN          shift and go to state 159


state 131

    (104) sentenciaElsif -> IF condicion repetircontenido mas_sentencias . END

    END             shift and go to state 160


state 132

    (105) mas_sentencias -> ELSIF . repetircontenido
    (106) mas_sentencias -> ELSIF . repetircontenido mas_sentencias
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    repetircontenido               shift and go to state 161
    contenido                      shift and go to state 92
    impresion                      shift and go to state 93
    asignacion                     shift and go to state 94
    funcionstruct                  shift and go to state 95
    variables                      shift and go to state 96
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 133

    (69) repetircontenido -> contenido repetircontenido .

    ELSIF           reduce using rule 69 (repetircontenido -> contenido repetircontenido .)
    END             reduce using rule 69 (repetircontenido -> contenido repetircontenido .)


state 134

    (48) conjunto -> SET LCOR RCOR .

    $end            reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    PUTS            reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    ID              reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    CONSTANT        reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    GLOBAL          reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    ELSIF           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    END             reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 48 (conjunto -> SET LCOR RCOR .)


state 135

    (56) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 162


state 136

    (76) formacion -> LCOR repetirvalor RCOR .

    $end            reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    ELSIF           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    END             reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)


state 137

    (55) repetirvalor -> valor COMMA . repetirvalor
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 103
    repetirvalor                   shift and go to state 163
    booleanos                      shift and go to state 107

state 138

    (78) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (79) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 164


state 139

    (85) hash -> LBRACE hash_content RBRACE .

    $end            reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    ID              reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    CONSTANT        reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    GLOBAL          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    ELSIF           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    END             reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)


state 140

    (86) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 86 (hash_elements -> hash_element hash_more_elements .)


state 141

    (90) hash_more_elements -> COMMA . hash_element
    (91) hash_more_elements -> COMMA . hash_element hash_more_elements
    (89) hash_element -> . clave FLECHA value
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 115
    INT             shift and go to state 116
    FLOAT           shift and go to state 117
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_element                   shift and go to state 165
    clave                          shift and go to state 113
    variables                      shift and go to state 114

state 142

    (89) hash_element -> clave FLECHA . value
    (96) value -> . valor
    (97) value -> . struct
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 73
    LCOR            shift and go to state 74
    ARRAY           shift and go to state 75
    LBRACE          shift and go to state 76

    value                          shift and go to state 166
    valor                          shift and go to state 155
    struct                         shift and go to state 156
    booleanos                      shift and go to state 107
    conjunto                       shift and go to state 70
    formacion                      shift and go to state 71
    hash                           shift and go to state 72

state 143

    (60) funcionsconjunto -> variables PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 167


state 144

    (61) funcionsconjunto -> variables PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 168


state 145

    (56) arr -> LCOR . repetirvalor RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 104
    ID              shift and go to state 105
    STRING          shift and go to state 106
    FLOAT           shift and go to state 108
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 135
    valor                          shift and go to state 103
    booleanos                      shift and go to state 107

state 146

    (99) hash_delete -> variables PUNTO LPAREN clave RPAREN .

    $end            reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    PUTS            reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    ID              reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    CONSTANT        reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    GLOBAL          reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    ELSIF           reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    END             reduce using rule 99 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)


state 147

    (62) funcionsconjunto -> variables PUNTO MERGE LPAREN variables . RPAREN

    RPAREN          shift and go to state 169


state 148

    (63) funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .

    $end            reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    PUTS            reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    ID              reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    CONSTANT        reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    GLOBAL          reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    ELSIF           reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    END             reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)


state 149

    (80) funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .

    $end            reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    PUTS            reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    ID              reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    CONSTANT        reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    GLOBAL          reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    ELSIF           reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    END             reduce using rule 80 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)


state 150

    (81) funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 170


state 151

    (82) funcionsformacion -> variables PUNTO SAMPLE LPAREN variables . RPAREN

    RPAREN          shift and go to state 171


state 152

    (84) funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .

    $end            reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    PUTS            reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    ID              reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    CONSTANT        reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    GLOBAL          reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    ELSIF           reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    END             reduce using rule 84 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)


state 153

    (98) hash_add -> variables PUNTO STORE LPAREN hash_element . RPAREN

    RPAREN          shift and go to state 172


state 154

    (100) hash_key -> variables PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 173


state 155

    (96) value -> valor .

    RPAREN          reduce using rule 96 (value -> valor .)
    COMMA           reduce using rule 96 (value -> valor .)
    RBRACE          reduce using rule 96 (value -> valor .)


state 156

    (97) value -> struct .

    RPAREN          reduce using rule 97 (value -> struct .)
    COMMA           reduce using rule 97 (value -> struct .)
    RBRACE          reduce using rule 97 (value -> struct .)


state 157

    (70) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 174


state 158

    (75) sentenciawhile -> WHILE condicion DO repetircontenido END .

    $end            reduce using rule 75 (sentenciawhile -> WHILE condicion DO repetircontenido END .)


state 159

    (74) condicion -> ARRAY PUNTO NEW LPAREN . arr RPAREN
    (56) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 145

    arr                            shift and go to state 175

state 160

    (104) sentenciaElsif -> IF condicion repetircontenido mas_sentencias END .

    $end            reduce using rule 104 (sentenciaElsif -> IF condicion repetircontenido mas_sentencias END .)


state 161

    (105) mas_sentencias -> ELSIF repetircontenido .
    (106) mas_sentencias -> ELSIF repetircontenido . mas_sentencias
    (105) mas_sentencias -> . ELSIF repetircontenido
    (106) mas_sentencias -> . ELSIF repetircontenido mas_sentencias

    END             reduce using rule 105 (mas_sentencias -> ELSIF repetircontenido .)
    ELSIF           shift and go to state 132

    mas_sentencias                 shift and go to state 176

state 162

    (56) arr -> LCOR repetirvalor RCOR .

    $end            reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    ELSIF           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    END             reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)


state 163

    (55) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 55 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 55 (repetirvalor -> valor COMMA repetirvalor .)


state 164

    (78) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (79) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 177
    RPAREN          shift and go to state 178


state 165

    (90) hash_more_elements -> COMMA hash_element .
    (91) hash_more_elements -> COMMA hash_element . hash_more_elements
    (90) hash_more_elements -> . COMMA hash_element
    (91) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 90 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 141

    hash_more_elements             shift and go to state 179

state 166

    (89) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 89 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 89 (hash_element -> clave FLECHA value .)
    RPAREN          reduce using rule 89 (hash_element -> clave FLECHA value .)


state 167

    (60) funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .

    $end            reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    PUTS            reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    ID              reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    CONSTANT        reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    GLOBAL          reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    ELSIF           reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    END             reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)


state 168

    (61) funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .

    $end            reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    PUTS            reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    ID              reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    ELSIF           reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    END             reduce using rule 61 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)


state 169

    (62) funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .

    $end            reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    PUTS            reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    ID              reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    ELSIF           reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    END             reduce using rule 62 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)


state 170

    (81) funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .

    $end            reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    PUTS            reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ID              reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    CONSTANT        reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    GLOBAL          reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ELSIF           reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    END             reduce using rule 81 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 171

    (82) funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .

    $end            reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    PUTS            reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    ID              reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    ELSIF           reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    END             reduce using rule 82 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)


state 172

    (98) hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .

    $end            reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    PUTS            reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    ID              reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    CONSTANT        reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    GLOBAL          reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    ELSIF           reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    END             reduce using rule 98 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)


state 173

    (100) hash_key -> variables PUNTO KEY LPAREN value RPAREN .

    $end            reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    PUTS            reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    ID              reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    CONSTANT        reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    GLOBAL          reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    ELSIF           reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    END             reduce using rule 100 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)


state 174

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 180


state 175

    (74) condicion -> ARRAY PUNTO NEW LPAREN arr . RPAREN

    RPAREN          shift and go to state 181


state 176

    (106) mas_sentencias -> ELSIF repetircontenido mas_sentencias .

    END             reduce using rule 106 (mas_sentencias -> ELSIF repetircontenido mas_sentencias .)


state 177

    (78) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 182


state 178

    (79) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    $end            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    PUTS            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ID              reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    CONSTANT        reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    GLOBAL          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ELSIF           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    END             reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 179

    (91) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 91 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 180

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN repetircontenido END

    INT             shift and go to state 183


state 181

    (74) condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .

    DO              reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    PUTS            reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    ID              reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)


state 182

    (78) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    $end            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    PUTS            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ID              reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    CONSTANT        reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    GLOBAL          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ELSIF           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    END             reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 183

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN repetircontenido END

    RPAREN          shift and go to state 184


state 184

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . repetircontenido END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . variables PUNTO SIZE
    (80) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . variables PUNTO FIRST
    (84) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (98) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (100) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 96
    repetircontenido               shift and go to state 185
    contenido                      shift and go to state 92
    impresion                      shift and go to state 93
    asignacion                     shift and go to state 94
    funcionstruct                  shift and go to state 95
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    hash_add                       shift and go to state 25
    hash_delete                    shift and go to state 26
    hash_key                       shift and go to state 27

state 185

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido . END

    END             shift and go to state 186


state 186

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .

    $end            reduce using rule 70 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for MOD in state 54 resolved as shift
