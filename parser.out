Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CLEAR
    DEF
    DEFINED
    ELSE
    FETCH
    NUMERAL
    RETURN

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> estructurasControl
Rule 7     cuerpo -> operaciones
Rule 8     cuerpo -> cuerpo NEWLINE cuerpo
Rule 9     impresion -> PUTS factor
Rule 10    impresion -> PUTS comparacion
Rule 11    impresion -> PUTS comparacion_bool
Rule 12    impresion -> PUTS STRING
Rule 13    impresion -> PUTS variables
Rule 14    leer -> PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP
Rule 15    expression -> factor operadoresMat factor
Rule 16    operacionstring -> STRING PLUS STRING
Rule 17    operacionstring -> STRING TIMES INT
Rule 18    operacionstring -> STRING PLUS operacionstring
Rule 19    operacionstring -> STRING TIMES INT PLUS operacionstring
Rule 20    operaciones -> operacionstring
Rule 21    operaciones -> comparacion_bool
Rule 22    operaciones -> comparacionb
Rule 23    operaciones -> comparacion
Rule 24    comparacion -> factor operadoresComp factor
Rule 25    comparacion -> factor operadoresEquals factor
Rule 26    comparacion -> STRING operadoresEquals STRING
Rule 27    comparacion -> comparacion operadoresBool comparacion
Rule 28    comparacion_bool -> booleanos operadoresEquals booleanos
Rule 29    comparacionb -> booleanos operadoresBool booleanos
Rule 30    comparacionb -> booleanos operadoresBool comparacionb
Rule 31    operadoresComp -> MAYORQUE
Rule 32    operadoresComp -> MENORQUE
Rule 33    operadoresComp -> operadoresEquals
Rule 34    operadoresMat -> PLUS
Rule 35    operadoresMat -> MINUS
Rule 36    operadoresMat -> TIMES
Rule 37    operadoresMat -> DIVIDE
Rule 38    operadoresMat -> MOD
Rule 39    factor -> INT
Rule 40    factor -> FLOAT
Rule 41    factor -> expression
Rule 42    booleanos -> TRUE
Rule 43    booleanos -> FALSE
Rule 44    operadoresBool -> AND
Rule 45    operadoresBool -> OR
Rule 46    operadoresEquals -> EQUALSX2
Rule 47    operadoresEquals -> NOTEQUALS
Rule 48    variables -> ID
Rule 49    variables -> CONSTANT
Rule 50    variables -> GLOBAL
Rule 51    asignacion -> variables EQUAL factor
Rule 52    asignacion -> variables EQUAL STRING
Rule 53    asignacion -> variables EQUAL booleanos
Rule 54    asignacion -> variables EQUAL struct
Rule 55    asignacion -> variables EQUAL operaciones
Rule 56    struct -> conjunto
Rule 57    struct -> formacion
Rule 58    struct -> hash
Rule 59    conjunto -> SET arr
Rule 60    conjunto -> SET LCOR RCOR
Rule 61    valor -> INT
Rule 62    valor -> STRING
Rule 63    valor -> booleanos
Rule 64    valor -> FLOAT
Rule 65    repetirvalor -> valor
Rule 66    repetirvalor -> valor COMMA repetirvalor
Rule 67    arr -> LCOR repetirvalor RCOR
Rule 68    funcionstruct -> funcionsconjunto
Rule 69    funcionstruct -> funcionsformacion
Rule 70    funcionstruct -> funcionsHash
Rule 71    funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN
Rule 72    funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN
Rule 73    funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN
Rule 74    funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN
Rule 75    funcionsconjunto -> conjunto PUNTO SIZE
Rule 76    contenido -> impresion
Rule 77    contenido -> asignacion
Rule 78    contenido -> funcionstruct
Rule 79    repetircontenido -> contenido
Rule 80    repetircontenido -> contenido SEMICOLON repetircontenido
Rule 81    condicion -> comparacion
Rule 82    condicion -> comparacion_bool
Rule 83    condicion -> comparacionb
Rule 84    condicion -> booleanos
Rule 85    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
Rule 86    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
Rule 87    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
Rule 88    sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END
Rule 89    sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
Rule 90    sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END
Rule 91    sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
Rule 92    sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END
Rule 93    sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END
Rule 94    estructurasControl -> sentenciaif
Rule 95    estructurasControl -> sentenciawhile
Rule 96    estructurasControl -> sentenciafor
Rule 97    formacion -> LCOR repetirvalor RCOR
Rule 98    formacion -> LCOR RCOR
Rule 99    formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 100   formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 101   funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN
Rule 102   funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 103   funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN
Rule 104   funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN
Rule 105   funcionsformacion -> formacion PUNTO FIRST
Rule 106   funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN
Rule 107   hash -> LBRACE hash_content RBRACE
Rule 108   hash_elements -> hash_element hash_more_elements
Rule 109   hash_content -> hash_element
Rule 110   hash_content -> hash_elements
Rule 111   hash_element -> clave FLECHA value
Rule 112   hash_more_elements -> COMMA hash_element
Rule 113   hash_more_elements -> COMMA hash_element hash_more_elements
Rule 114   clave -> STRING
Rule 115   clave -> INT
Rule 116   clave -> FLOAT
Rule 117   value -> valor
Rule 118   value -> struct
Rule 119   hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN
Rule 120   hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN
Rule 121   hash_key -> hash PUNTO KEY LPAREN value RPAREN
Rule 122   funcionsHash -> hash_add
Rule 123   funcionsHash -> hash_delete
Rule 124   funcionsHash -> hash_key

Terminals, with rules where they appear

ADD                  : 71 72
AND                  : 44
ARRAY                : 99 100
BREAK                : 
CHOMP                : 14
CLEAR                : 
COMMA                : 66 112 113 119
CONSTANT             : 49
DEF                  : 
DEFINED              : 
DELETE               : 120
DIVIDE               : 37
ELSE                 : 
ELSIF                : 90 91
END                  : 85 86 87 88 90 92 93
EQUAL                : 14 51 52 53 54 55
EQUALSX2             : 46
FALSE                : 43
FETCH                : 
FIRST                : 105 106
FLECHA               : 111
FLOAT                : 40 64 116
FOR                  : 85 86 87
GETS                 : 14
GLOBAL               : 50
ID                   : 48
IF                   : 88 89
IN                   : 85 86 87
INT                  : 17 19 39 61 85 85 86 86 87 87 99 104 115
KEY                  : 121
LBRACE               : 107
LCOR                 : 60 67 97 98
LENGTH               : 101
LPAREN               : 71 72 73 74 85 86 87 99 100 101 102 103 104 106 119 120 121
MAYORQUE             : 31
MENORQUE             : 32
MERGE                : 73
MINUS                : 35
MOD                  : 38
NEW                  : 99 100
NEWLINE              : 8 14 85 85 86 86 87 87 87 88 88 89 89 90 90 91 91 92 92 93 93
NOTEQUALS            : 47
NUMERAL              : 
OR                   : 45
PLUS                 : 16 18 19 34
PUNTO                : 14 71 72 73 74 75 85 85 86 86 87 87 99 100 101 102 103 104 105 106 119 120 121
PUSH                 : 102
PUTS                 : 9 10 11 12 13 14
RBRACE               : 107
RCOR                 : 60 67 97 98
RETURN               : 
RPAREN               : 71 72 73 74 85 86 87 99 100 101 102 103 104 106 119 120 121
SAMPLE               : 103 104
SEMICOLON            : 80
SET                  : 59 60
SIZE                 : 74 75
STORE                : 119
STRING               : 12 14 16 16 17 18 19 26 26 52 62 114
TIMES                : 17 19 36
TRUE                 : 42
WHILE                : 92 93
error                : 

Nonterminals, with rules where they appear

arr                  : 59 72
asignacion           : 3 77
booleanos            : 28 28 29 29 30 53 63 84
clave                : 111 119 120
comparacion          : 10 23 27 27 81
comparacion_bool     : 11 21 82
comparacionb         : 22 30 83
condicion            : 88 89 90 91 92 93
conjunto             : 56 71 72 73 73 74 75
contenido            : 79 80
cuerpo               : 8 8 0
estructurasControl   : 6
expression           : 1 41
factor               : 9 15 15 24 24 25 25 51
formacion            : 57 101 102 103 104 105 106
funcionsHash         : 70
funcionsconjunto     : 68
funcionsformacion    : 69
funcionstruct        : 5 78
hash                 : 58 119 120 121
hash_add             : 122
hash_content         : 107
hash_delete          : 123
hash_element         : 108 109 112 113
hash_elements        : 110
hash_key             : 124
hash_more_elements   : 108 113
impresion            : 2 76
leer                 : 4
operaciones          : 7 55
operacionstring      : 18 19 20
operadoresBool       : 27 29 30
operadoresComp       : 24
operadoresEquals     : 25 26 28 33
operadoresMat        : 15
repetircontenido     : 80 85 87 88 89 90 91 92
repetirvalor         : 66 67 97 102
sentenciaelsif       : 89 91
sentenciafor         : 96
sentenciaif          : 86 87 93 94
sentenciawhile       : 95
struct               : 54 118
valor                : 65 66 71 117
value                : 111 119 121
variables            : 13 14 51 52 53 54 55 85 86 87

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . estructurasControl
    (7) cuerpo -> . operaciones
    (8) cuerpo -> . cuerpo NEWLINE cuerpo
    (15) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (14) leer -> . PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (94) estructurasControl -> . sentenciaif
    (95) estructurasControl -> . sentenciawhile
    (96) estructurasControl -> . sentenciafor
    (20) operaciones -> . operacionstring
    (21) operaciones -> . comparacion_bool
    (22) operaciones -> . comparacionb
    (23) operaciones -> . comparacion
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (88) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (92) sentenciawhile -> . WHILE condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciawhile -> . WHILE condicion NEWLINE sentenciaif NEWLINE END
    (85) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (107) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    STRING          shift and go to state 13
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    LBRACE          shift and go to state 43

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    estructurasControl             shift and go to state 7
    operaciones                    shift and go to state 8
    factor                         shift and go to state 9
    comparacion                    shift and go to state 11
    comparacion_bool               shift and go to state 12
    variables                      shift and go to state 14
    booleanos                      shift and go to state 15
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    sentenciaif                    shift and go to state 19
    sentenciawhile                 shift and go to state 20
    sentenciafor                   shift and go to state 21
    operacionstring                shift and go to state 22
    comparacionb                   shift and go to state 23
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 1

    (0) S' -> cuerpo .
    (8) cuerpo -> cuerpo . NEWLINE cuerpo

    NEWLINE         shift and go to state 44


state 2

    (1) cuerpo -> expression .
    (41) factor -> expression .

    NEWLINE         reduce using rule 1 (cuerpo -> expression .)
    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 41 (factor -> expression .)
    MINUS           reduce using rule 41 (factor -> expression .)
    TIMES           reduce using rule 41 (factor -> expression .)
    DIVIDE          reduce using rule 41 (factor -> expression .)
    MOD             reduce using rule 41 (factor -> expression .)
    MAYORQUE        reduce using rule 41 (factor -> expression .)
    MENORQUE        reduce using rule 41 (factor -> expression .)
    EQUALSX2        reduce using rule 41 (factor -> expression .)
    NOTEQUALS       reduce using rule 41 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    NEWLINE         reduce using rule 2 (cuerpo -> impresion .)
    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    NEWLINE         reduce using rule 3 (cuerpo -> asignacion .)
    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    NEWLINE         reduce using rule 4 (cuerpo -> leer .)
    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    NEWLINE         reduce using rule 5 (cuerpo -> funcionstruct .)
    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> estructurasControl .

    NEWLINE         reduce using rule 6 (cuerpo -> estructurasControl .)
    $end            reduce using rule 6 (cuerpo -> estructurasControl .)


state 8

    (7) cuerpo -> operaciones .

    NEWLINE         reduce using rule 7 (cuerpo -> operaciones .)
    $end            reduce using rule 7 (cuerpo -> operaciones .)


state 9

    (15) expression -> factor . operadoresMat factor
    (24) comparacion -> factor . operadoresComp factor
    (25) comparacion -> factor . operadoresEquals factor
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD
    (31) operadoresComp -> . MAYORQUE
    (32) operadoresComp -> . MENORQUE
    (33) operadoresComp -> . operadoresEquals
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52
    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresMat                  shift and go to state 45
    operadoresComp                 shift and go to state 46
    operadoresEquals               shift and go to state 47

state 10

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (13) impresion -> PUTS . variables
    (14) leer -> PUTS . STRING NEWLINE variables EQUAL GETS PUNTO CHOMP
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (15) expression -> . factor operadoresMat factor
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    STRING          shift and go to state 60
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    factor                         shift and go to state 57
    comparacion                    shift and go to state 58
    comparacion_bool               shift and go to state 59
    variables                      shift and go to state 61
    expression                     shift and go to state 62
    booleanos                      shift and go to state 63

state 11

    (23) operaciones -> comparacion .
    (27) comparacion -> comparacion . operadoresBool comparacion
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 23 (operaciones -> comparacion .)
    $end            reduce using rule 23 (operaciones -> comparacion .)
    SEMICOLON       reduce using rule 23 (operaciones -> comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 64

state 12

    (21) operaciones -> comparacion_bool .

    NEWLINE         reduce using rule 21 (operaciones -> comparacion_bool .)
    $end            reduce using rule 21 (operaciones -> comparacion_bool .)
    SEMICOLON       reduce using rule 21 (operaciones -> comparacion_bool .)


state 13

    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring
    (26) comparacion -> STRING . operadoresEquals STRING
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    PLUS            shift and go to state 67
    TIMES           shift and go to state 68
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresEquals               shift and go to state 69

state 14

    (51) asignacion -> variables . EQUAL factor
    (52) asignacion -> variables . EQUAL STRING
    (53) asignacion -> variables . EQUAL booleanos
    (54) asignacion -> variables . EQUAL struct
    (55) asignacion -> variables . EQUAL operaciones

    EQUAL           shift and go to state 70


state 15

    (28) comparacion_bool -> booleanos . operadoresEquals booleanos
    (29) comparacionb -> booleanos . operadoresBool booleanos
    (30) comparacionb -> booleanos . operadoresBool comparacionb
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 71
    operadoresBool                 shift and go to state 72

state 16

    (68) funcionstruct -> funcionsconjunto .

    NEWLINE         reduce using rule 68 (funcionstruct -> funcionsconjunto .)
    $end            reduce using rule 68 (funcionstruct -> funcionsconjunto .)
    SEMICOLON       reduce using rule 68 (funcionstruct -> funcionsconjunto .)


state 17

    (69) funcionstruct -> funcionsformacion .

    NEWLINE         reduce using rule 69 (funcionstruct -> funcionsformacion .)
    $end            reduce using rule 69 (funcionstruct -> funcionsformacion .)
    SEMICOLON       reduce using rule 69 (funcionstruct -> funcionsformacion .)


state 18

    (70) funcionstruct -> funcionsHash .

    NEWLINE         reduce using rule 70 (funcionstruct -> funcionsHash .)
    $end            reduce using rule 70 (funcionstruct -> funcionsHash .)
    SEMICOLON       reduce using rule 70 (funcionstruct -> funcionsHash .)


state 19

    (94) estructurasControl -> sentenciaif .

    NEWLINE         reduce using rule 94 (estructurasControl -> sentenciaif .)
    $end            reduce using rule 94 (estructurasControl -> sentenciaif .)


state 20

    (95) estructurasControl -> sentenciawhile .

    NEWLINE         reduce using rule 95 (estructurasControl -> sentenciawhile .)
    $end            reduce using rule 95 (estructurasControl -> sentenciawhile .)


state 21

    (96) estructurasControl -> sentenciafor .

    NEWLINE         reduce using rule 96 (estructurasControl -> sentenciafor .)
    $end            reduce using rule 96 (estructurasControl -> sentenciafor .)


state 22

    (20) operaciones -> operacionstring .

    NEWLINE         reduce using rule 20 (operaciones -> operacionstring .)
    $end            reduce using rule 20 (operaciones -> operacionstring .)
    SEMICOLON       reduce using rule 20 (operaciones -> operacionstring .)


state 23

    (22) operaciones -> comparacionb .

    NEWLINE         reduce using rule 22 (operaciones -> comparacionb .)
    $end            reduce using rule 22 (operaciones -> comparacionb .)
    SEMICOLON       reduce using rule 22 (operaciones -> comparacionb .)


state 24

    (39) factor -> INT .

    PLUS            reduce using rule 39 (factor -> INT .)
    MINUS           reduce using rule 39 (factor -> INT .)
    TIMES           reduce using rule 39 (factor -> INT .)
    DIVIDE          reduce using rule 39 (factor -> INT .)
    MOD             reduce using rule 39 (factor -> INT .)
    MAYORQUE        reduce using rule 39 (factor -> INT .)
    MENORQUE        reduce using rule 39 (factor -> INT .)
    EQUALSX2        reduce using rule 39 (factor -> INT .)
    NOTEQUALS       reduce using rule 39 (factor -> INT .)
    NEWLINE         reduce using rule 39 (factor -> INT .)
    $end            reduce using rule 39 (factor -> INT .)
    AND             reduce using rule 39 (factor -> INT .)
    OR              reduce using rule 39 (factor -> INT .)
    SEMICOLON       reduce using rule 39 (factor -> INT .)


state 25

    (40) factor -> FLOAT .

    PLUS            reduce using rule 40 (factor -> FLOAT .)
    MINUS           reduce using rule 40 (factor -> FLOAT .)
    TIMES           reduce using rule 40 (factor -> FLOAT .)
    DIVIDE          reduce using rule 40 (factor -> FLOAT .)
    MOD             reduce using rule 40 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 40 (factor -> FLOAT .)
    MENORQUE        reduce using rule 40 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 40 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 40 (factor -> FLOAT .)
    NEWLINE         reduce using rule 40 (factor -> FLOAT .)
    $end            reduce using rule 40 (factor -> FLOAT .)
    AND             reduce using rule 40 (factor -> FLOAT .)
    OR              reduce using rule 40 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 40 (factor -> FLOAT .)


state 26

    (48) variables -> ID .

    EQUAL           reduce using rule 48 (variables -> ID .)
    NEWLINE         reduce using rule 48 (variables -> ID .)
    $end            reduce using rule 48 (variables -> ID .)
    IN              reduce using rule 48 (variables -> ID .)
    SEMICOLON       reduce using rule 48 (variables -> ID .)


state 27

    (49) variables -> CONSTANT .

    EQUAL           reduce using rule 49 (variables -> CONSTANT .)
    NEWLINE         reduce using rule 49 (variables -> CONSTANT .)
    $end            reduce using rule 49 (variables -> CONSTANT .)
    IN              reduce using rule 49 (variables -> CONSTANT .)
    SEMICOLON       reduce using rule 49 (variables -> CONSTANT .)


state 28

    (50) variables -> GLOBAL .

    EQUAL           reduce using rule 50 (variables -> GLOBAL .)
    NEWLINE         reduce using rule 50 (variables -> GLOBAL .)
    $end            reduce using rule 50 (variables -> GLOBAL .)
    IN              reduce using rule 50 (variables -> GLOBAL .)
    SEMICOLON       reduce using rule 50 (variables -> GLOBAL .)


state 29

    (71) funcionsconjunto -> conjunto . PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> conjunto . PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> conjunto . PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> conjunto . PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> conjunto . PUNTO SIZE

    PUNTO           shift and go to state 73


state 30

    (101) funcionsformacion -> formacion . PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> formacion . PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> formacion . PUNTO FIRST
    (106) funcionsformacion -> formacion . PUNTO FIRST LPAREN RPAREN

    PUNTO           shift and go to state 74


state 31

    (122) funcionsHash -> hash_add .

    NEWLINE         reduce using rule 122 (funcionsHash -> hash_add .)
    $end            reduce using rule 122 (funcionsHash -> hash_add .)
    SEMICOLON       reduce using rule 122 (funcionsHash -> hash_add .)


state 32

    (123) funcionsHash -> hash_delete .

    NEWLINE         reduce using rule 123 (funcionsHash -> hash_delete .)
    $end            reduce using rule 123 (funcionsHash -> hash_delete .)
    SEMICOLON       reduce using rule 123 (funcionsHash -> hash_delete .)


state 33

    (124) funcionsHash -> hash_key .

    NEWLINE         reduce using rule 124 (funcionsHash -> hash_key .)
    $end            reduce using rule 124 (funcionsHash -> hash_key .)
    SEMICOLON       reduce using rule 124 (funcionsHash -> hash_key .)


state 34

    (88) sentenciaif -> IF . condicion NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> IF . condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (81) condicion -> . comparacion
    (82) condicion -> . comparacion_bool
    (83) condicion -> . comparacionb
    (84) condicion -> . booleanos
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 81
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 75
    comparacion                    shift and go to state 76
    comparacion_bool               shift and go to state 77
    comparacionb                   shift and go to state 78
    booleanos                      shift and go to state 79
    factor                         shift and go to state 80
    expression                     shift and go to state 62

state 35

    (92) sentenciawhile -> WHILE . condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciawhile -> WHILE . condicion NEWLINE sentenciaif NEWLINE END
    (81) condicion -> . comparacion
    (82) condicion -> . comparacion_bool
    (83) condicion -> . comparacionb
    (84) condicion -> . booleanos
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 81
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 82
    comparacion                    shift and go to state 76
    comparacion_bool               shift and go to state 77
    comparacionb                   shift and go to state 78
    booleanos                      shift and go to state 79
    factor                         shift and go to state 80
    expression                     shift and go to state 62

state 36

    (85) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL

    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28

    variables                      shift and go to state 83

state 37

    (59) conjunto -> SET . arr
    (60) conjunto -> SET . LCOR RCOR
    (67) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 85

    arr                            shift and go to state 84

state 38

    (97) formacion -> LCOR . repetirvalor RCOR
    (98) formacion -> LCOR . RCOR
    (65) repetirvalor -> . valor
    (66) repetirvalor -> . valor COMMA repetirvalor
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    RCOR            shift and go to state 87
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 86
    valor                          shift and go to state 88
    booleanos                      shift and go to state 91

state 39

    (99) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 93


state 40

    (119) hash_add -> hash . PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> hash . PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> hash . PUNTO KEY LPAREN value RPAREN

    PUNTO           shift and go to state 94


state 41

    (42) booleanos -> TRUE .

    EQUALSX2        reduce using rule 42 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 42 (booleanos -> TRUE .)
    AND             reduce using rule 42 (booleanos -> TRUE .)
    OR              reduce using rule 42 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 42 (booleanos -> TRUE .)
    COMMA           reduce using rule 42 (booleanos -> TRUE .)
    RCOR            reduce using rule 42 (booleanos -> TRUE .)
    $end            reduce using rule 42 (booleanos -> TRUE .)
    SEMICOLON       reduce using rule 42 (booleanos -> TRUE .)
    RPAREN          reduce using rule 42 (booleanos -> TRUE .)
    RBRACE          reduce using rule 42 (booleanos -> TRUE .)


state 42

    (43) booleanos -> FALSE .

    EQUALSX2        reduce using rule 43 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 43 (booleanos -> FALSE .)
    AND             reduce using rule 43 (booleanos -> FALSE .)
    OR              reduce using rule 43 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 43 (booleanos -> FALSE .)
    COMMA           reduce using rule 43 (booleanos -> FALSE .)
    RCOR            reduce using rule 43 (booleanos -> FALSE .)
    $end            reduce using rule 43 (booleanos -> FALSE .)
    SEMICOLON       reduce using rule 43 (booleanos -> FALSE .)
    RPAREN          reduce using rule 43 (booleanos -> FALSE .)
    RBRACE          reduce using rule 43 (booleanos -> FALSE .)


state 43

    (107) hash -> LBRACE . hash_content RBRACE
    (109) hash_content -> . hash_element
    (110) hash_content -> . hash_elements
    (111) hash_element -> . clave FLECHA value
    (108) hash_elements -> . hash_element hash_more_elements
    (114) clave -> . STRING
    (115) clave -> . INT
    (116) clave -> . FLOAT

    STRING          shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101

    hash_content                   shift and go to state 95
    hash_element                   shift and go to state 96
    hash_elements                  shift and go to state 97
    clave                          shift and go to state 98

state 44

    (8) cuerpo -> cuerpo NEWLINE . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . estructurasControl
    (7) cuerpo -> . operaciones
    (8) cuerpo -> . cuerpo NEWLINE cuerpo
    (15) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (14) leer -> . PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (94) estructurasControl -> . sentenciaif
    (95) estructurasControl -> . sentenciawhile
    (96) estructurasControl -> . sentenciafor
    (20) operaciones -> . operacionstring
    (21) operaciones -> . comparacion_bool
    (22) operaciones -> . comparacionb
    (23) operaciones -> . comparacion
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (88) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (92) sentenciawhile -> . WHILE condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciawhile -> . WHILE condicion NEWLINE sentenciaif NEWLINE END
    (85) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (107) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    STRING          shift and go to state 13
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    LBRACE          shift and go to state 43

    cuerpo                         shift and go to state 102
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    estructurasControl             shift and go to state 7
    operaciones                    shift and go to state 8
    factor                         shift and go to state 9
    comparacion                    shift and go to state 11
    comparacion_bool               shift and go to state 12
    variables                      shift and go to state 14
    booleanos                      shift and go to state 15
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    sentenciaif                    shift and go to state 19
    sentenciawhile                 shift and go to state 20
    sentenciafor                   shift and go to state 21
    operacionstring                shift and go to state 22
    comparacionb                   shift and go to state 23
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 45

    (15) expression -> factor operadoresMat . factor
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    factor                         shift and go to state 103
    expression                     shift and go to state 62

state 46

    (24) comparacion -> factor operadoresComp . factor
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    factor                         shift and go to state 104
    expression                     shift and go to state 62

state 47

    (25) comparacion -> factor operadoresEquals . factor
    (33) operadoresComp -> operadoresEquals .
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

  ! INT             [ reduce using rule 33 (operadoresComp -> operadoresEquals .) ]
  ! FLOAT           [ reduce using rule 33 (operadoresComp -> operadoresEquals .) ]

    factor                         shift and go to state 105
    expression                     shift and go to state 62

state 48

    (34) operadoresMat -> PLUS .

    INT             reduce using rule 34 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 34 (operadoresMat -> PLUS .)


state 49

    (35) operadoresMat -> MINUS .

    INT             reduce using rule 35 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 35 (operadoresMat -> MINUS .)


state 50

    (36) operadoresMat -> TIMES .

    INT             reduce using rule 36 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 36 (operadoresMat -> TIMES .)


state 51

    (37) operadoresMat -> DIVIDE .

    INT             reduce using rule 37 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 37 (operadoresMat -> DIVIDE .)


state 52

    (38) operadoresMat -> MOD .

    INT             reduce using rule 38 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 38 (operadoresMat -> MOD .)


state 53

    (31) operadoresComp -> MAYORQUE .

    INT             reduce using rule 31 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 31 (operadoresComp -> MAYORQUE .)


state 54

    (32) operadoresComp -> MENORQUE .

    INT             reduce using rule 32 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 32 (operadoresComp -> MENORQUE .)


state 55

    (46) operadoresEquals -> EQUALSX2 .

    INT             reduce using rule 46 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 46 (operadoresEquals -> EQUALSX2 .)
    STRING          reduce using rule 46 (operadoresEquals -> EQUALSX2 .)
    TRUE            reduce using rule 46 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 46 (operadoresEquals -> EQUALSX2 .)


state 56

    (47) operadoresEquals -> NOTEQUALS .

    INT             reduce using rule 47 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 47 (operadoresEquals -> NOTEQUALS .)
    STRING          reduce using rule 47 (operadoresEquals -> NOTEQUALS .)
    TRUE            reduce using rule 47 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 47 (operadoresEquals -> NOTEQUALS .)


state 57

    (9) impresion -> PUTS factor .
    (24) comparacion -> factor . operadoresComp factor
    (25) comparacion -> factor . operadoresEquals factor
    (15) expression -> factor . operadoresMat factor
    (31) operadoresComp -> . MAYORQUE
    (32) operadoresComp -> . MENORQUE
    (33) operadoresComp -> . operadoresEquals
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD

    NEWLINE         reduce using rule 9 (impresion -> PUTS factor .)
    $end            reduce using rule 9 (impresion -> PUTS factor .)
    SEMICOLON       reduce using rule 9 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52

    operadoresComp                 shift and go to state 46
    operadoresEquals               shift and go to state 47
    operadoresMat                  shift and go to state 45

state 58

    (10) impresion -> PUTS comparacion .
    (27) comparacion -> comparacion . operadoresBool comparacion
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 10 (impresion -> PUTS comparacion .)
    $end            reduce using rule 10 (impresion -> PUTS comparacion .)
    SEMICOLON       reduce using rule 10 (impresion -> PUTS comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 64

state 59

    (11) impresion -> PUTS comparacion_bool .

    NEWLINE         reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    $end            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    SEMICOLON       reduce using rule 11 (impresion -> PUTS comparacion_bool .)


state 60

    (12) impresion -> PUTS STRING .
    (14) leer -> PUTS STRING . NEWLINE variables EQUAL GETS PUNTO CHOMP
    (26) comparacion -> STRING . operadoresEquals STRING
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

  ! shift/reduce conflict for NEWLINE resolved as shift
    $end            reduce using rule 12 (impresion -> PUTS STRING .)
    NEWLINE         shift and go to state 106
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

  ! NEWLINE         [ reduce using rule 12 (impresion -> PUTS STRING .) ]

    operadoresEquals               shift and go to state 69

state 61

    (13) impresion -> PUTS variables .

    NEWLINE         reduce using rule 13 (impresion -> PUTS variables .)
    $end            reduce using rule 13 (impresion -> PUTS variables .)
    SEMICOLON       reduce using rule 13 (impresion -> PUTS variables .)


state 62

    (41) factor -> expression .

    MAYORQUE        reduce using rule 41 (factor -> expression .)
    MENORQUE        reduce using rule 41 (factor -> expression .)
    EQUALSX2        reduce using rule 41 (factor -> expression .)
    NOTEQUALS       reduce using rule 41 (factor -> expression .)
    PLUS            reduce using rule 41 (factor -> expression .)
    MINUS           reduce using rule 41 (factor -> expression .)
    TIMES           reduce using rule 41 (factor -> expression .)
    DIVIDE          reduce using rule 41 (factor -> expression .)
    MOD             reduce using rule 41 (factor -> expression .)
    NEWLINE         reduce using rule 41 (factor -> expression .)
    $end            reduce using rule 41 (factor -> expression .)
    AND             reduce using rule 41 (factor -> expression .)
    OR              reduce using rule 41 (factor -> expression .)
    SEMICOLON       reduce using rule 41 (factor -> expression .)


state 63

    (28) comparacion_bool -> booleanos . operadoresEquals booleanos
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresEquals               shift and go to state 71

state 64

    (27) comparacion -> comparacion operadoresBool . comparacion
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 81
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    comparacion                    shift and go to state 107
    factor                         shift and go to state 80
    expression                     shift and go to state 62

state 65

    (44) operadoresBool -> AND .

    STRING          reduce using rule 44 (operadoresBool -> AND .)
    INT             reduce using rule 44 (operadoresBool -> AND .)
    FLOAT           reduce using rule 44 (operadoresBool -> AND .)
    TRUE            reduce using rule 44 (operadoresBool -> AND .)
    FALSE           reduce using rule 44 (operadoresBool -> AND .)


state 66

    (45) operadoresBool -> OR .

    STRING          reduce using rule 45 (operadoresBool -> OR .)
    INT             reduce using rule 45 (operadoresBool -> OR .)
    FLOAT           reduce using rule 45 (operadoresBool -> OR .)
    TRUE            reduce using rule 45 (operadoresBool -> OR .)
    FALSE           reduce using rule 45 (operadoresBool -> OR .)


state 67

    (16) operacionstring -> STRING PLUS . STRING
    (18) operacionstring -> STRING PLUS . operacionstring
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring

    STRING          shift and go to state 108

    operacionstring                shift and go to state 109

state 68

    (17) operacionstring -> STRING TIMES . INT
    (19) operacionstring -> STRING TIMES . INT PLUS operacionstring

    INT             shift and go to state 110


state 69

    (26) comparacion -> STRING operadoresEquals . STRING

    STRING          shift and go to state 111


state 70

    (51) asignacion -> variables EQUAL . factor
    (52) asignacion -> variables EQUAL . STRING
    (53) asignacion -> variables EQUAL . booleanos
    (54) asignacion -> variables EQUAL . struct
    (55) asignacion -> variables EQUAL . operaciones
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (56) struct -> . conjunto
    (57) struct -> . formacion
    (58) struct -> . hash
    (20) operaciones -> . operacionstring
    (21) operaciones -> . comparacion_bool
    (22) operaciones -> . comparacionb
    (23) operaciones -> . comparacion
    (15) expression -> . factor operadoresMat factor
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (107) hash -> . LBRACE hash_content RBRACE
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion

    STRING          shift and go to state 113
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    factor                         shift and go to state 112
    booleanos                      shift and go to state 114
    struct                         shift and go to state 115
    operaciones                    shift and go to state 116
    expression                     shift and go to state 62
    conjunto                       shift and go to state 117
    formacion                      shift and go to state 118
    hash                           shift and go to state 119
    operacionstring                shift and go to state 22
    comparacion_bool               shift and go to state 12
    comparacionb                   shift and go to state 23
    comparacion                    shift and go to state 11

state 71

    (28) comparacion_bool -> booleanos operadoresEquals . booleanos
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleanos                      shift and go to state 120

state 72

    (29) comparacionb -> booleanos operadoresBool . booleanos
    (30) comparacionb -> booleanos operadoresBool . comparacionb
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleanos                      shift and go to state 121
    comparacionb                   shift and go to state 122

state 73

    (71) funcionsconjunto -> conjunto PUNTO . ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> conjunto PUNTO . ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> conjunto PUNTO . MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> conjunto PUNTO . SIZE LPAREN RPAREN
    (75) funcionsconjunto -> conjunto PUNTO . SIZE

    ADD             shift and go to state 123
    MERGE           shift and go to state 124
    SIZE            shift and go to state 125


state 74

    (101) funcionsformacion -> formacion PUNTO . LENGTH LPAREN RPAREN
    (102) funcionsformacion -> formacion PUNTO . PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> formacion PUNTO . FIRST
    (106) funcionsformacion -> formacion PUNTO . FIRST LPAREN RPAREN

    LENGTH          shift and go to state 126
    PUSH            shift and go to state 127
    SAMPLE          shift and go to state 128
    FIRST           shift and go to state 129


state 75

    (88) sentenciaif -> IF condicion . NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> IF condicion . NEWLINE repetircontenido NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 130


state 76

    (81) condicion -> comparacion .
    (27) comparacion -> comparacion . operadoresBool comparacion
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 81 (condicion -> comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 64

state 77

    (82) condicion -> comparacion_bool .

    NEWLINE         reduce using rule 82 (condicion -> comparacion_bool .)


state 78

    (83) condicion -> comparacionb .

    NEWLINE         reduce using rule 83 (condicion -> comparacionb .)


state 79

    (84) condicion -> booleanos .
    (28) comparacion_bool -> booleanos . operadoresEquals booleanos
    (29) comparacionb -> booleanos . operadoresBool booleanos
    (30) comparacionb -> booleanos . operadoresBool comparacionb
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 84 (condicion -> booleanos .)
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 71
    operadoresBool                 shift and go to state 72

state 80

    (24) comparacion -> factor . operadoresComp factor
    (25) comparacion -> factor . operadoresEquals factor
    (15) expression -> factor . operadoresMat factor
    (31) operadoresComp -> . MAYORQUE
    (32) operadoresComp -> . MENORQUE
    (33) operadoresComp -> . operadoresEquals
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD

    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52

    operadoresComp                 shift and go to state 46
    operadoresEquals               shift and go to state 47
    operadoresMat                  shift and go to state 45

state 81

    (26) comparacion -> STRING . operadoresEquals STRING
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresEquals               shift and go to state 69

state 82

    (92) sentenciawhile -> WHILE condicion . NEWLINE repetircontenido NEWLINE END
    (93) sentenciawhile -> WHILE condicion . NEWLINE sentenciaif NEWLINE END

    NEWLINE         shift and go to state 131


state 83

    (85) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    IN              shift and go to state 132


state 84

    (59) conjunto -> SET arr .

    PUNTO           reduce using rule 59 (conjunto -> SET arr .)
    NEWLINE         reduce using rule 59 (conjunto -> SET arr .)
    $end            reduce using rule 59 (conjunto -> SET arr .)
    SEMICOLON       reduce using rule 59 (conjunto -> SET arr .)
    COMMA           reduce using rule 59 (conjunto -> SET arr .)
    RBRACE          reduce using rule 59 (conjunto -> SET arr .)
    RPAREN          reduce using rule 59 (conjunto -> SET arr .)


state 85

    (60) conjunto -> SET LCOR . RCOR
    (67) arr -> LCOR . repetirvalor RCOR
    (65) repetirvalor -> . valor
    (66) repetirvalor -> . valor COMMA repetirvalor
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    RCOR            shift and go to state 133
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 134
    valor                          shift and go to state 88
    booleanos                      shift and go to state 91

state 86

    (97) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 135


state 87

    (98) formacion -> LCOR RCOR .

    PUNTO           reduce using rule 98 (formacion -> LCOR RCOR .)
    NEWLINE         reduce using rule 98 (formacion -> LCOR RCOR .)
    $end            reduce using rule 98 (formacion -> LCOR RCOR .)
    SEMICOLON       reduce using rule 98 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 98 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 98 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 98 (formacion -> LCOR RCOR .)


state 88

    (65) repetirvalor -> valor .
    (66) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 65 (repetirvalor -> valor .)
    RPAREN          reduce using rule 65 (repetirvalor -> valor .)
    COMMA           shift and go to state 136


state 89

    (61) valor -> INT .

    COMMA           reduce using rule 61 (valor -> INT .)
    RCOR            reduce using rule 61 (valor -> INT .)
    RPAREN          reduce using rule 61 (valor -> INT .)
    RBRACE          reduce using rule 61 (valor -> INT .)


state 90

    (62) valor -> STRING .

    COMMA           reduce using rule 62 (valor -> STRING .)
    RCOR            reduce using rule 62 (valor -> STRING .)
    RPAREN          reduce using rule 62 (valor -> STRING .)
    RBRACE          reduce using rule 62 (valor -> STRING .)


state 91

    (63) valor -> booleanos .

    COMMA           reduce using rule 63 (valor -> booleanos .)
    RCOR            reduce using rule 63 (valor -> booleanos .)
    RPAREN          reduce using rule 63 (valor -> booleanos .)
    RBRACE          reduce using rule 63 (valor -> booleanos .)


state 92

    (64) valor -> FLOAT .

    COMMA           reduce using rule 64 (valor -> FLOAT .)
    RCOR            reduce using rule 64 (valor -> FLOAT .)
    RPAREN          reduce using rule 64 (valor -> FLOAT .)
    RBRACE          reduce using rule 64 (valor -> FLOAT .)


state 93

    (99) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (100) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 137


state 94

    (119) hash_add -> hash PUNTO . STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> hash PUNTO . DELETE LPAREN clave RPAREN
    (121) hash_key -> hash PUNTO . KEY LPAREN value RPAREN

    STORE           shift and go to state 138
    DELETE          shift and go to state 139
    KEY             shift and go to state 140


state 95

    (107) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 141


state 96

    (109) hash_content -> hash_element .
    (108) hash_elements -> hash_element . hash_more_elements
    (112) hash_more_elements -> . COMMA hash_element
    (113) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 109 (hash_content -> hash_element .)
    COMMA           shift and go to state 143

    hash_more_elements             shift and go to state 142

state 97

    (110) hash_content -> hash_elements .

    RBRACE          reduce using rule 110 (hash_content -> hash_elements .)


state 98

    (111) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 144


state 99

    (114) clave -> STRING .

    FLECHA          reduce using rule 114 (clave -> STRING .)
    COMMA           reduce using rule 114 (clave -> STRING .)
    RPAREN          reduce using rule 114 (clave -> STRING .)


state 100

    (115) clave -> INT .

    FLECHA          reduce using rule 115 (clave -> INT .)
    COMMA           reduce using rule 115 (clave -> INT .)
    RPAREN          reduce using rule 115 (clave -> INT .)


state 101

    (116) clave -> FLOAT .

    FLECHA          reduce using rule 116 (clave -> FLOAT .)
    COMMA           reduce using rule 116 (clave -> FLOAT .)
    RPAREN          reduce using rule 116 (clave -> FLOAT .)


state 102

    (8) cuerpo -> cuerpo NEWLINE cuerpo .
    (8) cuerpo -> cuerpo . NEWLINE cuerpo

  ! shift/reduce conflict for NEWLINE resolved as shift
    $end            reduce using rule 8 (cuerpo -> cuerpo NEWLINE cuerpo .)
    NEWLINE         shift and go to state 44

  ! NEWLINE         [ reduce using rule 8 (cuerpo -> cuerpo NEWLINE cuerpo .) ]


state 103

    (15) expression -> factor operadoresMat factor .
    (15) expression -> factor . operadoresMat factor
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NEWLINE         reduce using rule 15 (expression -> factor operadoresMat factor .)
    $end            reduce using rule 15 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 15 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 15 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 15 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 15 (expression -> factor operadoresMat factor .)
    AND             reduce using rule 15 (expression -> factor operadoresMat factor .)
    OR              reduce using rule 15 (expression -> factor operadoresMat factor .)
    SEMICOLON       reduce using rule 15 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52

  ! PLUS            [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 45

state 104

    (24) comparacion -> factor operadoresComp factor .
    (15) expression -> factor . operadoresMat factor
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD

    AND             reduce using rule 24 (comparacion -> factor operadoresComp factor .)
    OR              reduce using rule 24 (comparacion -> factor operadoresComp factor .)
    NEWLINE         reduce using rule 24 (comparacion -> factor operadoresComp factor .)
    $end            reduce using rule 24 (comparacion -> factor operadoresComp factor .)
    SEMICOLON       reduce using rule 24 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52

    operadoresMat                  shift and go to state 45

state 105

    (25) comparacion -> factor operadoresEquals factor .
    (15) expression -> factor . operadoresMat factor
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD

    AND             reduce using rule 25 (comparacion -> factor operadoresEquals factor .)
    OR              reduce using rule 25 (comparacion -> factor operadoresEquals factor .)
    NEWLINE         reduce using rule 25 (comparacion -> factor operadoresEquals factor .)
    $end            reduce using rule 25 (comparacion -> factor operadoresEquals factor .)
    SEMICOLON       reduce using rule 25 (comparacion -> factor operadoresEquals factor .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52

    operadoresMat                  shift and go to state 45

state 106

    (14) leer -> PUTS STRING NEWLINE . variables EQUAL GETS PUNTO CHOMP
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL

    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28

    variables                      shift and go to state 145

state 107

    (27) comparacion -> comparacion operadoresBool comparacion .
    (27) comparacion -> comparacion . operadoresBool comparacion
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 27 (comparacion -> comparacion operadoresBool comparacion .)
    $end            reduce using rule 27 (comparacion -> comparacion operadoresBool comparacion .)
    SEMICOLON       reduce using rule 27 (comparacion -> comparacion operadoresBool comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! AND             [ reduce using rule 27 (comparacion -> comparacion operadoresBool comparacion .) ]
  ! OR              [ reduce using rule 27 (comparacion -> comparacion operadoresBool comparacion .) ]

    operadoresBool                 shift and go to state 64

state 108

    (16) operacionstring -> STRING PLUS STRING .
    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring

    NEWLINE         reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    $end            reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    SEMICOLON       reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    PLUS            shift and go to state 67
    TIMES           shift and go to state 68


state 109

    (18) operacionstring -> STRING PLUS operacionstring .

    NEWLINE         reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)
    $end            reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)
    SEMICOLON       reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)


state 110

    (17) operacionstring -> STRING TIMES INT .
    (19) operacionstring -> STRING TIMES INT . PLUS operacionstring

    NEWLINE         reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    $end            reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    SEMICOLON       reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    PLUS            shift and go to state 146


state 111

    (26) comparacion -> STRING operadoresEquals STRING .

    AND             reduce using rule 26 (comparacion -> STRING operadoresEquals STRING .)
    OR              reduce using rule 26 (comparacion -> STRING operadoresEquals STRING .)
    NEWLINE         reduce using rule 26 (comparacion -> STRING operadoresEquals STRING .)
    $end            reduce using rule 26 (comparacion -> STRING operadoresEquals STRING .)
    SEMICOLON       reduce using rule 26 (comparacion -> STRING operadoresEquals STRING .)


state 112

    (51) asignacion -> variables EQUAL factor .
    (15) expression -> factor . operadoresMat factor
    (24) comparacion -> factor . operadoresComp factor
    (25) comparacion -> factor . operadoresEquals factor
    (34) operadoresMat -> . PLUS
    (35) operadoresMat -> . MINUS
    (36) operadoresMat -> . TIMES
    (37) operadoresMat -> . DIVIDE
    (38) operadoresMat -> . MOD
    (31) operadoresComp -> . MAYORQUE
    (32) operadoresComp -> . MENORQUE
    (33) operadoresComp -> . operadoresEquals
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 51 (asignacion -> variables EQUAL factor .)
    $end            reduce using rule 51 (asignacion -> variables EQUAL factor .)
    SEMICOLON       reduce using rule 51 (asignacion -> variables EQUAL factor .)
    PLUS            shift and go to state 48
    MINUS           shift and go to state 49
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    MOD             shift and go to state 52
    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresMat                  shift and go to state 45
    operadoresComp                 shift and go to state 46
    operadoresEquals               shift and go to state 47

state 113

    (52) asignacion -> variables EQUAL STRING .
    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring
    (26) comparacion -> STRING . operadoresEquals STRING
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 52 (asignacion -> variables EQUAL STRING .)
    $end            reduce using rule 52 (asignacion -> variables EQUAL STRING .)
    SEMICOLON       reduce using rule 52 (asignacion -> variables EQUAL STRING .)
    PLUS            shift and go to state 67
    TIMES           shift and go to state 68
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresEquals               shift and go to state 69

state 114

    (53) asignacion -> variables EQUAL booleanos .
    (28) comparacion_bool -> booleanos . operadoresEquals booleanos
    (29) comparacionb -> booleanos . operadoresBool booleanos
    (30) comparacionb -> booleanos . operadoresBool comparacionb
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 53 (asignacion -> variables EQUAL booleanos .)
    $end            reduce using rule 53 (asignacion -> variables EQUAL booleanos .)
    SEMICOLON       reduce using rule 53 (asignacion -> variables EQUAL booleanos .)
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 71
    operadoresBool                 shift and go to state 72

state 115

    (54) asignacion -> variables EQUAL struct .

    NEWLINE         reduce using rule 54 (asignacion -> variables EQUAL struct .)
    $end            reduce using rule 54 (asignacion -> variables EQUAL struct .)
    SEMICOLON       reduce using rule 54 (asignacion -> variables EQUAL struct .)


state 116

    (55) asignacion -> variables EQUAL operaciones .

    NEWLINE         reduce using rule 55 (asignacion -> variables EQUAL operaciones .)
    $end            reduce using rule 55 (asignacion -> variables EQUAL operaciones .)
    SEMICOLON       reduce using rule 55 (asignacion -> variables EQUAL operaciones .)


state 117

    (56) struct -> conjunto .

    NEWLINE         reduce using rule 56 (struct -> conjunto .)
    $end            reduce using rule 56 (struct -> conjunto .)
    SEMICOLON       reduce using rule 56 (struct -> conjunto .)
    COMMA           reduce using rule 56 (struct -> conjunto .)
    RBRACE          reduce using rule 56 (struct -> conjunto .)
    RPAREN          reduce using rule 56 (struct -> conjunto .)


state 118

    (57) struct -> formacion .

    NEWLINE         reduce using rule 57 (struct -> formacion .)
    $end            reduce using rule 57 (struct -> formacion .)
    SEMICOLON       reduce using rule 57 (struct -> formacion .)
    COMMA           reduce using rule 57 (struct -> formacion .)
    RBRACE          reduce using rule 57 (struct -> formacion .)
    RPAREN          reduce using rule 57 (struct -> formacion .)


state 119

    (58) struct -> hash .

    NEWLINE         reduce using rule 58 (struct -> hash .)
    $end            reduce using rule 58 (struct -> hash .)
    SEMICOLON       reduce using rule 58 (struct -> hash .)
    COMMA           reduce using rule 58 (struct -> hash .)
    RBRACE          reduce using rule 58 (struct -> hash .)
    RPAREN          reduce using rule 58 (struct -> hash .)


state 120

    (28) comparacion_bool -> booleanos operadoresEquals booleanos .

    NEWLINE         reduce using rule 28 (comparacion_bool -> booleanos operadoresEquals booleanos .)
    $end            reduce using rule 28 (comparacion_bool -> booleanos operadoresEquals booleanos .)
    SEMICOLON       reduce using rule 28 (comparacion_bool -> booleanos operadoresEquals booleanos .)


state 121

    (29) comparacionb -> booleanos operadoresBool booleanos .
    (29) comparacionb -> booleanos . operadoresBool booleanos
    (30) comparacionb -> booleanos . operadoresBool comparacionb
    (44) operadoresBool -> . AND
    (45) operadoresBool -> . OR

    NEWLINE         reduce using rule 29 (comparacionb -> booleanos operadoresBool booleanos .)
    $end            reduce using rule 29 (comparacionb -> booleanos operadoresBool booleanos .)
    SEMICOLON       reduce using rule 29 (comparacionb -> booleanos operadoresBool booleanos .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 72

state 122

    (30) comparacionb -> booleanos operadoresBool comparacionb .

    NEWLINE         reduce using rule 30 (comparacionb -> booleanos operadoresBool comparacionb .)
    $end            reduce using rule 30 (comparacionb -> booleanos operadoresBool comparacionb .)
    SEMICOLON       reduce using rule 30 (comparacionb -> booleanos operadoresBool comparacionb .)


state 123

    (71) funcionsconjunto -> conjunto PUNTO ADD . LPAREN valor RPAREN
    (72) funcionsconjunto -> conjunto PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 147


state 124

    (73) funcionsconjunto -> conjunto PUNTO MERGE . LPAREN conjunto RPAREN

    LPAREN          shift and go to state 148


state 125

    (74) funcionsconjunto -> conjunto PUNTO SIZE . LPAREN RPAREN
    (75) funcionsconjunto -> conjunto PUNTO SIZE .

    LPAREN          shift and go to state 149
    NEWLINE         reduce using rule 75 (funcionsconjunto -> conjunto PUNTO SIZE .)
    $end            reduce using rule 75 (funcionsconjunto -> conjunto PUNTO SIZE .)
    SEMICOLON       reduce using rule 75 (funcionsconjunto -> conjunto PUNTO SIZE .)


state 126

    (101) funcionsformacion -> formacion PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 150


state 127

    (102) funcionsformacion -> formacion PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 151


state 128

    (103) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN RPAREN
    (104) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN INT RPAREN

    LPAREN          shift and go to state 152


state 129

    (105) funcionsformacion -> formacion PUNTO FIRST .
    (106) funcionsformacion -> formacion PUNTO FIRST . LPAREN RPAREN

    NEWLINE         reduce using rule 105 (funcionsformacion -> formacion PUNTO FIRST .)
    $end            reduce using rule 105 (funcionsformacion -> formacion PUNTO FIRST .)
    SEMICOLON       reduce using rule 105 (funcionsformacion -> formacion PUNTO FIRST .)
    LPAREN          shift and go to state 153


state 130

    (88) sentenciaif -> IF condicion NEWLINE . repetircontenido NEWLINE END
    (89) sentenciaif -> IF condicion NEWLINE . repetircontenido NEWLINE sentenciaelsif
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 154
    contenido                      shift and go to state 155
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    variables                      shift and go to state 14
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 131

    (92) sentenciawhile -> WHILE condicion NEWLINE . repetircontenido NEWLINE END
    (93) sentenciawhile -> WHILE condicion NEWLINE . sentenciaif NEWLINE END
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (88) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    IF              shift and go to state 34
    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 160
    sentenciaif                    shift and go to state 161
    contenido                      shift and go to state 155
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    variables                      shift and go to state 14
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 132

    (85) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    LPAREN          shift and go to state 162


state 133

    (60) conjunto -> SET LCOR RCOR .

    PUNTO           reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    NEWLINE         reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    $end            reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    SEMICOLON       reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 60 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 60 (conjunto -> SET LCOR RCOR .)


state 134

    (67) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 163


state 135

    (97) formacion -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    SEMICOLON       reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 97 (formacion -> LCOR repetirvalor RCOR .)


state 136

    (66) repetirvalor -> valor COMMA . repetirvalor
    (65) repetirvalor -> . valor
    (66) repetirvalor -> . valor COMMA repetirvalor
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 88
    repetirvalor                   shift and go to state 164
    booleanos                      shift and go to state 91

state 137

    (99) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (100) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 165


state 138

    (119) hash_add -> hash PUNTO STORE . LPAREN clave COMMA value RPAREN

    LPAREN          shift and go to state 166


state 139

    (120) hash_delete -> hash PUNTO DELETE . LPAREN clave RPAREN

    LPAREN          shift and go to state 167


state 140

    (121) hash_key -> hash PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 168


state 141

    (107) hash -> LBRACE hash_content RBRACE .

    PUNTO           reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    NEWLINE         reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    SEMICOLON       reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 107 (hash -> LBRACE hash_content RBRACE .)


state 142

    (108) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 108 (hash_elements -> hash_element hash_more_elements .)


state 143

    (112) hash_more_elements -> COMMA . hash_element
    (113) hash_more_elements -> COMMA . hash_element hash_more_elements
    (111) hash_element -> . clave FLECHA value
    (114) clave -> . STRING
    (115) clave -> . INT
    (116) clave -> . FLOAT

    STRING          shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101

    hash_element                   shift and go to state 169
    clave                          shift and go to state 98

state 144

    (111) hash_element -> clave FLECHA . value
    (117) value -> . valor
    (118) value -> . struct
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (56) struct -> . conjunto
    (57) struct -> . formacion
    (58) struct -> . hash
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    value                          shift and go to state 170
    valor                          shift and go to state 171
    struct                         shift and go to state 172
    booleanos                      shift and go to state 91
    conjunto                       shift and go to state 117
    formacion                      shift and go to state 118
    hash                           shift and go to state 119

state 145

    (14) leer -> PUTS STRING NEWLINE variables . EQUAL GETS PUNTO CHOMP

    EQUAL           shift and go to state 173


state 146

    (19) operacionstring -> STRING TIMES INT PLUS . operacionstring
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring

    STRING          shift and go to state 174

    operacionstring                shift and go to state 175

state 147

    (71) funcionsconjunto -> conjunto PUNTO ADD LPAREN . valor RPAREN
    (72) funcionsconjunto -> conjunto PUNTO ADD LPAREN . arr RPAREN
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (67) arr -> . LCOR repetirvalor RCOR
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    LCOR            shift and go to state 178
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 176
    arr                            shift and go to state 177
    booleanos                      shift and go to state 91

state 148

    (73) funcionsconjunto -> conjunto PUNTO MERGE LPAREN . conjunto RPAREN
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR

    SET             shift and go to state 37

    conjunto                       shift and go to state 179

state 149

    (74) funcionsconjunto -> conjunto PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 180


state 150

    (101) funcionsformacion -> formacion PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 181


state 151

    (102) funcionsformacion -> formacion PUNTO PUSH LPAREN . repetirvalor RPAREN
    (65) repetirvalor -> . valor
    (66) repetirvalor -> . valor COMMA repetirvalor
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 182
    valor                          shift and go to state 88
    booleanos                      shift and go to state 91

state 152

    (103) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . RPAREN
    (104) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . INT RPAREN

    RPAREN          shift and go to state 183
    INT             shift and go to state 184


state 153

    (106) funcionsformacion -> formacion PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 185


state 154

    (88) sentenciaif -> IF condicion NEWLINE repetircontenido . NEWLINE END
    (89) sentenciaif -> IF condicion NEWLINE repetircontenido . NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 186


state 155

    (79) repetircontenido -> contenido .
    (80) repetircontenido -> contenido . SEMICOLON repetircontenido

    NEWLINE         reduce using rule 79 (repetircontenido -> contenido .)
    SEMICOLON       shift and go to state 187


state 156

    (76) contenido -> impresion .

    SEMICOLON       reduce using rule 76 (contenido -> impresion .)
    NEWLINE         reduce using rule 76 (contenido -> impresion .)


state 157

    (77) contenido -> asignacion .

    SEMICOLON       reduce using rule 77 (contenido -> asignacion .)
    NEWLINE         reduce using rule 77 (contenido -> asignacion .)


state 158

    (78) contenido -> funcionstruct .

    SEMICOLON       reduce using rule 78 (contenido -> funcionstruct .)
    NEWLINE         reduce using rule 78 (contenido -> funcionstruct .)


state 159

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (13) impresion -> PUTS . variables
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (15) expression -> . factor operadoresMat factor
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    STRING          shift and go to state 188
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    factor                         shift and go to state 57
    comparacion                    shift and go to state 58
    comparacion_bool               shift and go to state 59
    variables                      shift and go to state 61
    expression                     shift and go to state 62
    booleanos                      shift and go to state 63

state 160

    (92) sentenciawhile -> WHILE condicion NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 189


state 161

    (93) sentenciawhile -> WHILE condicion NEWLINE sentenciaif . NEWLINE END

    NEWLINE         shift and go to state 190


state 162

    (85) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    INT             shift and go to state 191


state 163

    (67) arr -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    SEMICOLON       reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 67 (arr -> LCOR repetirvalor RCOR .)


state 164

    (66) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 66 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 66 (repetirvalor -> valor COMMA repetirvalor .)


state 165

    (99) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (100) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 192
    RPAREN          shift and go to state 193


state 166

    (119) hash_add -> hash PUNTO STORE LPAREN . clave COMMA value RPAREN
    (114) clave -> . STRING
    (115) clave -> . INT
    (116) clave -> . FLOAT

    STRING          shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101

    clave                          shift and go to state 194

state 167

    (120) hash_delete -> hash PUNTO DELETE LPAREN . clave RPAREN
    (114) clave -> . STRING
    (115) clave -> . INT
    (116) clave -> . FLOAT

    STRING          shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101

    clave                          shift and go to state 195

state 168

    (121) hash_key -> hash PUNTO KEY LPAREN . value RPAREN
    (117) value -> . valor
    (118) value -> . struct
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (56) struct -> . conjunto
    (57) struct -> . formacion
    (58) struct -> . hash
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    hash                           shift and go to state 119
    value                          shift and go to state 196
    valor                          shift and go to state 171
    struct                         shift and go to state 172
    booleanos                      shift and go to state 91
    conjunto                       shift and go to state 117
    formacion                      shift and go to state 118

state 169

    (112) hash_more_elements -> COMMA hash_element .
    (113) hash_more_elements -> COMMA hash_element . hash_more_elements
    (112) hash_more_elements -> . COMMA hash_element
    (113) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 112 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 143

    hash_more_elements             shift and go to state 197

state 170

    (111) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 111 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 111 (hash_element -> clave FLECHA value .)


state 171

    (117) value -> valor .

    COMMA           reduce using rule 117 (value -> valor .)
    RBRACE          reduce using rule 117 (value -> valor .)
    RPAREN          reduce using rule 117 (value -> valor .)


state 172

    (118) value -> struct .

    COMMA           reduce using rule 118 (value -> struct .)
    RBRACE          reduce using rule 118 (value -> struct .)
    RPAREN          reduce using rule 118 (value -> struct .)


state 173

    (14) leer -> PUTS STRING NEWLINE variables EQUAL . GETS PUNTO CHOMP

    GETS            shift and go to state 198


state 174

    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring

    PLUS            shift and go to state 67
    TIMES           shift and go to state 68


state 175

    (19) operacionstring -> STRING TIMES INT PLUS operacionstring .

    NEWLINE         reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)
    $end            reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)
    SEMICOLON       reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)


state 176

    (71) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 199


state 177

    (72) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 200


state 178

    (67) arr -> LCOR . repetirvalor RCOR
    (65) repetirvalor -> . valor
    (66) repetirvalor -> . valor COMMA repetirvalor
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 134
    valor                          shift and go to state 88
    booleanos                      shift and go to state 91

state 179

    (73) funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto . RPAREN

    RPAREN          shift and go to state 201


state 180

    (74) funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .

    NEWLINE         reduce using rule 74 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    $end            reduce using rule 74 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    SEMICOLON       reduce using rule 74 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)


state 181

    (101) funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .

    NEWLINE         reduce using rule 101 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    $end            reduce using rule 101 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    SEMICOLON       reduce using rule 101 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)


state 182

    (102) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 202


state 183

    (103) funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .

    NEWLINE         reduce using rule 103 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)
    $end            reduce using rule 103 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)
    SEMICOLON       reduce using rule 103 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)


state 184

    (104) funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT . RPAREN

    RPAREN          shift and go to state 203


state 185

    (106) funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .

    NEWLINE         reduce using rule 106 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    $end            reduce using rule 106 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    SEMICOLON       reduce using rule 106 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)


state 186

    (88) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE . END
    (89) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE . sentenciaelsif
    (90) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif

    END             shift and go to state 204
    ELSIF           shift and go to state 206

    sentenciaelsif                 shift and go to state 205

state 187

    (80) repetircontenido -> contenido SEMICOLON . repetircontenido
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    contenido                      shift and go to state 155
    repetircontenido               shift and go to state 207
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    variables                      shift and go to state 14
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 188

    (12) impresion -> PUTS STRING .
    (26) comparacion -> STRING . operadoresEquals STRING
    (46) operadoresEquals -> . EQUALSX2
    (47) operadoresEquals -> . NOTEQUALS

    SEMICOLON       reduce using rule 12 (impresion -> PUTS STRING .)
    NEWLINE         reduce using rule 12 (impresion -> PUTS STRING .)
    EQUALSX2        shift and go to state 55
    NOTEQUALS       shift and go to state 56

    operadoresEquals               shift and go to state 69

state 189

    (92) sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 208


state 190

    (93) sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE . END

    END             shift and go to state 209


state 191

    (85) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    PUNTO           shift and go to state 210


state 192

    (99) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 211


state 193

    (100) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    PUNTO           reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    NEWLINE         reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    $end            reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    SEMICOLON       reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 100 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 194

    (119) hash_add -> hash PUNTO STORE LPAREN clave . COMMA value RPAREN

    COMMA           shift and go to state 212


state 195

    (120) hash_delete -> hash PUNTO DELETE LPAREN clave . RPAREN

    RPAREN          shift and go to state 213


state 196

    (121) hash_key -> hash PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 214


state 197

    (113) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 113 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 198

    (14) leer -> PUTS STRING NEWLINE variables EQUAL GETS . PUNTO CHOMP

    PUNTO           shift and go to state 215


state 199

    (71) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .

    NEWLINE         reduce using rule 71 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    $end            reduce using rule 71 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    SEMICOLON       reduce using rule 71 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)


state 200

    (72) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .

    NEWLINE         reduce using rule 72 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    $end            reduce using rule 72 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    SEMICOLON       reduce using rule 72 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)


state 201

    (73) funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .

    NEWLINE         reduce using rule 73 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)
    $end            reduce using rule 73 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)
    SEMICOLON       reduce using rule 73 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)


state 202

    (102) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .

    NEWLINE         reduce using rule 102 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    $end            reduce using rule 102 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    SEMICOLON       reduce using rule 102 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 203

    (104) funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .

    NEWLINE         reduce using rule 104 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)
    $end            reduce using rule 104 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)
    SEMICOLON       reduce using rule 104 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)


state 204

    (88) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 88 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 88 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .)


state 205

    (89) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .

    NEWLINE         reduce using rule 89 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)
    $end            reduce using rule 89 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)


state 206

    (90) sentenciaelsif -> ELSIF . condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaelsif -> ELSIF . condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (81) condicion -> . comparacion
    (82) condicion -> . comparacion_bool
    (83) condicion -> . comparacionb
    (84) condicion -> . booleanos
    (24) comparacion -> . factor operadoresComp factor
    (25) comparacion -> . factor operadoresEquals factor
    (26) comparacion -> . STRING operadoresEquals STRING
    (27) comparacion -> . comparacion operadoresBool comparacion
    (28) comparacion_bool -> . booleanos operadoresEquals booleanos
    (29) comparacionb -> . booleanos operadoresBool booleanos
    (30) comparacionb -> . booleanos operadoresBool comparacionb
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (39) factor -> . INT
    (40) factor -> . FLOAT
    (41) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 81
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 216
    comparacion                    shift and go to state 76
    comparacion_bool               shift and go to state 77
    comparacionb                   shift and go to state 78
    booleanos                      shift and go to state 79
    factor                         shift and go to state 80
    expression                     shift and go to state 62

state 207

    (80) repetircontenido -> contenido SEMICOLON repetircontenido .

    NEWLINE         reduce using rule 80 (repetircontenido -> contenido SEMICOLON repetircontenido .)


state 208

    (92) sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 92 (sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 92 (sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .)


state 209

    (93) sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .

    NEWLINE         reduce using rule 93 (sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .)
    $end            reduce using rule 93 (sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .)


state 210

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    PUNTO           shift and go to state 217


state 211

    (99) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    PUNTO           reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    NEWLINE         reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    $end            reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    SEMICOLON       reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 99 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 212

    (119) hash_add -> hash PUNTO STORE LPAREN clave COMMA . value RPAREN
    (117) value -> . valor
    (118) value -> . struct
    (61) valor -> . INT
    (62) valor -> . STRING
    (63) valor -> . booleanos
    (64) valor -> . FLOAT
    (56) struct -> . conjunto
    (57) struct -> . formacion
    (58) struct -> . hash
    (42) booleanos -> . TRUE
    (43) booleanos -> . FALSE
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 89
    STRING          shift and go to state 90
    FLOAT           shift and go to state 92
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    hash                           shift and go to state 119
    value                          shift and go to state 218
    valor                          shift and go to state 171
    struct                         shift and go to state 172
    booleanos                      shift and go to state 91
    conjunto                       shift and go to state 117
    formacion                      shift and go to state 118

state 213

    (120) hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .

    NEWLINE         reduce using rule 120 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)
    $end            reduce using rule 120 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)
    SEMICOLON       reduce using rule 120 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)


state 214

    (121) hash_key -> hash PUNTO KEY LPAREN value RPAREN .

    NEWLINE         reduce using rule 121 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    $end            reduce using rule 121 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    SEMICOLON       reduce using rule 121 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)


state 215

    (14) leer -> PUTS STRING NEWLINE variables EQUAL GETS PUNTO . CHOMP

    CHOMP           shift and go to state 219


state 216

    (90) sentenciaelsif -> ELSIF condicion . NEWLINE repetircontenido NEWLINE END
    (91) sentenciaelsif -> ELSIF condicion . NEWLINE repetircontenido NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 220


state 217

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    INT             shift and go to state 221


state 218

    (119) hash_add -> hash PUNTO STORE LPAREN clave COMMA value . RPAREN

    RPAREN          shift and go to state 222


state 219

    (14) leer -> PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP .

    NEWLINE         reduce using rule 14 (leer -> PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP .)
    $end            reduce using rule 14 (leer -> PUTS STRING NEWLINE variables EQUAL GETS PUNTO CHOMP .)


state 220

    (90) sentenciaelsif -> ELSIF condicion NEWLINE . repetircontenido NEWLINE END
    (91) sentenciaelsif -> ELSIF condicion NEWLINE . repetircontenido NEWLINE sentenciaelsif
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 223
    contenido                      shift and go to state 155
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    variables                      shift and go to state 14
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 221

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    RPAREN          shift and go to state 224


state 222

    (119) hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .

    NEWLINE         reduce using rule 119 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)
    $end            reduce using rule 119 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)
    SEMICOLON       reduce using rule 119 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)


state 223

    (90) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido . NEWLINE END
    (91) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido . NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 225


state 224

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    NEWLINE         shift and go to state 226


state 225

    (90) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE . END
    (91) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE . sentenciaelsif
    (90) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif

    END             shift and go to state 227
    ELSIF           shift and go to state 206

    sentenciaelsif                 shift and go to state 228

state 226

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . repetircontenido NEWLINE END
    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . sentenciaif NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . sentenciaif NEWLINE repetircontenido NEWLINE END
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (88) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (89) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    IF              shift and go to state 34
    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    variables                      shift and go to state 14
    repetircontenido               shift and go to state 229
    sentenciaif                    shift and go to state 230
    contenido                      shift and go to state 155
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 227

    (90) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 90 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 90 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .)


state 228

    (91) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .

    NEWLINE         reduce using rule 91 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)
    $end            reduce using rule 91 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)


state 229

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 231


state 230

    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif . NEWLINE END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif . NEWLINE repetircontenido NEWLINE END

    NEWLINE         shift and go to state 232


state 231

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 233


state 232

    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE . END
    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE . repetircontenido NEWLINE END
    (79) repetircontenido -> . contenido
    (80) repetircontenido -> . contenido SEMICOLON repetircontenido
    (76) contenido -> . impresion
    (77) contenido -> . asignacion
    (78) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (51) asignacion -> . variables EQUAL factor
    (52) asignacion -> . variables EQUAL STRING
    (53) asignacion -> . variables EQUAL booleanos
    (54) asignacion -> . variables EQUAL struct
    (55) asignacion -> . variables EQUAL operaciones
    (68) funcionstruct -> . funcionsconjunto
    (69) funcionstruct -> . funcionsformacion
    (70) funcionstruct -> . funcionsHash
    (48) variables -> . ID
    (49) variables -> . CONSTANT
    (50) variables -> . GLOBAL
    (71) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (72) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (73) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO SIZE
    (101) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (102) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (103) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (105) funcionsformacion -> . formacion PUNTO FIRST
    (106) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (122) funcionsHash -> . hash_add
    (123) funcionsHash -> . hash_delete
    (124) funcionsHash -> . hash_key
    (59) conjunto -> . SET arr
    (60) conjunto -> . SET LCOR RCOR
    (97) formacion -> . LCOR repetirvalor RCOR
    (98) formacion -> . LCOR RCOR
    (99) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (100) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (119) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (120) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (121) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (107) hash -> . LBRACE hash_content RBRACE

    END             shift and go to state 234
    PUTS            shift and go to state 159
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    variables                      shift and go to state 14
    repetircontenido               shift and go to state 235
    contenido                      shift and go to state 155
    impresion                      shift and go to state 156
    asignacion                     shift and go to state 157
    funcionstruct                  shift and go to state 158
    funcionsconjunto               shift and go to state 16
    funcionsformacion              shift and go to state 17
    funcionsHash                   shift and go to state 18
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 233

    (85) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 85 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 85 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .)


state 234

    (86) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .

    NEWLINE         reduce using rule 86 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .)
    $end            reduce using rule 86 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .)


state 235

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 236


state 236

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 237


state 237

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 87 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 87 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 47 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
