Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    CLEAR
    DEF
    DEFINED
    DELETE
    ELSE
    ENSURE
    FETCH
    MODULE
    NEWLINE
    NEXT
    NIL
    NOT
    NUMERAL
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> sentenciafor
Rule 7     cuerpo -> sentenciawhile
Rule 8     cuerpo -> sentenciaElsif
Rule 9     impresion -> PUTS factor
Rule 10    impresion -> PUTS comparacion
Rule 11    impresion -> PUTS comparacion_bool
Rule 12    impresion -> PUTS STRING
Rule 13    leer -> GETS PUNTO CHOMP
Rule 14    expression -> factor operadoresMat factor
Rule 15    comparacion -> factor operadoresComp factor
Rule 16    comparacion_bool -> booleanos operadoresBool booleanos
Rule 17    operadoresComp -> MAYORQUE
Rule 18    operadoresComp -> MENORQUE
Rule 19    operadoresComp -> operadoresEquals
Rule 20    operadoresMat -> PLUS
Rule 21    operadoresMat -> MINUS
Rule 22    operadoresMat -> TIMES
Rule 23    operadoresMat -> DIVIDE
Rule 24    operadoresMat -> MOD
Rule 25    factor -> INT
Rule 26    factor -> variables
Rule 27    factor -> FLOAT
Rule 28    factor -> expression
Rule 29    booleanos -> TRUE
Rule 30    booleanos -> FALSE
Rule 31    operadoresBool -> AND
Rule 32    operadoresBool -> OR
Rule 33    operadoresBool -> operadoresEquals
Rule 34    operadoresEquals -> EQUALSX2
Rule 35    operadoresEquals -> NOTEQUALS
Rule 36    variables -> ID
Rule 37    variables -> CONSTANT
Rule 38    variables -> GLOBAL
Rule 39    asignacion -> variables EQUAL factor
Rule 40    asignacion -> variables EQUAL STRING
Rule 41    asignacion -> variables EQUAL booleanos
Rule 42    asignacion -> variables EQUAL comparacion_bool
Rule 43    asignacion -> variables EQUAL struct
Rule 44    struct -> conjunto
Rule 45    struct -> formacion
Rule 46    struct -> hash
Rule 47    conjunto -> SET arr
Rule 48    conjunto -> SET LCOR RCOR
Rule 49    valor -> INT
Rule 50    valor -> ID
Rule 51    valor -> STRING
Rule 52    valor -> booleanos
Rule 53    valor -> FLOAT
Rule 54    repetirvalor -> valor
Rule 55    repetirvalor -> valor COMMA repetirvalor
Rule 56    arr -> LCOR repetirvalor RCOR
Rule 57    funcionstruct -> funcionsconjunto
Rule 58    funcionstruct -> funcionsformacion
Rule 59    funcionstruct -> funcionsHash
Rule 60    funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN
Rule 61    funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN
Rule 62    funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN
Rule 63    funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN
Rule 64    funcionsconjunto -> conjunto PUNTO SIZE
Rule 65    contenido -> impresion
Rule 66    contenido -> asignacion
Rule 67    contenido -> funcionstruct
Rule 68    repetircontenido -> contenido
Rule 69    repetircontenido -> contenido repetircontenido
Rule 70    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
Rule 71    condicion -> comparacion
Rule 72    condicion -> comparacion_bool
Rule 73    condicion -> booleanos
Rule 74    condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN
Rule 75    sentenciawhile -> WHILE condicion DO repetircontenido END
Rule 76    formacion -> LCOR repetirvalor RCOR
Rule 77    formacion -> LCOR RCOR
Rule 78    formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 79    formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 80    funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN
Rule 81    funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 82    funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN
Rule 83    funcionsformacion -> formacion PUNTO FIRST
Rule 84    funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN
Rule 85    hash -> LBRACE hash_content RBRACE
Rule 86    hash_elements -> hash_element hash_more_elements
Rule 87    hash_content -> hash_element
Rule 88    hash_content -> hash_elements
Rule 89    hash_element -> clave FLECHA value
Rule 90    hash_more_elements -> COMMA hash_element
Rule 91    hash_more_elements -> COMMA hash_element hash_more_elements
Rule 92    clave -> variables
Rule 93    clave -> STRING
Rule 94    clave -> INT
Rule 95    clave -> FLOAT
Rule 96    value -> valor
Rule 97    value -> struct
Rule 98    hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN
Rule 99    hash_delete -> hash PUNTO LPAREN clave RPAREN
Rule 100   hash_key -> hash PUNTO KEY LPAREN value RPAREN
Rule 101   funcionsHash -> hash_add
Rule 102   funcionsHash -> hash_delete
Rule 103   funcionsHash -> hash_key
Rule 104   sentenciaElsif -> IF condicion repetircontenido mas_sentencias END
Rule 105   mas_sentencias -> ELSIF repetircontenido
Rule 106   mas_sentencias -> ELSIF repetircontenido mas_sentencias

Terminals, with rules where they appear

ADD                  : 60 61
ALIAS                : 
AND                  : 31
ARRAY                : 74 78 79
BEGIN                : 
BREAK                : 
CASE                 : 
CHOMP                : 13
CLASS                : 
CLEAR                : 
COMMA                : 55 90 91
CONSTANT             : 37
DEF                  : 
DEFINED              : 
DELETE               : 
DIVIDE               : 23
DO                   : 75
ELSE                 : 
ELSIF                : 105 106
END                  : 70 75 104
ENSURE               : 
EQUAL                : 39 40 41 42 43
EQUALSX2             : 34
FALSE                : 30
FETCH                : 
FIRST                : 83 84
FLECHA               : 89
FLOAT                : 27 53 95
FOR                  : 70
GETS                 : 13
GLOBAL               : 38
ID                   : 36 50
IF                   : 104
IN                   : 70
INT                  : 25 49 70 70 78 94
KEY                  : 100
LBRACE               : 85
LCOR                 : 48 56 76 77
LENGTH               : 80
LPAREN               : 60 61 62 63 70 74 78 79 80 81 82 84 98 99 100
MAYORQUE             : 17
MENORQUE             : 18
MERGE                : 62
MINUS                : 21
MOD                  : 24
MODULE               : 
NEW                  : 74 78 79
NEWLINE              : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUALS            : 35
NUMERAL              : 
OR                   : 32
PLUS                 : 20
PUNTO                : 13 60 61 62 63 64 70 70 74 78 79 80 81 82 83 84 98 99 100
PUSH                 : 81
PUTS                 : 9 10 11 12
RBRACE               : 85
RCOR                 : 48 56 76 77
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 60 61 62 63 70 74 78 79 80 81 82 84 98 99 100
SAMPLE               : 82
SELF                 : 
SET                  : 47 48
SIZE                 : 63 64
STORE                : 98
STRING               : 12 40 51 93
SUPER                : 
THEN                 : 
TIMES                : 22
TRUE                 : 29
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 75
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arr                  : 47 61 74
asignacion           : 3 66
booleanos            : 16 16 41 52 73
clave                : 89 99
comparacion          : 10 71
comparacion_bool     : 11 42 72
condicion            : 75 104
conjunto             : 44 60 61 62 63 64
contenido            : 68 69
cuerpo               : 0
expression           : 1 28
factor               : 9 14 14 15 15 39
formacion            : 45 80 81 82 83 84
funcionsHash         : 59
funcionsconjunto     : 57
funcionsformacion    : 58
funcionstruct        : 5 67
hash                 : 46 98 99 100
hash_add             : 101
hash_content         : 85
hash_delete          : 102
hash_element         : 86 87 90 91 98
hash_elements        : 88
hash_key             : 103
hash_more_elements   : 86 91
impresion            : 2 65
leer                 : 4
mas_sentencias       : 104 106
operadoresBool       : 16
operadoresComp       : 15
operadoresEquals     : 19 33
operadoresMat        : 14
repetircontenido     : 69 70 75 104 105 106
repetirvalor         : 55 56 76 81
sentenciaElsif       : 8
sentenciafor         : 6
sentenciawhile       : 7
struct               : 43 97
valor                : 54 55 60 96
value                : 89 100
variables            : 26 39 40 41 42 43 62 70 82 92

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . sentenciafor
    (7) cuerpo -> . sentenciawhile
    (8) cuerpo -> . sentenciaElsif
    (14) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (13) leer -> . GETS PUNTO CHOMP
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (70) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (75) sentenciawhile -> . WHILE condicion DO repetircontenido END
    (104) sentenciaElsif -> . IF condicion repetircontenido mas_sentencias END
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    GETS            shift and go to state 13
    FOR             shift and go to state 17
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    sentenciafor                   shift and go to state 7
    sentenciawhile                 shift and go to state 8
    sentenciaElsif                 shift and go to state 9
    factor                         shift and go to state 10
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (28) factor -> expression .

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> sentenciafor .

    $end            reduce using rule 6 (cuerpo -> sentenciafor .)


state 8

    (7) cuerpo -> sentenciawhile .

    $end            reduce using rule 7 (cuerpo -> sentenciawhile .)


state 9

    (8) cuerpo -> sentenciaElsif .

    $end            reduce using rule 8 (cuerpo -> sentenciaElsif .)


state 10

    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operadoresMat                  shift and go to state 35

state 11

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    STRING          shift and go to state 44
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    factor                         shift and go to state 41
    comparacion                    shift and go to state 42
    comparacion_bool               shift and go to state 43
    variables                      shift and go to state 45
    expression                     shift and go to state 46
    booleanos                      shift and go to state 47

state 12

    (39) asignacion -> variables . EQUAL factor
    (40) asignacion -> variables . EQUAL STRING
    (41) asignacion -> variables . EQUAL booleanos
    (42) asignacion -> variables . EQUAL comparacion_bool
    (43) asignacion -> variables . EQUAL struct
    (26) factor -> variables .

    EQUAL           shift and go to state 50
    PLUS            reduce using rule 26 (factor -> variables .)
    MINUS           reduce using rule 26 (factor -> variables .)
    TIMES           reduce using rule 26 (factor -> variables .)
    DIVIDE          reduce using rule 26 (factor -> variables .)
    MOD             reduce using rule 26 (factor -> variables .)


state 13

    (13) leer -> GETS . PUNTO CHOMP

    PUNTO           shift and go to state 51


state 14

    (57) funcionstruct -> funcionsconjunto .

    $end            reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    PUTS            reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    ID              reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    CONSTANT        reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    GLOBAL          reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    SET             reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    LCOR            reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    ARRAY           reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    LBRACE          reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    ELSIF           reduce using rule 57 (funcionstruct -> funcionsconjunto .)
    END             reduce using rule 57 (funcionstruct -> funcionsconjunto .)


state 15

    (58) funcionstruct -> funcionsformacion .

    $end            reduce using rule 58 (funcionstruct -> funcionsformacion .)
    PUTS            reduce using rule 58 (funcionstruct -> funcionsformacion .)
    ID              reduce using rule 58 (funcionstruct -> funcionsformacion .)
    CONSTANT        reduce using rule 58 (funcionstruct -> funcionsformacion .)
    GLOBAL          reduce using rule 58 (funcionstruct -> funcionsformacion .)
    SET             reduce using rule 58 (funcionstruct -> funcionsformacion .)
    LCOR            reduce using rule 58 (funcionstruct -> funcionsformacion .)
    ARRAY           reduce using rule 58 (funcionstruct -> funcionsformacion .)
    LBRACE          reduce using rule 58 (funcionstruct -> funcionsformacion .)
    ELSIF           reduce using rule 58 (funcionstruct -> funcionsformacion .)
    END             reduce using rule 58 (funcionstruct -> funcionsformacion .)


state 16

    (59) funcionstruct -> funcionsHash .

    $end            reduce using rule 59 (funcionstruct -> funcionsHash .)
    PUTS            reduce using rule 59 (funcionstruct -> funcionsHash .)
    ID              reduce using rule 59 (funcionstruct -> funcionsHash .)
    CONSTANT        reduce using rule 59 (funcionstruct -> funcionsHash .)
    GLOBAL          reduce using rule 59 (funcionstruct -> funcionsHash .)
    SET             reduce using rule 59 (funcionstruct -> funcionsHash .)
    LCOR            reduce using rule 59 (funcionstruct -> funcionsHash .)
    ARRAY           reduce using rule 59 (funcionstruct -> funcionsHash .)
    LBRACE          reduce using rule 59 (funcionstruct -> funcionsHash .)
    ELSIF           reduce using rule 59 (funcionstruct -> funcionsHash .)
    END             reduce using rule 59 (funcionstruct -> funcionsHash .)


state 17

    (70) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 52

state 18

    (25) factor -> INT .

    PLUS            reduce using rule 25 (factor -> INT .)
    MINUS           reduce using rule 25 (factor -> INT .)
    TIMES           reduce using rule 25 (factor -> INT .)
    DIVIDE          reduce using rule 25 (factor -> INT .)
    MOD             reduce using rule 25 (factor -> INT .)
    MAYORQUE        reduce using rule 25 (factor -> INT .)
    MENORQUE        reduce using rule 25 (factor -> INT .)
    EQUALSX2        reduce using rule 25 (factor -> INT .)
    NOTEQUALS       reduce using rule 25 (factor -> INT .)
    $end            reduce using rule 25 (factor -> INT .)
    PUTS            reduce using rule 25 (factor -> INT .)
    ID              reduce using rule 25 (factor -> INT .)
    CONSTANT        reduce using rule 25 (factor -> INT .)
    GLOBAL          reduce using rule 25 (factor -> INT .)
    SET             reduce using rule 25 (factor -> INT .)
    LCOR            reduce using rule 25 (factor -> INT .)
    ARRAY           reduce using rule 25 (factor -> INT .)
    LBRACE          reduce using rule 25 (factor -> INT .)
    ELSIF           reduce using rule 25 (factor -> INT .)
    END             reduce using rule 25 (factor -> INT .)
    DO              reduce using rule 25 (factor -> INT .)


state 19

    (75) sentenciawhile -> WHILE . condicion DO repetircontenido END
    (71) condicion -> . comparacion
    (72) condicion -> . comparacion_bool
    (73) condicion -> . booleanos
    (74) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 57
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    condicion                      shift and go to state 53
    comparacion                    shift and go to state 54
    comparacion_bool               shift and go to state 55
    booleanos                      shift and go to state 56
    factor                         shift and go to state 58
    variables                      shift and go to state 45
    expression                     shift and go to state 46

state 20

    (104) sentenciaElsif -> IF . condicion repetircontenido mas_sentencias END
    (71) condicion -> . comparacion
    (72) condicion -> . comparacion_bool
    (73) condicion -> . booleanos
    (74) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 57
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    condicion                      shift and go to state 59
    comparacion                    shift and go to state 54
    comparacion_bool               shift and go to state 55
    booleanos                      shift and go to state 56
    factor                         shift and go to state 58
    variables                      shift and go to state 45
    expression                     shift and go to state 46

state 21

    (27) factor -> FLOAT .

    PLUS            reduce using rule 27 (factor -> FLOAT .)
    MINUS           reduce using rule 27 (factor -> FLOAT .)
    TIMES           reduce using rule 27 (factor -> FLOAT .)
    DIVIDE          reduce using rule 27 (factor -> FLOAT .)
    MOD             reduce using rule 27 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 27 (factor -> FLOAT .)
    MENORQUE        reduce using rule 27 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 27 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 27 (factor -> FLOAT .)
    $end            reduce using rule 27 (factor -> FLOAT .)
    PUTS            reduce using rule 27 (factor -> FLOAT .)
    ID              reduce using rule 27 (factor -> FLOAT .)
    CONSTANT        reduce using rule 27 (factor -> FLOAT .)
    GLOBAL          reduce using rule 27 (factor -> FLOAT .)
    SET             reduce using rule 27 (factor -> FLOAT .)
    LCOR            reduce using rule 27 (factor -> FLOAT .)
    ARRAY           reduce using rule 27 (factor -> FLOAT .)
    LBRACE          reduce using rule 27 (factor -> FLOAT .)
    ELSIF           reduce using rule 27 (factor -> FLOAT .)
    END             reduce using rule 27 (factor -> FLOAT .)
    DO              reduce using rule 27 (factor -> FLOAT .)


state 22

    (36) variables -> ID .

    EQUAL           reduce using rule 36 (variables -> ID .)
    PLUS            reduce using rule 36 (variables -> ID .)
    MINUS           reduce using rule 36 (variables -> ID .)
    TIMES           reduce using rule 36 (variables -> ID .)
    DIVIDE          reduce using rule 36 (variables -> ID .)
    MOD             reduce using rule 36 (variables -> ID .)
    MAYORQUE        reduce using rule 36 (variables -> ID .)
    MENORQUE        reduce using rule 36 (variables -> ID .)
    EQUALSX2        reduce using rule 36 (variables -> ID .)
    NOTEQUALS       reduce using rule 36 (variables -> ID .)
    $end            reduce using rule 36 (variables -> ID .)
    PUTS            reduce using rule 36 (variables -> ID .)
    ID              reduce using rule 36 (variables -> ID .)
    CONSTANT        reduce using rule 36 (variables -> ID .)
    GLOBAL          reduce using rule 36 (variables -> ID .)
    SET             reduce using rule 36 (variables -> ID .)
    LCOR            reduce using rule 36 (variables -> ID .)
    ARRAY           reduce using rule 36 (variables -> ID .)
    LBRACE          reduce using rule 36 (variables -> ID .)
    ELSIF           reduce using rule 36 (variables -> ID .)
    END             reduce using rule 36 (variables -> ID .)
    IN              reduce using rule 36 (variables -> ID .)
    FLECHA          reduce using rule 36 (variables -> ID .)
    DO              reduce using rule 36 (variables -> ID .)
    RPAREN          reduce using rule 36 (variables -> ID .)


state 23

    (37) variables -> CONSTANT .

    EQUAL           reduce using rule 37 (variables -> CONSTANT .)
    PLUS            reduce using rule 37 (variables -> CONSTANT .)
    MINUS           reduce using rule 37 (variables -> CONSTANT .)
    TIMES           reduce using rule 37 (variables -> CONSTANT .)
    DIVIDE          reduce using rule 37 (variables -> CONSTANT .)
    MOD             reduce using rule 37 (variables -> CONSTANT .)
    MAYORQUE        reduce using rule 37 (variables -> CONSTANT .)
    MENORQUE        reduce using rule 37 (variables -> CONSTANT .)
    EQUALSX2        reduce using rule 37 (variables -> CONSTANT .)
    NOTEQUALS       reduce using rule 37 (variables -> CONSTANT .)
    $end            reduce using rule 37 (variables -> CONSTANT .)
    PUTS            reduce using rule 37 (variables -> CONSTANT .)
    ID              reduce using rule 37 (variables -> CONSTANT .)
    CONSTANT        reduce using rule 37 (variables -> CONSTANT .)
    GLOBAL          reduce using rule 37 (variables -> CONSTANT .)
    SET             reduce using rule 37 (variables -> CONSTANT .)
    LCOR            reduce using rule 37 (variables -> CONSTANT .)
    ARRAY           reduce using rule 37 (variables -> CONSTANT .)
    LBRACE          reduce using rule 37 (variables -> CONSTANT .)
    ELSIF           reduce using rule 37 (variables -> CONSTANT .)
    END             reduce using rule 37 (variables -> CONSTANT .)
    IN              reduce using rule 37 (variables -> CONSTANT .)
    FLECHA          reduce using rule 37 (variables -> CONSTANT .)
    DO              reduce using rule 37 (variables -> CONSTANT .)
    RPAREN          reduce using rule 37 (variables -> CONSTANT .)


state 24

    (38) variables -> GLOBAL .

    EQUAL           reduce using rule 38 (variables -> GLOBAL .)
    PLUS            reduce using rule 38 (variables -> GLOBAL .)
    MINUS           reduce using rule 38 (variables -> GLOBAL .)
    TIMES           reduce using rule 38 (variables -> GLOBAL .)
    DIVIDE          reduce using rule 38 (variables -> GLOBAL .)
    MOD             reduce using rule 38 (variables -> GLOBAL .)
    MAYORQUE        reduce using rule 38 (variables -> GLOBAL .)
    MENORQUE        reduce using rule 38 (variables -> GLOBAL .)
    EQUALSX2        reduce using rule 38 (variables -> GLOBAL .)
    NOTEQUALS       reduce using rule 38 (variables -> GLOBAL .)
    $end            reduce using rule 38 (variables -> GLOBAL .)
    PUTS            reduce using rule 38 (variables -> GLOBAL .)
    ID              reduce using rule 38 (variables -> GLOBAL .)
    CONSTANT        reduce using rule 38 (variables -> GLOBAL .)
    GLOBAL          reduce using rule 38 (variables -> GLOBAL .)
    SET             reduce using rule 38 (variables -> GLOBAL .)
    LCOR            reduce using rule 38 (variables -> GLOBAL .)
    ARRAY           reduce using rule 38 (variables -> GLOBAL .)
    LBRACE          reduce using rule 38 (variables -> GLOBAL .)
    ELSIF           reduce using rule 38 (variables -> GLOBAL .)
    END             reduce using rule 38 (variables -> GLOBAL .)
    IN              reduce using rule 38 (variables -> GLOBAL .)
    FLECHA          reduce using rule 38 (variables -> GLOBAL .)
    DO              reduce using rule 38 (variables -> GLOBAL .)
    RPAREN          reduce using rule 38 (variables -> GLOBAL .)


state 25

    (60) funcionsconjunto -> conjunto . PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> conjunto . PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> conjunto . PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> conjunto . PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> conjunto . PUNTO SIZE

    PUNTO           shift and go to state 60


state 26

    (80) funcionsformacion -> formacion . PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> formacion . PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> formacion . PUNTO FIRST
    (84) funcionsformacion -> formacion . PUNTO FIRST LPAREN RPAREN

    PUNTO           shift and go to state 61


state 27

    (101) funcionsHash -> hash_add .

    $end            reduce using rule 101 (funcionsHash -> hash_add .)
    PUTS            reduce using rule 101 (funcionsHash -> hash_add .)
    ID              reduce using rule 101 (funcionsHash -> hash_add .)
    CONSTANT        reduce using rule 101 (funcionsHash -> hash_add .)
    GLOBAL          reduce using rule 101 (funcionsHash -> hash_add .)
    SET             reduce using rule 101 (funcionsHash -> hash_add .)
    LCOR            reduce using rule 101 (funcionsHash -> hash_add .)
    ARRAY           reduce using rule 101 (funcionsHash -> hash_add .)
    LBRACE          reduce using rule 101 (funcionsHash -> hash_add .)
    ELSIF           reduce using rule 101 (funcionsHash -> hash_add .)
    END             reduce using rule 101 (funcionsHash -> hash_add .)


state 28

    (102) funcionsHash -> hash_delete .

    $end            reduce using rule 102 (funcionsHash -> hash_delete .)
    PUTS            reduce using rule 102 (funcionsHash -> hash_delete .)
    ID              reduce using rule 102 (funcionsHash -> hash_delete .)
    CONSTANT        reduce using rule 102 (funcionsHash -> hash_delete .)
    GLOBAL          reduce using rule 102 (funcionsHash -> hash_delete .)
    SET             reduce using rule 102 (funcionsHash -> hash_delete .)
    LCOR            reduce using rule 102 (funcionsHash -> hash_delete .)
    ARRAY           reduce using rule 102 (funcionsHash -> hash_delete .)
    LBRACE          reduce using rule 102 (funcionsHash -> hash_delete .)
    ELSIF           reduce using rule 102 (funcionsHash -> hash_delete .)
    END             reduce using rule 102 (funcionsHash -> hash_delete .)


state 29

    (103) funcionsHash -> hash_key .

    $end            reduce using rule 103 (funcionsHash -> hash_key .)
    PUTS            reduce using rule 103 (funcionsHash -> hash_key .)
    ID              reduce using rule 103 (funcionsHash -> hash_key .)
    CONSTANT        reduce using rule 103 (funcionsHash -> hash_key .)
    GLOBAL          reduce using rule 103 (funcionsHash -> hash_key .)
    SET             reduce using rule 103 (funcionsHash -> hash_key .)
    LCOR            reduce using rule 103 (funcionsHash -> hash_key .)
    ARRAY           reduce using rule 103 (funcionsHash -> hash_key .)
    LBRACE          reduce using rule 103 (funcionsHash -> hash_key .)
    ELSIF           reduce using rule 103 (funcionsHash -> hash_key .)
    END             reduce using rule 103 (funcionsHash -> hash_key .)


state 30

    (47) conjunto -> SET . arr
    (48) conjunto -> SET . LCOR RCOR
    (56) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 63

    arr                            shift and go to state 62

state 31

    (76) formacion -> LCOR . repetirvalor RCOR
    (77) formacion -> LCOR . RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 65
    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    repetirvalor                   shift and go to state 64
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 32

    (78) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 72


state 33

    (98) hash_add -> hash . PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> hash . PUNTO LPAREN clave RPAREN
    (100) hash_key -> hash . PUNTO KEY LPAREN value RPAREN

    PUNTO           shift and go to state 73


state 34

    (85) hash -> LBRACE . hash_content RBRACE
    (87) hash_content -> . hash_element
    (88) hash_content -> . hash_elements
    (89) hash_element -> . clave FLECHA value
    (86) hash_elements -> . hash_element hash_more_elements
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_content                   shift and go to state 74
    hash_element                   shift and go to state 75
    hash_elements                  shift and go to state 76
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 35

    (14) expression -> factor operadoresMat . factor
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    factor                         shift and go to state 82
    variables                      shift and go to state 45
    expression                     shift and go to state 46

state 36

    (20) operadoresMat -> PLUS .

    INT             reduce using rule 20 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 20 (operadoresMat -> PLUS .)
    ID              reduce using rule 20 (operadoresMat -> PLUS .)
    CONSTANT        reduce using rule 20 (operadoresMat -> PLUS .)
    GLOBAL          reduce using rule 20 (operadoresMat -> PLUS .)


state 37

    (21) operadoresMat -> MINUS .

    INT             reduce using rule 21 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 21 (operadoresMat -> MINUS .)
    ID              reduce using rule 21 (operadoresMat -> MINUS .)
    CONSTANT        reduce using rule 21 (operadoresMat -> MINUS .)
    GLOBAL          reduce using rule 21 (operadoresMat -> MINUS .)


state 38

    (22) operadoresMat -> TIMES .

    INT             reduce using rule 22 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 22 (operadoresMat -> TIMES .)
    ID              reduce using rule 22 (operadoresMat -> TIMES .)
    CONSTANT        reduce using rule 22 (operadoresMat -> TIMES .)
    GLOBAL          reduce using rule 22 (operadoresMat -> TIMES .)


state 39

    (23) operadoresMat -> DIVIDE .

    INT             reduce using rule 23 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 23 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 23 (operadoresMat -> DIVIDE .)
    CONSTANT        reduce using rule 23 (operadoresMat -> DIVIDE .)
    GLOBAL          reduce using rule 23 (operadoresMat -> DIVIDE .)


state 40

    (24) operadoresMat -> MOD .

    INT             reduce using rule 24 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 24 (operadoresMat -> MOD .)
    ID              reduce using rule 24 (operadoresMat -> MOD .)
    CONSTANT        reduce using rule 24 (operadoresMat -> MOD .)
    GLOBAL          reduce using rule 24 (operadoresMat -> MOD .)


state 41

    (9) impresion -> PUTS factor .
    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (17) operadoresComp -> . MAYORQUE
    (18) operadoresComp -> . MENORQUE
    (19) operadoresComp -> . operadoresEquals
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 9 (impresion -> PUTS factor .)
    PUTS            reduce using rule 9 (impresion -> PUTS factor .)
    ID              reduce using rule 9 (impresion -> PUTS factor .)
    CONSTANT        reduce using rule 9 (impresion -> PUTS factor .)
    GLOBAL          reduce using rule 9 (impresion -> PUTS factor .)
    SET             reduce using rule 9 (impresion -> PUTS factor .)
    LCOR            reduce using rule 9 (impresion -> PUTS factor .)
    ARRAY           reduce using rule 9 (impresion -> PUTS factor .)
    LBRACE          reduce using rule 9 (impresion -> PUTS factor .)
    ELSIF           reduce using rule 9 (impresion -> PUTS factor .)
    END             reduce using rule 9 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 84
    MENORQUE        shift and go to state 85
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresComp                 shift and go to state 83
    operadoresMat                  shift and go to state 35
    operadoresEquals               shift and go to state 86

state 42

    (10) impresion -> PUTS comparacion .

    $end            reduce using rule 10 (impresion -> PUTS comparacion .)
    PUTS            reduce using rule 10 (impresion -> PUTS comparacion .)
    ID              reduce using rule 10 (impresion -> PUTS comparacion .)
    CONSTANT        reduce using rule 10 (impresion -> PUTS comparacion .)
    GLOBAL          reduce using rule 10 (impresion -> PUTS comparacion .)
    SET             reduce using rule 10 (impresion -> PUTS comparacion .)
    LCOR            reduce using rule 10 (impresion -> PUTS comparacion .)
    ARRAY           reduce using rule 10 (impresion -> PUTS comparacion .)
    LBRACE          reduce using rule 10 (impresion -> PUTS comparacion .)
    ELSIF           reduce using rule 10 (impresion -> PUTS comparacion .)
    END             reduce using rule 10 (impresion -> PUTS comparacion .)


state 43

    (11) impresion -> PUTS comparacion_bool .

    $end            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    PUTS            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ID              reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    CONSTANT        reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    GLOBAL          reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    SET             reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    LCOR            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ARRAY           reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    LBRACE          reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ELSIF           reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    END             reduce using rule 11 (impresion -> PUTS comparacion_bool .)


state 44

    (12) impresion -> PUTS STRING .

    $end            reduce using rule 12 (impresion -> PUTS STRING .)
    PUTS            reduce using rule 12 (impresion -> PUTS STRING .)
    ID              reduce using rule 12 (impresion -> PUTS STRING .)
    CONSTANT        reduce using rule 12 (impresion -> PUTS STRING .)
    GLOBAL          reduce using rule 12 (impresion -> PUTS STRING .)
    SET             reduce using rule 12 (impresion -> PUTS STRING .)
    LCOR            reduce using rule 12 (impresion -> PUTS STRING .)
    ARRAY           reduce using rule 12 (impresion -> PUTS STRING .)
    LBRACE          reduce using rule 12 (impresion -> PUTS STRING .)
    ELSIF           reduce using rule 12 (impresion -> PUTS STRING .)
    END             reduce using rule 12 (impresion -> PUTS STRING .)


state 45

    (26) factor -> variables .

    MAYORQUE        reduce using rule 26 (factor -> variables .)
    MENORQUE        reduce using rule 26 (factor -> variables .)
    PLUS            reduce using rule 26 (factor -> variables .)
    MINUS           reduce using rule 26 (factor -> variables .)
    TIMES           reduce using rule 26 (factor -> variables .)
    DIVIDE          reduce using rule 26 (factor -> variables .)
    MOD             reduce using rule 26 (factor -> variables .)
    EQUALSX2        reduce using rule 26 (factor -> variables .)
    NOTEQUALS       reduce using rule 26 (factor -> variables .)
    $end            reduce using rule 26 (factor -> variables .)
    PUTS            reduce using rule 26 (factor -> variables .)
    ID              reduce using rule 26 (factor -> variables .)
    CONSTANT        reduce using rule 26 (factor -> variables .)
    GLOBAL          reduce using rule 26 (factor -> variables .)
    SET             reduce using rule 26 (factor -> variables .)
    LCOR            reduce using rule 26 (factor -> variables .)
    ARRAY           reduce using rule 26 (factor -> variables .)
    LBRACE          reduce using rule 26 (factor -> variables .)
    ELSIF           reduce using rule 26 (factor -> variables .)
    END             reduce using rule 26 (factor -> variables .)
    DO              reduce using rule 26 (factor -> variables .)


state 46

    (28) factor -> expression .

    MAYORQUE        reduce using rule 28 (factor -> expression .)
    MENORQUE        reduce using rule 28 (factor -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)
    EQUALSX2        reduce using rule 28 (factor -> expression .)
    NOTEQUALS       reduce using rule 28 (factor -> expression .)
    $end            reduce using rule 28 (factor -> expression .)
    PUTS            reduce using rule 28 (factor -> expression .)
    ID              reduce using rule 28 (factor -> expression .)
    CONSTANT        reduce using rule 28 (factor -> expression .)
    GLOBAL          reduce using rule 28 (factor -> expression .)
    SET             reduce using rule 28 (factor -> expression .)
    LCOR            reduce using rule 28 (factor -> expression .)
    ARRAY           reduce using rule 28 (factor -> expression .)
    LBRACE          reduce using rule 28 (factor -> expression .)
    ELSIF           reduce using rule 28 (factor -> expression .)
    END             reduce using rule 28 (factor -> expression .)
    DO              reduce using rule 28 (factor -> expression .)


state 47

    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    AND             shift and go to state 90
    OR              shift and go to state 91
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 89
    operadoresEquals               shift and go to state 92

state 48

    (29) booleanos -> TRUE .

    AND             reduce using rule 29 (booleanos -> TRUE .)
    OR              reduce using rule 29 (booleanos -> TRUE .)
    EQUALSX2        reduce using rule 29 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 29 (booleanos -> TRUE .)
    DO              reduce using rule 29 (booleanos -> TRUE .)
    PUTS            reduce using rule 29 (booleanos -> TRUE .)
    ID              reduce using rule 29 (booleanos -> TRUE .)
    CONSTANT        reduce using rule 29 (booleanos -> TRUE .)
    GLOBAL          reduce using rule 29 (booleanos -> TRUE .)
    SET             reduce using rule 29 (booleanos -> TRUE .)
    LCOR            reduce using rule 29 (booleanos -> TRUE .)
    ARRAY           reduce using rule 29 (booleanos -> TRUE .)
    LBRACE          reduce using rule 29 (booleanos -> TRUE .)
    COMMA           reduce using rule 29 (booleanos -> TRUE .)
    RCOR            reduce using rule 29 (booleanos -> TRUE .)
    $end            reduce using rule 29 (booleanos -> TRUE .)
    ELSIF           reduce using rule 29 (booleanos -> TRUE .)
    END             reduce using rule 29 (booleanos -> TRUE .)
    RPAREN          reduce using rule 29 (booleanos -> TRUE .)
    RBRACE          reduce using rule 29 (booleanos -> TRUE .)


state 49

    (30) booleanos -> FALSE .

    AND             reduce using rule 30 (booleanos -> FALSE .)
    OR              reduce using rule 30 (booleanos -> FALSE .)
    EQUALSX2        reduce using rule 30 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 30 (booleanos -> FALSE .)
    DO              reduce using rule 30 (booleanos -> FALSE .)
    PUTS            reduce using rule 30 (booleanos -> FALSE .)
    ID              reduce using rule 30 (booleanos -> FALSE .)
    CONSTANT        reduce using rule 30 (booleanos -> FALSE .)
    GLOBAL          reduce using rule 30 (booleanos -> FALSE .)
    SET             reduce using rule 30 (booleanos -> FALSE .)
    LCOR            reduce using rule 30 (booleanos -> FALSE .)
    ARRAY           reduce using rule 30 (booleanos -> FALSE .)
    LBRACE          reduce using rule 30 (booleanos -> FALSE .)
    COMMA           reduce using rule 30 (booleanos -> FALSE .)
    RCOR            reduce using rule 30 (booleanos -> FALSE .)
    $end            reduce using rule 30 (booleanos -> FALSE .)
    ELSIF           reduce using rule 30 (booleanos -> FALSE .)
    END             reduce using rule 30 (booleanos -> FALSE .)
    RPAREN          reduce using rule 30 (booleanos -> FALSE .)
    RBRACE          reduce using rule 30 (booleanos -> FALSE .)


state 50

    (39) asignacion -> variables EQUAL . factor
    (40) asignacion -> variables EQUAL . STRING
    (41) asignacion -> variables EQUAL . booleanos
    (42) asignacion -> variables EQUAL . comparacion_bool
    (43) asignacion -> variables EQUAL . struct
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (16) comparacion_bool -> . booleanos operadoresBool booleanos
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    STRING          shift and go to state 94
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    variables                      shift and go to state 45
    factor                         shift and go to state 93
    booleanos                      shift and go to state 95
    comparacion_bool               shift and go to state 96
    struct                         shift and go to state 97
    expression                     shift and go to state 46
    conjunto                       shift and go to state 98
    formacion                      shift and go to state 99
    hash                           shift and go to state 100

state 51

    (13) leer -> GETS PUNTO . CHOMP

    CHOMP           shift and go to state 101


state 52

    (70) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    IN              shift and go to state 102


state 53

    (75) sentenciawhile -> WHILE condicion . DO repetircontenido END

    DO              shift and go to state 103


state 54

    (71) condicion -> comparacion .

    DO              reduce using rule 71 (condicion -> comparacion .)
    PUTS            reduce using rule 71 (condicion -> comparacion .)
    ID              reduce using rule 71 (condicion -> comparacion .)
    CONSTANT        reduce using rule 71 (condicion -> comparacion .)
    GLOBAL          reduce using rule 71 (condicion -> comparacion .)
    SET             reduce using rule 71 (condicion -> comparacion .)
    LCOR            reduce using rule 71 (condicion -> comparacion .)
    ARRAY           reduce using rule 71 (condicion -> comparacion .)
    LBRACE          reduce using rule 71 (condicion -> comparacion .)


state 55

    (72) condicion -> comparacion_bool .

    DO              reduce using rule 72 (condicion -> comparacion_bool .)
    PUTS            reduce using rule 72 (condicion -> comparacion_bool .)
    ID              reduce using rule 72 (condicion -> comparacion_bool .)
    CONSTANT        reduce using rule 72 (condicion -> comparacion_bool .)
    GLOBAL          reduce using rule 72 (condicion -> comparacion_bool .)
    SET             reduce using rule 72 (condicion -> comparacion_bool .)
    LCOR            reduce using rule 72 (condicion -> comparacion_bool .)
    ARRAY           reduce using rule 72 (condicion -> comparacion_bool .)
    LBRACE          reduce using rule 72 (condicion -> comparacion_bool .)


state 56

    (73) condicion -> booleanos .
    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    DO              reduce using rule 73 (condicion -> booleanos .)
    PUTS            reduce using rule 73 (condicion -> booleanos .)
    ID              reduce using rule 73 (condicion -> booleanos .)
    CONSTANT        reduce using rule 73 (condicion -> booleanos .)
    GLOBAL          reduce using rule 73 (condicion -> booleanos .)
    SET             reduce using rule 73 (condicion -> booleanos .)
    LCOR            reduce using rule 73 (condicion -> booleanos .)
    ARRAY           reduce using rule 73 (condicion -> booleanos .)
    LBRACE          reduce using rule 73 (condicion -> booleanos .)
    AND             shift and go to state 90
    OR              shift and go to state 91
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 89
    operadoresEquals               shift and go to state 92

state 57

    (74) condicion -> ARRAY . PUNTO NEW LPAREN arr RPAREN

    PUNTO           shift and go to state 104


state 58

    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (17) operadoresComp -> . MAYORQUE
    (18) operadoresComp -> . MENORQUE
    (19) operadoresComp -> . operadoresEquals
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    MAYORQUE        shift and go to state 84
    MENORQUE        shift and go to state 85
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresComp                 shift and go to state 83
    operadoresMat                  shift and go to state 35
    operadoresEquals               shift and go to state 86

state 59

    (104) sentenciaElsif -> IF condicion . repetircontenido mas_sentencias END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 105
    contenido                      shift and go to state 106
    impresion                      shift and go to state 107
    asignacion                     shift and go to state 108
    funcionstruct                  shift and go to state 109
    variables                      shift and go to state 110
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 60

    (60) funcionsconjunto -> conjunto PUNTO . ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> conjunto PUNTO . ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> conjunto PUNTO . MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> conjunto PUNTO . SIZE LPAREN RPAREN
    (64) funcionsconjunto -> conjunto PUNTO . SIZE

    ADD             shift and go to state 111
    MERGE           shift and go to state 112
    SIZE            shift and go to state 113


state 61

    (80) funcionsformacion -> formacion PUNTO . LENGTH LPAREN RPAREN
    (81) funcionsformacion -> formacion PUNTO . PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> formacion PUNTO . FIRST
    (84) funcionsformacion -> formacion PUNTO . FIRST LPAREN RPAREN

    LENGTH          shift and go to state 114
    PUSH            shift and go to state 115
    SAMPLE          shift and go to state 116
    FIRST           shift and go to state 117


state 62

    (47) conjunto -> SET arr .

    PUNTO           reduce using rule 47 (conjunto -> SET arr .)
    $end            reduce using rule 47 (conjunto -> SET arr .)
    PUTS            reduce using rule 47 (conjunto -> SET arr .)
    ID              reduce using rule 47 (conjunto -> SET arr .)
    CONSTANT        reduce using rule 47 (conjunto -> SET arr .)
    GLOBAL          reduce using rule 47 (conjunto -> SET arr .)
    SET             reduce using rule 47 (conjunto -> SET arr .)
    LCOR            reduce using rule 47 (conjunto -> SET arr .)
    ARRAY           reduce using rule 47 (conjunto -> SET arr .)
    LBRACE          reduce using rule 47 (conjunto -> SET arr .)
    ELSIF           reduce using rule 47 (conjunto -> SET arr .)
    END             reduce using rule 47 (conjunto -> SET arr .)
    COMMA           reduce using rule 47 (conjunto -> SET arr .)
    RBRACE          reduce using rule 47 (conjunto -> SET arr .)
    RPAREN          reduce using rule 47 (conjunto -> SET arr .)


state 63

    (48) conjunto -> SET LCOR . RCOR
    (56) arr -> LCOR . repetirvalor RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 118
    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    repetirvalor                   shift and go to state 119
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 64

    (76) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 120


state 65

    (77) formacion -> LCOR RCOR .

    PUNTO           reduce using rule 77 (formacion -> LCOR RCOR .)
    $end            reduce using rule 77 (formacion -> LCOR RCOR .)
    PUTS            reduce using rule 77 (formacion -> LCOR RCOR .)
    ID              reduce using rule 77 (formacion -> LCOR RCOR .)
    CONSTANT        reduce using rule 77 (formacion -> LCOR RCOR .)
    GLOBAL          reduce using rule 77 (formacion -> LCOR RCOR .)
    SET             reduce using rule 77 (formacion -> LCOR RCOR .)
    LCOR            reduce using rule 77 (formacion -> LCOR RCOR .)
    ARRAY           reduce using rule 77 (formacion -> LCOR RCOR .)
    LBRACE          reduce using rule 77 (formacion -> LCOR RCOR .)
    ELSIF           reduce using rule 77 (formacion -> LCOR RCOR .)
    END             reduce using rule 77 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 77 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 77 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 77 (formacion -> LCOR RCOR .)


state 66

    (54) repetirvalor -> valor .
    (55) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 54 (repetirvalor -> valor .)
    RPAREN          reduce using rule 54 (repetirvalor -> valor .)
    COMMA           shift and go to state 121


state 67

    (49) valor -> INT .

    COMMA           reduce using rule 49 (valor -> INT .)
    RCOR            reduce using rule 49 (valor -> INT .)
    RPAREN          reduce using rule 49 (valor -> INT .)
    RBRACE          reduce using rule 49 (valor -> INT .)


state 68

    (50) valor -> ID .

    COMMA           reduce using rule 50 (valor -> ID .)
    RCOR            reduce using rule 50 (valor -> ID .)
    RPAREN          reduce using rule 50 (valor -> ID .)
    RBRACE          reduce using rule 50 (valor -> ID .)


state 69

    (51) valor -> STRING .

    COMMA           reduce using rule 51 (valor -> STRING .)
    RCOR            reduce using rule 51 (valor -> STRING .)
    RPAREN          reduce using rule 51 (valor -> STRING .)
    RBRACE          reduce using rule 51 (valor -> STRING .)


state 70

    (52) valor -> booleanos .

    COMMA           reduce using rule 52 (valor -> booleanos .)
    RCOR            reduce using rule 52 (valor -> booleanos .)
    RPAREN          reduce using rule 52 (valor -> booleanos .)
    RBRACE          reduce using rule 52 (valor -> booleanos .)


state 71

    (53) valor -> FLOAT .

    COMMA           reduce using rule 53 (valor -> FLOAT .)
    RCOR            reduce using rule 53 (valor -> FLOAT .)
    RPAREN          reduce using rule 53 (valor -> FLOAT .)
    RBRACE          reduce using rule 53 (valor -> FLOAT .)


state 72

    (78) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (79) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 122


state 73

    (98) hash_add -> hash PUNTO . STORE LPAREN hash_element RPAREN
    (99) hash_delete -> hash PUNTO . LPAREN clave RPAREN
    (100) hash_key -> hash PUNTO . KEY LPAREN value RPAREN

    STORE           shift and go to state 123
    LPAREN          shift and go to state 124
    KEY             shift and go to state 125


state 74

    (85) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 126


state 75

    (87) hash_content -> hash_element .
    (86) hash_elements -> hash_element . hash_more_elements
    (90) hash_more_elements -> . COMMA hash_element
    (91) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 87 (hash_content -> hash_element .)
    COMMA           shift and go to state 128

    hash_more_elements             shift and go to state 127

state 76

    (88) hash_content -> hash_elements .

    RBRACE          reduce using rule 88 (hash_content -> hash_elements .)


state 77

    (89) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 129


state 78

    (92) clave -> variables .

    FLECHA          reduce using rule 92 (clave -> variables .)
    RPAREN          reduce using rule 92 (clave -> variables .)


state 79

    (93) clave -> STRING .

    FLECHA          reduce using rule 93 (clave -> STRING .)
    RPAREN          reduce using rule 93 (clave -> STRING .)


state 80

    (94) clave -> INT .

    FLECHA          reduce using rule 94 (clave -> INT .)
    RPAREN          reduce using rule 94 (clave -> INT .)


state 81

    (95) clave -> FLOAT .

    FLECHA          reduce using rule 95 (clave -> FLOAT .)
    RPAREN          reduce using rule 95 (clave -> FLOAT .)


state 82

    (14) expression -> factor operadoresMat factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    $end            reduce using rule 14 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 14 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 14 (expression -> factor operadoresMat factor .)
    PUTS            reduce using rule 14 (expression -> factor operadoresMat factor .)
    ID              reduce using rule 14 (expression -> factor operadoresMat factor .)
    CONSTANT        reduce using rule 14 (expression -> factor operadoresMat factor .)
    GLOBAL          reduce using rule 14 (expression -> factor operadoresMat factor .)
    SET             reduce using rule 14 (expression -> factor operadoresMat factor .)
    LCOR            reduce using rule 14 (expression -> factor operadoresMat factor .)
    ARRAY           reduce using rule 14 (expression -> factor operadoresMat factor .)
    LBRACE          reduce using rule 14 (expression -> factor operadoresMat factor .)
    ELSIF           reduce using rule 14 (expression -> factor operadoresMat factor .)
    END             reduce using rule 14 (expression -> factor operadoresMat factor .)
    DO              reduce using rule 14 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

  ! PLUS            [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 35

state 83

    (15) comparacion -> factor operadoresComp . factor
    (25) factor -> . INT
    (26) factor -> . variables
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    factor                         shift and go to state 130
    variables                      shift and go to state 45
    expression                     shift and go to state 46

state 84

    (17) operadoresComp -> MAYORQUE .

    INT             reduce using rule 17 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 17 (operadoresComp -> MAYORQUE .)
    ID              reduce using rule 17 (operadoresComp -> MAYORQUE .)
    CONSTANT        reduce using rule 17 (operadoresComp -> MAYORQUE .)
    GLOBAL          reduce using rule 17 (operadoresComp -> MAYORQUE .)


state 85

    (18) operadoresComp -> MENORQUE .

    INT             reduce using rule 18 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 18 (operadoresComp -> MENORQUE .)
    ID              reduce using rule 18 (operadoresComp -> MENORQUE .)
    CONSTANT        reduce using rule 18 (operadoresComp -> MENORQUE .)
    GLOBAL          reduce using rule 18 (operadoresComp -> MENORQUE .)


state 86

    (19) operadoresComp -> operadoresEquals .

    INT             reduce using rule 19 (operadoresComp -> operadoresEquals .)
    FLOAT           reduce using rule 19 (operadoresComp -> operadoresEquals .)
    ID              reduce using rule 19 (operadoresComp -> operadoresEquals .)
    CONSTANT        reduce using rule 19 (operadoresComp -> operadoresEquals .)
    GLOBAL          reduce using rule 19 (operadoresComp -> operadoresEquals .)


state 87

    (34) operadoresEquals -> EQUALSX2 .

    INT             reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    ID              reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    CONSTANT        reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    GLOBAL          reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    TRUE            reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)


state 88

    (35) operadoresEquals -> NOTEQUALS .

    INT             reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    ID              reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    CONSTANT        reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    GLOBAL          reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    TRUE            reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)


state 89

    (16) comparacion_bool -> booleanos operadoresBool . booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    booleanos                      shift and go to state 131

state 90

    (31) operadoresBool -> AND .

    TRUE            reduce using rule 31 (operadoresBool -> AND .)
    FALSE           reduce using rule 31 (operadoresBool -> AND .)


state 91

    (32) operadoresBool -> OR .

    TRUE            reduce using rule 32 (operadoresBool -> OR .)
    FALSE           reduce using rule 32 (operadoresBool -> OR .)


state 92

    (33) operadoresBool -> operadoresEquals .

    TRUE            reduce using rule 33 (operadoresBool -> operadoresEquals .)
    FALSE           reduce using rule 33 (operadoresBool -> operadoresEquals .)


state 93

    (39) asignacion -> variables EQUAL factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    $end            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    PUTS            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ID              reduce using rule 39 (asignacion -> variables EQUAL factor .)
    CONSTANT        reduce using rule 39 (asignacion -> variables EQUAL factor .)
    GLOBAL          reduce using rule 39 (asignacion -> variables EQUAL factor .)
    SET             reduce using rule 39 (asignacion -> variables EQUAL factor .)
    LCOR            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ARRAY           reduce using rule 39 (asignacion -> variables EQUAL factor .)
    LBRACE          reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ELSIF           reduce using rule 39 (asignacion -> variables EQUAL factor .)
    END             reduce using rule 39 (asignacion -> variables EQUAL factor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operadoresMat                  shift and go to state 35

state 94

    (40) asignacion -> variables EQUAL STRING .

    $end            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    PUTS            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ID              reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    CONSTANT        reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    GLOBAL          reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    SET             reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    LCOR            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ARRAY           reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    LBRACE          reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ELSIF           reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    END             reduce using rule 40 (asignacion -> variables EQUAL STRING .)


state 95

    (41) asignacion -> variables EQUAL booleanos .
    (16) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    PUTS            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ID              reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    CONSTANT        reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    GLOBAL          reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    SET             reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    LCOR            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ARRAY           reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    LBRACE          reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ELSIF           reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    END             reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    AND             shift and go to state 90
    OR              shift and go to state 91
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 89
    operadoresEquals               shift and go to state 92

state 96

    (42) asignacion -> variables EQUAL comparacion_bool .

    $end            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    PUTS            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ID              reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    CONSTANT        reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    GLOBAL          reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    SET             reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    LCOR            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ARRAY           reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    LBRACE          reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ELSIF           reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    END             reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)


state 97

    (43) asignacion -> variables EQUAL struct .

    $end            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    PUTS            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ID              reduce using rule 43 (asignacion -> variables EQUAL struct .)
    CONSTANT        reduce using rule 43 (asignacion -> variables EQUAL struct .)
    GLOBAL          reduce using rule 43 (asignacion -> variables EQUAL struct .)
    SET             reduce using rule 43 (asignacion -> variables EQUAL struct .)
    LCOR            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ARRAY           reduce using rule 43 (asignacion -> variables EQUAL struct .)
    LBRACE          reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ELSIF           reduce using rule 43 (asignacion -> variables EQUAL struct .)
    END             reduce using rule 43 (asignacion -> variables EQUAL struct .)


state 98

    (44) struct -> conjunto .

    $end            reduce using rule 44 (struct -> conjunto .)
    PUTS            reduce using rule 44 (struct -> conjunto .)
    ID              reduce using rule 44 (struct -> conjunto .)
    CONSTANT        reduce using rule 44 (struct -> conjunto .)
    GLOBAL          reduce using rule 44 (struct -> conjunto .)
    SET             reduce using rule 44 (struct -> conjunto .)
    LCOR            reduce using rule 44 (struct -> conjunto .)
    ARRAY           reduce using rule 44 (struct -> conjunto .)
    LBRACE          reduce using rule 44 (struct -> conjunto .)
    ELSIF           reduce using rule 44 (struct -> conjunto .)
    END             reduce using rule 44 (struct -> conjunto .)
    COMMA           reduce using rule 44 (struct -> conjunto .)
    RBRACE          reduce using rule 44 (struct -> conjunto .)
    RPAREN          reduce using rule 44 (struct -> conjunto .)


state 99

    (45) struct -> formacion .

    $end            reduce using rule 45 (struct -> formacion .)
    PUTS            reduce using rule 45 (struct -> formacion .)
    ID              reduce using rule 45 (struct -> formacion .)
    CONSTANT        reduce using rule 45 (struct -> formacion .)
    GLOBAL          reduce using rule 45 (struct -> formacion .)
    SET             reduce using rule 45 (struct -> formacion .)
    LCOR            reduce using rule 45 (struct -> formacion .)
    ARRAY           reduce using rule 45 (struct -> formacion .)
    LBRACE          reduce using rule 45 (struct -> formacion .)
    ELSIF           reduce using rule 45 (struct -> formacion .)
    END             reduce using rule 45 (struct -> formacion .)
    COMMA           reduce using rule 45 (struct -> formacion .)
    RBRACE          reduce using rule 45 (struct -> formacion .)
    RPAREN          reduce using rule 45 (struct -> formacion .)


state 100

    (46) struct -> hash .

    $end            reduce using rule 46 (struct -> hash .)
    PUTS            reduce using rule 46 (struct -> hash .)
    ID              reduce using rule 46 (struct -> hash .)
    CONSTANT        reduce using rule 46 (struct -> hash .)
    GLOBAL          reduce using rule 46 (struct -> hash .)
    SET             reduce using rule 46 (struct -> hash .)
    LCOR            reduce using rule 46 (struct -> hash .)
    ARRAY           reduce using rule 46 (struct -> hash .)
    LBRACE          reduce using rule 46 (struct -> hash .)
    ELSIF           reduce using rule 46 (struct -> hash .)
    END             reduce using rule 46 (struct -> hash .)
    COMMA           reduce using rule 46 (struct -> hash .)
    RBRACE          reduce using rule 46 (struct -> hash .)
    RPAREN          reduce using rule 46 (struct -> hash .)


state 101

    (13) leer -> GETS PUNTO CHOMP .

    $end            reduce using rule 13 (leer -> GETS PUNTO CHOMP .)


state 102

    (70) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    LPAREN          shift and go to state 132


state 103

    (75) sentenciawhile -> WHILE condicion DO . repetircontenido END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 133
    contenido                      shift and go to state 106
    impresion                      shift and go to state 107
    asignacion                     shift and go to state 108
    funcionstruct                  shift and go to state 109
    variables                      shift and go to state 110
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 104

    (74) condicion -> ARRAY PUNTO . NEW LPAREN arr RPAREN

    NEW             shift and go to state 134


state 105

    (104) sentenciaElsif -> IF condicion repetircontenido . mas_sentencias END
    (105) mas_sentencias -> . ELSIF repetircontenido
    (106) mas_sentencias -> . ELSIF repetircontenido mas_sentencias

    ELSIF           shift and go to state 136

    mas_sentencias                 shift and go to state 135

state 106

    (68) repetircontenido -> contenido .
    (69) repetircontenido -> contenido . repetircontenido
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    ELSIF           reduce using rule 68 (repetircontenido -> contenido .)
    END             reduce using rule 68 (repetircontenido -> contenido .)
    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    contenido                      shift and go to state 106
    repetircontenido               shift and go to state 137
    impresion                      shift and go to state 107
    asignacion                     shift and go to state 108
    funcionstruct                  shift and go to state 109
    variables                      shift and go to state 110
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 107

    (65) contenido -> impresion .

    PUTS            reduce using rule 65 (contenido -> impresion .)
    ID              reduce using rule 65 (contenido -> impresion .)
    CONSTANT        reduce using rule 65 (contenido -> impresion .)
    GLOBAL          reduce using rule 65 (contenido -> impresion .)
    SET             reduce using rule 65 (contenido -> impresion .)
    LCOR            reduce using rule 65 (contenido -> impresion .)
    ARRAY           reduce using rule 65 (contenido -> impresion .)
    LBRACE          reduce using rule 65 (contenido -> impresion .)
    ELSIF           reduce using rule 65 (contenido -> impresion .)
    END             reduce using rule 65 (contenido -> impresion .)


state 108

    (66) contenido -> asignacion .

    PUTS            reduce using rule 66 (contenido -> asignacion .)
    ID              reduce using rule 66 (contenido -> asignacion .)
    CONSTANT        reduce using rule 66 (contenido -> asignacion .)
    GLOBAL          reduce using rule 66 (contenido -> asignacion .)
    SET             reduce using rule 66 (contenido -> asignacion .)
    LCOR            reduce using rule 66 (contenido -> asignacion .)
    ARRAY           reduce using rule 66 (contenido -> asignacion .)
    LBRACE          reduce using rule 66 (contenido -> asignacion .)
    ELSIF           reduce using rule 66 (contenido -> asignacion .)
    END             reduce using rule 66 (contenido -> asignacion .)


state 109

    (67) contenido -> funcionstruct .

    PUTS            reduce using rule 67 (contenido -> funcionstruct .)
    ID              reduce using rule 67 (contenido -> funcionstruct .)
    CONSTANT        reduce using rule 67 (contenido -> funcionstruct .)
    GLOBAL          reduce using rule 67 (contenido -> funcionstruct .)
    SET             reduce using rule 67 (contenido -> funcionstruct .)
    LCOR            reduce using rule 67 (contenido -> funcionstruct .)
    ARRAY           reduce using rule 67 (contenido -> funcionstruct .)
    LBRACE          reduce using rule 67 (contenido -> funcionstruct .)
    ELSIF           reduce using rule 67 (contenido -> funcionstruct .)
    END             reduce using rule 67 (contenido -> funcionstruct .)


state 110

    (39) asignacion -> variables . EQUAL factor
    (40) asignacion -> variables . EQUAL STRING
    (41) asignacion -> variables . EQUAL booleanos
    (42) asignacion -> variables . EQUAL comparacion_bool
    (43) asignacion -> variables . EQUAL struct

    EQUAL           shift and go to state 50


state 111

    (60) funcionsconjunto -> conjunto PUNTO ADD . LPAREN valor RPAREN
    (61) funcionsconjunto -> conjunto PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 138


state 112

    (62) funcionsconjunto -> conjunto PUNTO MERGE . LPAREN variables RPAREN

    LPAREN          shift and go to state 139


state 113

    (63) funcionsconjunto -> conjunto PUNTO SIZE . LPAREN RPAREN
    (64) funcionsconjunto -> conjunto PUNTO SIZE .

    LPAREN          shift and go to state 140
    $end            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    PUTS            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    ID              reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    CONSTANT        reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    GLOBAL          reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    SET             reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    LCOR            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    ARRAY           reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    LBRACE          reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    ELSIF           reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)
    END             reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE .)


state 114

    (80) funcionsformacion -> formacion PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 141


state 115

    (81) funcionsformacion -> formacion PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 142


state 116

    (82) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN variables RPAREN

    LPAREN          shift and go to state 143


state 117

    (83) funcionsformacion -> formacion PUNTO FIRST .
    (84) funcionsformacion -> formacion PUNTO FIRST . LPAREN RPAREN

    $end            reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    PUTS            reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    ID              reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    CONSTANT        reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    GLOBAL          reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    SET             reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    LCOR            reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    ARRAY           reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    LBRACE          reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    ELSIF           reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    END             reduce using rule 83 (funcionsformacion -> formacion PUNTO FIRST .)
    LPAREN          shift and go to state 144


state 118

    (48) conjunto -> SET LCOR RCOR .

    PUNTO           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    $end            reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    PUTS            reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    ID              reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    CONSTANT        reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    GLOBAL          reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    SET             reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    LCOR            reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    ARRAY           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    LBRACE          reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    ELSIF           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    END             reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 48 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 48 (conjunto -> SET LCOR RCOR .)


state 119

    (56) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 145


state 120

    (76) formacion -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    SET             reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    LCOR            reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    ARRAY           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    LBRACE          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    ELSIF           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    END             reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 76 (formacion -> LCOR repetirvalor RCOR .)


state 121

    (55) repetirvalor -> valor COMMA . repetirvalor
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    valor                          shift and go to state 66
    repetirvalor                   shift and go to state 146
    booleanos                      shift and go to state 70

state 122

    (78) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (79) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 147


state 123

    (98) hash_add -> hash PUNTO STORE . LPAREN hash_element RPAREN

    LPAREN          shift and go to state 148


state 124

    (99) hash_delete -> hash PUNTO LPAREN . clave RPAREN
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    clave                          shift and go to state 149
    variables                      shift and go to state 78

state 125

    (100) hash_key -> hash PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 150


state 126

    (85) hash -> LBRACE hash_content RBRACE .

    PUNTO           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    ID              reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    CONSTANT        reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    GLOBAL          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    SET             reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    LCOR            reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    ARRAY           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    LBRACE          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    ELSIF           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    END             reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 85 (hash -> LBRACE hash_content RBRACE .)


state 127

    (86) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 86 (hash_elements -> hash_element hash_more_elements .)


state 128

    (90) hash_more_elements -> COMMA . hash_element
    (91) hash_more_elements -> COMMA . hash_element hash_more_elements
    (89) hash_element -> . clave FLECHA value
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_element                   shift and go to state 151
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 129

    (89) hash_element -> clave FLECHA . value
    (96) value -> . valor
    (97) value -> . struct
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    value                          shift and go to state 152
    valor                          shift and go to state 153
    struct                         shift and go to state 154
    booleanos                      shift and go to state 70
    conjunto                       shift and go to state 98
    formacion                      shift and go to state 99
    hash                           shift and go to state 100

state 130

    (15) comparacion -> factor operadoresComp factor .
    (14) expression -> factor . operadoresMat factor
    (20) operadoresMat -> . PLUS
    (21) operadoresMat -> . MINUS
    (22) operadoresMat -> . TIMES
    (23) operadoresMat -> . DIVIDE
    (24) operadoresMat -> . MOD

    $end            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PUTS            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ID              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    CONSTANT        reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    GLOBAL          reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    SET             reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    LCOR            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ARRAY           reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    LBRACE          reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ELSIF           reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    END             reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    DO              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operadoresMat                  shift and go to state 35

state 131

    (16) comparacion_bool -> booleanos operadoresBool booleanos .

    $end            reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    PUTS            reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ID              reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    CONSTANT        reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    GLOBAL          reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    SET             reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    LCOR            reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ARRAY           reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    LBRACE          reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ELSIF           reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    END             reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)
    DO              reduce using rule 16 (comparacion_bool -> booleanos operadoresBool booleanos .)


state 132

    (70) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN repetircontenido END

    INT             shift and go to state 155


state 133

    (75) sentenciawhile -> WHILE condicion DO repetircontenido . END

    END             shift and go to state 156


state 134

    (74) condicion -> ARRAY PUNTO NEW . LPAREN arr RPAREN

    LPAREN          shift and go to state 157


state 135

    (104) sentenciaElsif -> IF condicion repetircontenido mas_sentencias . END

    END             shift and go to state 158


state 136

    (105) mas_sentencias -> ELSIF . repetircontenido
    (106) mas_sentencias -> ELSIF . repetircontenido mas_sentencias
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 159
    contenido                      shift and go to state 106
    impresion                      shift and go to state 107
    asignacion                     shift and go to state 108
    funcionstruct                  shift and go to state 109
    variables                      shift and go to state 110
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 137

    (69) repetircontenido -> contenido repetircontenido .

    ELSIF           reduce using rule 69 (repetircontenido -> contenido repetircontenido .)
    END             reduce using rule 69 (repetircontenido -> contenido repetircontenido .)


state 138

    (60) funcionsconjunto -> conjunto PUNTO ADD LPAREN . valor RPAREN
    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN . arr RPAREN
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (56) arr -> . LCOR repetirvalor RCOR
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    LCOR            shift and go to state 162
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    valor                          shift and go to state 160
    arr                            shift and go to state 161
    booleanos                      shift and go to state 70

state 139

    (62) funcionsconjunto -> conjunto PUNTO MERGE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 163

state 140

    (63) funcionsconjunto -> conjunto PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 164


state 141

    (80) funcionsformacion -> formacion PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 165


state 142

    (81) funcionsformacion -> formacion PUNTO PUSH LPAREN . repetirvalor RPAREN
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    repetirvalor                   shift and go to state 166
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 143

    (82) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 167

state 144

    (84) funcionsformacion -> formacion PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 168


state 145

    (56) arr -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    SET             reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    LCOR            reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    ARRAY           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    LBRACE          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    ELSIF           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    END             reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 56 (arr -> LCOR repetirvalor RCOR .)


state 146

    (55) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 55 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 55 (repetirvalor -> valor COMMA repetirvalor .)


state 147

    (78) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (79) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 169
    RPAREN          shift and go to state 170


state 148

    (98) hash_add -> hash PUNTO STORE LPAREN . hash_element RPAREN
    (89) hash_element -> . clave FLECHA value
    (92) clave -> . variables
    (93) clave -> . STRING
    (94) clave -> . INT
    (95) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_element                   shift and go to state 171
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 149

    (99) hash_delete -> hash PUNTO LPAREN clave . RPAREN

    RPAREN          shift and go to state 172


state 150

    (100) hash_key -> hash PUNTO KEY LPAREN . value RPAREN
    (96) value -> . valor
    (97) value -> . struct
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (44) struct -> . conjunto
    (45) struct -> . formacion
    (46) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    hash                           shift and go to state 100
    value                          shift and go to state 173
    valor                          shift and go to state 153
    struct                         shift and go to state 154
    booleanos                      shift and go to state 70
    conjunto                       shift and go to state 98
    formacion                      shift and go to state 99

state 151

    (90) hash_more_elements -> COMMA hash_element .
    (91) hash_more_elements -> COMMA hash_element . hash_more_elements
    (90) hash_more_elements -> . COMMA hash_element
    (91) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 90 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 128

    hash_more_elements             shift and go to state 174

state 152

    (89) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 89 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 89 (hash_element -> clave FLECHA value .)
    RPAREN          reduce using rule 89 (hash_element -> clave FLECHA value .)


state 153

    (96) value -> valor .

    COMMA           reduce using rule 96 (value -> valor .)
    RBRACE          reduce using rule 96 (value -> valor .)
    RPAREN          reduce using rule 96 (value -> valor .)


state 154

    (97) value -> struct .

    COMMA           reduce using rule 97 (value -> struct .)
    RBRACE          reduce using rule 97 (value -> struct .)
    RPAREN          reduce using rule 97 (value -> struct .)


state 155

    (70) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 175


state 156

    (75) sentenciawhile -> WHILE condicion DO repetircontenido END .

    $end            reduce using rule 75 (sentenciawhile -> WHILE condicion DO repetircontenido END .)


state 157

    (74) condicion -> ARRAY PUNTO NEW LPAREN . arr RPAREN
    (56) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 162

    arr                            shift and go to state 176

state 158

    (104) sentenciaElsif -> IF condicion repetircontenido mas_sentencias END .

    $end            reduce using rule 104 (sentenciaElsif -> IF condicion repetircontenido mas_sentencias END .)


state 159

    (105) mas_sentencias -> ELSIF repetircontenido .
    (106) mas_sentencias -> ELSIF repetircontenido . mas_sentencias
    (105) mas_sentencias -> . ELSIF repetircontenido
    (106) mas_sentencias -> . ELSIF repetircontenido mas_sentencias

    END             reduce using rule 105 (mas_sentencias -> ELSIF repetircontenido .)
    ELSIF           shift and go to state 136

    mas_sentencias                 shift and go to state 177

state 160

    (60) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 178


state 161

    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 179


state 162

    (56) arr -> LCOR . repetirvalor RCOR
    (54) repetirvalor -> . valor
    (55) repetirvalor -> . valor COMMA repetirvalor
    (49) valor -> . INT
    (50) valor -> . ID
    (51) valor -> . STRING
    (52) valor -> . booleanos
    (53) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    repetirvalor                   shift and go to state 119
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 163

    (62) funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables . RPAREN

    RPAREN          shift and go to state 180


state 164

    (63) funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .

    $end            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    PUTS            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    ID              reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    CONSTANT        reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    GLOBAL          reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    SET             reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    LCOR            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    ARRAY           reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    LBRACE          reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    ELSIF           reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    END             reduce using rule 63 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)


state 165

    (80) funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .

    $end            reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    PUTS            reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    ID              reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    CONSTANT        reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    GLOBAL          reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    SET             reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    LCOR            reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    ARRAY           reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    LBRACE          reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    ELSIF           reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    END             reduce using rule 80 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)


state 166

    (81) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 181


state 167

    (82) funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables . RPAREN

    RPAREN          shift and go to state 182


state 168

    (84) funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .

    $end            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    PUTS            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    ID              reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    CONSTANT        reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    GLOBAL          reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    SET             reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    LCOR            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    ARRAY           reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    LBRACE          reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    ELSIF           reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    END             reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)


state 169

    (78) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 183


state 170

    (79) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    PUNTO           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    $end            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    PUTS            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ID              reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    CONSTANT        reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    GLOBAL          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    SET             reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    LCOR            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ARRAY           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    LBRACE          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ELSIF           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    END             reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 171

    (98) hash_add -> hash PUNTO STORE LPAREN hash_element . RPAREN

    RPAREN          shift and go to state 184


state 172

    (99) hash_delete -> hash PUNTO LPAREN clave RPAREN .

    $end            reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    PUTS            reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    ID              reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    CONSTANT        reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    GLOBAL          reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    SET             reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    LCOR            reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    ARRAY           reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    LBRACE          reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    ELSIF           reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    END             reduce using rule 99 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)


state 173

    (100) hash_key -> hash PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 185


state 174

    (91) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 91 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 175

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 186


state 176

    (74) condicion -> ARRAY PUNTO NEW LPAREN arr . RPAREN

    RPAREN          shift and go to state 187


state 177

    (106) mas_sentencias -> ELSIF repetircontenido mas_sentencias .

    END             reduce using rule 106 (mas_sentencias -> ELSIF repetircontenido mas_sentencias .)


state 178

    (60) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .

    $end            reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    PUTS            reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    ID              reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    CONSTANT        reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    GLOBAL          reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    SET             reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    LCOR            reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    ARRAY           reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    LBRACE          reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    ELSIF           reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    END             reduce using rule 60 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)


state 179

    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .

    $end            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    PUTS            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    ID              reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    SET             reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    LCOR            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    ARRAY           reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    LBRACE          reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    ELSIF           reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    END             reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)


state 180

    (62) funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .

    $end            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    PUTS            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    ID              reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    SET             reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    LCOR            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    ARRAY           reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    LBRACE          reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    ELSIF           reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    END             reduce using rule 62 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)


state 181

    (81) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .

    $end            reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    PUTS            reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ID              reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    CONSTANT        reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    GLOBAL          reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    SET             reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    LCOR            reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ARRAY           reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    LBRACE          reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ELSIF           reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    END             reduce using rule 81 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 182

    (82) funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .

    $end            reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    PUTS            reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    ID              reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    SET             reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    LCOR            reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    ARRAY           reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    LBRACE          reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    ELSIF           reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    END             reduce using rule 82 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)


state 183

    (78) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    PUNTO           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    $end            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    PUTS            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ID              reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    CONSTANT        reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    GLOBAL          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    SET             reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    LCOR            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ARRAY           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    LBRACE          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ELSIF           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    END             reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 184

    (98) hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .

    $end            reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    PUTS            reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    ID              reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    CONSTANT        reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    GLOBAL          reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    SET             reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    LCOR            reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    ARRAY           reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    LBRACE          reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    ELSIF           reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    END             reduce using rule 98 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)


state 185

    (100) hash_key -> hash PUNTO KEY LPAREN value RPAREN .

    $end            reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    PUTS            reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    ID              reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    CONSTANT        reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    GLOBAL          reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    SET             reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    LCOR            reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    ARRAY           reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    LBRACE          reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    ELSIF           reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    END             reduce using rule 100 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)


state 186

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN repetircontenido END

    INT             shift and go to state 188


state 187

    (74) condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .

    DO              reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    PUTS            reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    ID              reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    SET             reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    LCOR            reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    ARRAY           reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    LBRACE          reduce using rule 74 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)


state 188

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN repetircontenido END

    RPAREN          shift and go to state 189


state 189

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . repetircontenido END
    (68) repetircontenido -> . contenido
    (69) repetircontenido -> . contenido repetircontenido
    (65) contenido -> . impresion
    (66) contenido -> . asignacion
    (67) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (57) funcionstruct -> . funcionsconjunto
    (58) funcionstruct -> . funcionsformacion
    (59) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (60) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE
    (80) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (81) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (82) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (83) funcionsformacion -> . formacion PUNTO FIRST
    (84) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (101) funcionsHash -> . hash_add
    (102) funcionsHash -> . hash_delete
    (103) funcionsHash -> . hash_key
    (47) conjunto -> . SET arr
    (48) conjunto -> . SET LCOR RCOR
    (76) formacion -> . LCOR repetirvalor RCOR
    (77) formacion -> . LCOR RCOR
    (78) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (79) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (98) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (99) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (100) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (85) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    variables                      shift and go to state 110
    repetircontenido               shift and go to state 190
    contenido                      shift and go to state 106
    impresion                      shift and go to state 107
    asignacion                     shift and go to state 108
    funcionstruct                  shift and go to state 109
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 190

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido . END

    END             shift and go to state 191


state 191

    (70) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .

    $end            reduce using rule 70 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
