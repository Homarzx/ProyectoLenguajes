Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    CLEAR
    DEF
    DEFINED
    DELETE
    ELSE
    ENSURE
    FETCH
    MODULE
    NEXT
    NIL
    NOT
    NUMERAL
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> sentenciafor
Rule 7     cuerpo -> sentenciawhile
Rule 8     cuerpo -> sentenciaElsif
Rule 9     impresion -> PUTS factor
Rule 10    impresion -> PUTS comparacion
Rule 11    impresion -> PUTS comparacion_bool
Rule 12    impresion -> PUTS STRING
Rule 13    leer -> GETS PUNTO CHOMP
Rule 14    expression -> factor operadoresMat factor
Rule 15    comparacion -> factor operadoresComp factor
Rule 16    comparacion -> STRING operadoresEquals STRING
Rule 17    comparacion_bool -> booleanos operadoresBool booleanos
Rule 18    operadoresComp -> MAYORQUE
Rule 19    operadoresComp -> MENORQUE
Rule 20    operadoresComp -> operadoresEquals
Rule 21    operadoresMat -> PLUS
Rule 22    operadoresMat -> MINUS
Rule 23    operadoresMat -> TIMES
Rule 24    operadoresMat -> DIVIDE
Rule 25    operadoresMat -> MOD
Rule 26    factor -> INT
Rule 27    factor -> FLOAT
Rule 28    factor -> expression
Rule 29    booleanos -> TRUE
Rule 30    booleanos -> FALSE
Rule 31    operadoresBool -> AND
Rule 32    operadoresBool -> OR
Rule 33    operadoresBool -> operadoresEquals
Rule 34    operadoresEquals -> EQUALSX2
Rule 35    operadoresEquals -> NOTEQUALS
Rule 36    variables -> ID
Rule 37    variables -> CONSTANT
Rule 38    variables -> GLOBAL
Rule 39    asignacion -> variables EQUAL factor
Rule 40    asignacion -> variables EQUAL STRING
Rule 41    asignacion -> variables EQUAL booleanos
Rule 42    asignacion -> variables EQUAL comparacion_bool
Rule 43    asignacion -> variables EQUAL struct
Rule 44    asignacion -> variables EQUAL comparacion
Rule 45    struct -> conjunto
Rule 46    struct -> formacion
Rule 47    struct -> hash
Rule 48    conjunto -> SET arr
Rule 49    conjunto -> SET LCOR RCOR
Rule 50    valor -> INT
Rule 51    valor -> ID
Rule 52    valor -> STRING
Rule 53    valor -> booleanos
Rule 54    valor -> FLOAT
Rule 55    repetirvalor -> valor
Rule 56    repetirvalor -> valor COMMA repetirvalor
Rule 57    arr -> LCOR repetirvalor RCOR
Rule 58    funcionstruct -> funcionsconjunto
Rule 59    funcionstruct -> funcionsformacion
Rule 60    funcionstruct -> funcionsHash
Rule 61    funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN
Rule 62    funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN
Rule 63    funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN
Rule 64    funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN
Rule 65    funcionsconjunto -> conjunto PUNTO SIZE
Rule 66    contenido -> impresion
Rule 67    contenido -> asignacion
Rule 68    contenido -> funcionstruct
Rule 69    repetircontenido -> contenido
Rule 70    repetircontenido -> contenido repetircontenido
Rule 71    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
Rule 72    condicion -> comparacion
Rule 73    condicion -> comparacion_bool
Rule 74    condicion -> booleanos
Rule 75    condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN
Rule 76    sentenciawhile -> WHILE condicion DO repetircontenido END
Rule 77    formacion -> LCOR repetirvalor RCOR
Rule 78    formacion -> LCOR RCOR
Rule 79    formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 80    formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 81    funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN
Rule 82    funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 83    funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN
Rule 84    funcionsformacion -> formacion PUNTO FIRST
Rule 85    funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN
Rule 86    hash -> LBRACE hash_content RBRACE
Rule 87    hash_elements -> hash_element hash_more_elements
Rule 88    hash_content -> hash_element
Rule 89    hash_content -> hash_elements
Rule 90    hash_element -> clave FLECHA value
Rule 91    hash_more_elements -> COMMA hash_element
Rule 92    hash_more_elements -> COMMA hash_element hash_more_elements
Rule 93    clave -> variables
Rule 94    clave -> STRING
Rule 95    clave -> INT
Rule 96    clave -> FLOAT
Rule 97    value -> valor
Rule 98    value -> struct
Rule 99    hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN
Rule 100   hash_delete -> hash PUNTO LPAREN clave RPAREN
Rule 101   hash_key -> hash PUNTO KEY LPAREN value RPAREN
Rule 102   funcionsHash -> hash_add
Rule 103   funcionsHash -> hash_delete
Rule 104   funcionsHash -> hash_key
Rule 105   sentenciaElsif -> IF condicion NEWLINE repetircontenido mas_sentencias END
Rule 106   mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE
Rule 107   mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias
Rule 108   operacionNumeros -> INT PLUS INT

Terminals, with rules where they appear

ADD                  : 61 62
ALIAS                : 
AND                  : 31
ARRAY                : 75 79 80
BEGIN                : 
BREAK                : 
CASE                 : 
CHOMP                : 13
CLASS                : 
CLEAR                : 
COMMA                : 56 91 92
CONSTANT             : 37
DEF                  : 
DEFINED              : 
DELETE               : 
DIVIDE               : 24
DO                   : 76
ELSE                 : 
ELSIF                : 106 107
END                  : 71 76 105
ENSURE               : 
EQUAL                : 39 40 41 42 43 44
EQUALSX2             : 34
FALSE                : 30
FETCH                : 
FIRST                : 84 85
FLECHA               : 90
FLOAT                : 27 54 96
FOR                  : 71
GETS                 : 13
GLOBAL               : 38
ID                   : 36 51
IF                   : 105
IN                   : 71
INT                  : 26 50 71 71 79 95 108 108
KEY                  : 101
LBRACE               : 86
LCOR                 : 49 57 77 78
LENGTH               : 81
LPAREN               : 61 62 63 64 71 75 79 80 81 82 83 85 99 100 101
MAYORQUE             : 18
MENORQUE             : 19
MERGE                : 63
MINUS                : 22
MOD                  : 25
MODULE               : 
NEW                  : 75 79 80
NEWLINE              : 105 106 106 106 107 107 107
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUALS            : 35
NUMERAL              : 
OR                   : 32
PLUS                 : 21 108
PUNTO                : 13 61 62 63 64 65 71 71 75 79 80 81 82 83 84 85 99 100 101
PUSH                 : 82
PUTS                 : 9 10 11 12
RBRACE               : 86
RCOR                 : 49 57 77 78
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 61 62 63 64 71 75 79 80 81 82 83 85 99 100 101
SAMPLE               : 83
SELF                 : 
SET                  : 48 49
SIZE                 : 64 65
STORE                : 99
STRING               : 12 16 16 40 52 94
SUPER                : 
THEN                 : 
TIMES                : 23
TRUE                 : 29
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 76
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arr                  : 48 62 75
asignacion           : 3 67
booleanos            : 17 17 41 53 74
clave                : 90 100
comparacion          : 10 44 72
comparacion_bool     : 11 42 73
condicion            : 76 105 106 107
conjunto             : 45 61 62 63 64 65
contenido            : 69 70
cuerpo               : 0
expression           : 1 28
factor               : 9 14 14 15 15 39
formacion            : 46 81 82 83 84 85
funcionsHash         : 60
funcionsconjunto     : 58
funcionsformacion    : 59
funcionstruct        : 5 68
hash                 : 47 99 100 101
hash_add             : 102
hash_content         : 86
hash_delete          : 103
hash_element         : 87 88 91 92 99
hash_elements        : 89
hash_key             : 104
hash_more_elements   : 87 92
impresion            : 2 66
leer                 : 4
mas_sentencias       : 105 107
operacionNumeros     : 
operadoresBool       : 17
operadoresComp       : 15
operadoresEquals     : 16 20 33
operadoresMat        : 14
repetircontenido     : 70 71 76 105 106 107
repetirvalor         : 56 57 77 82
sentenciaElsif       : 8
sentenciafor         : 6
sentenciawhile       : 7
struct               : 43 98
valor                : 55 56 61 97
value                : 90 101
variables            : 39 40 41 42 43 44 63 71 83 93

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . sentenciafor
    (7) cuerpo -> . sentenciawhile
    (8) cuerpo -> . sentenciaElsif
    (14) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (13) leer -> . GETS PUNTO CHOMP
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (71) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (76) sentenciawhile -> . WHILE condicion DO repetircontenido END
    (105) sentenciaElsif -> . IF condicion NEWLINE repetircontenido mas_sentencias END
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    GETS            shift and go to state 13
    FOR             shift and go to state 17
    WHILE           shift and go to state 19
    IF              shift and go to state 20
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    sentenciafor                   shift and go to state 7
    sentenciawhile                 shift and go to state 8
    sentenciaElsif                 shift and go to state 9
    factor                         shift and go to state 10
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (28) factor -> expression .

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> sentenciafor .

    $end            reduce using rule 6 (cuerpo -> sentenciafor .)


state 8

    (7) cuerpo -> sentenciawhile .

    $end            reduce using rule 7 (cuerpo -> sentenciawhile .)


state 9

    (8) cuerpo -> sentenciaElsif .

    $end            reduce using rule 8 (cuerpo -> sentenciaElsif .)


state 10

    (14) expression -> factor . operadoresMat factor
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operadoresMat                  shift and go to state 35

state 11

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion -> . STRING operadoresEquals STRING
    (17) comparacion_bool -> . booleanos operadoresBool booleanos
    (14) expression -> . factor operadoresMat factor
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    STRING          shift and go to state 44
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    factor                         shift and go to state 41
    comparacion                    shift and go to state 42
    comparacion_bool               shift and go to state 43
    expression                     shift and go to state 45
    booleanos                      shift and go to state 46

state 12

    (39) asignacion -> variables . EQUAL factor
    (40) asignacion -> variables . EQUAL STRING
    (41) asignacion -> variables . EQUAL booleanos
    (42) asignacion -> variables . EQUAL comparacion_bool
    (43) asignacion -> variables . EQUAL struct
    (44) asignacion -> variables . EQUAL comparacion

    EQUAL           shift and go to state 49


state 13

    (13) leer -> GETS . PUNTO CHOMP

    PUNTO           shift and go to state 50


state 14

    (58) funcionstruct -> funcionsconjunto .

    $end            reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    PUTS            reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    ID              reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    CONSTANT        reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    GLOBAL          reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    SET             reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    LCOR            reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    ARRAY           reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    LBRACE          reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    END             reduce using rule 58 (funcionstruct -> funcionsconjunto .)
    NEWLINE         reduce using rule 58 (funcionstruct -> funcionsconjunto .)


state 15

    (59) funcionstruct -> funcionsformacion .

    $end            reduce using rule 59 (funcionstruct -> funcionsformacion .)
    PUTS            reduce using rule 59 (funcionstruct -> funcionsformacion .)
    ID              reduce using rule 59 (funcionstruct -> funcionsformacion .)
    CONSTANT        reduce using rule 59 (funcionstruct -> funcionsformacion .)
    GLOBAL          reduce using rule 59 (funcionstruct -> funcionsformacion .)
    SET             reduce using rule 59 (funcionstruct -> funcionsformacion .)
    LCOR            reduce using rule 59 (funcionstruct -> funcionsformacion .)
    ARRAY           reduce using rule 59 (funcionstruct -> funcionsformacion .)
    LBRACE          reduce using rule 59 (funcionstruct -> funcionsformacion .)
    END             reduce using rule 59 (funcionstruct -> funcionsformacion .)
    NEWLINE         reduce using rule 59 (funcionstruct -> funcionsformacion .)


state 16

    (60) funcionstruct -> funcionsHash .

    $end            reduce using rule 60 (funcionstruct -> funcionsHash .)
    PUTS            reduce using rule 60 (funcionstruct -> funcionsHash .)
    ID              reduce using rule 60 (funcionstruct -> funcionsHash .)
    CONSTANT        reduce using rule 60 (funcionstruct -> funcionsHash .)
    GLOBAL          reduce using rule 60 (funcionstruct -> funcionsHash .)
    SET             reduce using rule 60 (funcionstruct -> funcionsHash .)
    LCOR            reduce using rule 60 (funcionstruct -> funcionsHash .)
    ARRAY           reduce using rule 60 (funcionstruct -> funcionsHash .)
    LBRACE          reduce using rule 60 (funcionstruct -> funcionsHash .)
    END             reduce using rule 60 (funcionstruct -> funcionsHash .)
    NEWLINE         reduce using rule 60 (funcionstruct -> funcionsHash .)


state 17

    (71) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 51

state 18

    (26) factor -> INT .

    PLUS            reduce using rule 26 (factor -> INT .)
    MINUS           reduce using rule 26 (factor -> INT .)
    TIMES           reduce using rule 26 (factor -> INT .)
    DIVIDE          reduce using rule 26 (factor -> INT .)
    MOD             reduce using rule 26 (factor -> INT .)
    MAYORQUE        reduce using rule 26 (factor -> INT .)
    MENORQUE        reduce using rule 26 (factor -> INT .)
    EQUALSX2        reduce using rule 26 (factor -> INT .)
    NOTEQUALS       reduce using rule 26 (factor -> INT .)
    $end            reduce using rule 26 (factor -> INT .)
    PUTS            reduce using rule 26 (factor -> INT .)
    ID              reduce using rule 26 (factor -> INT .)
    CONSTANT        reduce using rule 26 (factor -> INT .)
    GLOBAL          reduce using rule 26 (factor -> INT .)
    SET             reduce using rule 26 (factor -> INT .)
    LCOR            reduce using rule 26 (factor -> INT .)
    ARRAY           reduce using rule 26 (factor -> INT .)
    LBRACE          reduce using rule 26 (factor -> INT .)
    END             reduce using rule 26 (factor -> INT .)
    NEWLINE         reduce using rule 26 (factor -> INT .)
    DO              reduce using rule 26 (factor -> INT .)


state 19

    (76) sentenciawhile -> WHILE . condicion DO repetircontenido END
    (72) condicion -> . comparacion
    (73) condicion -> . comparacion_bool
    (74) condicion -> . booleanos
    (75) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion -> . STRING operadoresEquals STRING
    (17) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 56
    STRING          shift and go to state 58
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    INT             shift and go to state 18
    FLOAT           shift and go to state 21

    condicion                      shift and go to state 52
    comparacion                    shift and go to state 53
    comparacion_bool               shift and go to state 54
    booleanos                      shift and go to state 55
    factor                         shift and go to state 57
    expression                     shift and go to state 45

state 20

    (105) sentenciaElsif -> IF . condicion NEWLINE repetircontenido mas_sentencias END
    (72) condicion -> . comparacion
    (73) condicion -> . comparacion_bool
    (74) condicion -> . booleanos
    (75) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion -> . STRING operadoresEquals STRING
    (17) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 56
    STRING          shift and go to state 58
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    INT             shift and go to state 18
    FLOAT           shift and go to state 21

    condicion                      shift and go to state 59
    comparacion                    shift and go to state 53
    comparacion_bool               shift and go to state 54
    booleanos                      shift and go to state 55
    factor                         shift and go to state 57
    expression                     shift and go to state 45

state 21

    (27) factor -> FLOAT .

    PLUS            reduce using rule 27 (factor -> FLOAT .)
    MINUS           reduce using rule 27 (factor -> FLOAT .)
    TIMES           reduce using rule 27 (factor -> FLOAT .)
    DIVIDE          reduce using rule 27 (factor -> FLOAT .)
    MOD             reduce using rule 27 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 27 (factor -> FLOAT .)
    MENORQUE        reduce using rule 27 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 27 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 27 (factor -> FLOAT .)
    $end            reduce using rule 27 (factor -> FLOAT .)
    PUTS            reduce using rule 27 (factor -> FLOAT .)
    ID              reduce using rule 27 (factor -> FLOAT .)
    CONSTANT        reduce using rule 27 (factor -> FLOAT .)
    GLOBAL          reduce using rule 27 (factor -> FLOAT .)
    SET             reduce using rule 27 (factor -> FLOAT .)
    LCOR            reduce using rule 27 (factor -> FLOAT .)
    ARRAY           reduce using rule 27 (factor -> FLOAT .)
    LBRACE          reduce using rule 27 (factor -> FLOAT .)
    END             reduce using rule 27 (factor -> FLOAT .)
    NEWLINE         reduce using rule 27 (factor -> FLOAT .)
    DO              reduce using rule 27 (factor -> FLOAT .)


state 22

    (36) variables -> ID .

    EQUAL           reduce using rule 36 (variables -> ID .)
    IN              reduce using rule 36 (variables -> ID .)
    FLECHA          reduce using rule 36 (variables -> ID .)
    RPAREN          reduce using rule 36 (variables -> ID .)


state 23

    (37) variables -> CONSTANT .

    EQUAL           reduce using rule 37 (variables -> CONSTANT .)
    IN              reduce using rule 37 (variables -> CONSTANT .)
    FLECHA          reduce using rule 37 (variables -> CONSTANT .)
    RPAREN          reduce using rule 37 (variables -> CONSTANT .)


state 24

    (38) variables -> GLOBAL .

    EQUAL           reduce using rule 38 (variables -> GLOBAL .)
    IN              reduce using rule 38 (variables -> GLOBAL .)
    FLECHA          reduce using rule 38 (variables -> GLOBAL .)
    RPAREN          reduce using rule 38 (variables -> GLOBAL .)


state 25

    (61) funcionsconjunto -> conjunto . PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> conjunto . PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> conjunto . PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> conjunto . PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> conjunto . PUNTO SIZE

    PUNTO           shift and go to state 60


state 26

    (81) funcionsformacion -> formacion . PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> formacion . PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> formacion . PUNTO FIRST
    (85) funcionsformacion -> formacion . PUNTO FIRST LPAREN RPAREN

    PUNTO           shift and go to state 61


state 27

    (102) funcionsHash -> hash_add .

    $end            reduce using rule 102 (funcionsHash -> hash_add .)
    PUTS            reduce using rule 102 (funcionsHash -> hash_add .)
    ID              reduce using rule 102 (funcionsHash -> hash_add .)
    CONSTANT        reduce using rule 102 (funcionsHash -> hash_add .)
    GLOBAL          reduce using rule 102 (funcionsHash -> hash_add .)
    SET             reduce using rule 102 (funcionsHash -> hash_add .)
    LCOR            reduce using rule 102 (funcionsHash -> hash_add .)
    ARRAY           reduce using rule 102 (funcionsHash -> hash_add .)
    LBRACE          reduce using rule 102 (funcionsHash -> hash_add .)
    END             reduce using rule 102 (funcionsHash -> hash_add .)
    NEWLINE         reduce using rule 102 (funcionsHash -> hash_add .)


state 28

    (103) funcionsHash -> hash_delete .

    $end            reduce using rule 103 (funcionsHash -> hash_delete .)
    PUTS            reduce using rule 103 (funcionsHash -> hash_delete .)
    ID              reduce using rule 103 (funcionsHash -> hash_delete .)
    CONSTANT        reduce using rule 103 (funcionsHash -> hash_delete .)
    GLOBAL          reduce using rule 103 (funcionsHash -> hash_delete .)
    SET             reduce using rule 103 (funcionsHash -> hash_delete .)
    LCOR            reduce using rule 103 (funcionsHash -> hash_delete .)
    ARRAY           reduce using rule 103 (funcionsHash -> hash_delete .)
    LBRACE          reduce using rule 103 (funcionsHash -> hash_delete .)
    END             reduce using rule 103 (funcionsHash -> hash_delete .)
    NEWLINE         reduce using rule 103 (funcionsHash -> hash_delete .)


state 29

    (104) funcionsHash -> hash_key .

    $end            reduce using rule 104 (funcionsHash -> hash_key .)
    PUTS            reduce using rule 104 (funcionsHash -> hash_key .)
    ID              reduce using rule 104 (funcionsHash -> hash_key .)
    CONSTANT        reduce using rule 104 (funcionsHash -> hash_key .)
    GLOBAL          reduce using rule 104 (funcionsHash -> hash_key .)
    SET             reduce using rule 104 (funcionsHash -> hash_key .)
    LCOR            reduce using rule 104 (funcionsHash -> hash_key .)
    ARRAY           reduce using rule 104 (funcionsHash -> hash_key .)
    LBRACE          reduce using rule 104 (funcionsHash -> hash_key .)
    END             reduce using rule 104 (funcionsHash -> hash_key .)
    NEWLINE         reduce using rule 104 (funcionsHash -> hash_key .)


state 30

    (48) conjunto -> SET . arr
    (49) conjunto -> SET . LCOR RCOR
    (57) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 63

    arr                            shift and go to state 62

state 31

    (77) formacion -> LCOR . repetirvalor RCOR
    (78) formacion -> LCOR . RCOR
    (55) repetirvalor -> . valor
    (56) repetirvalor -> . valor COMMA repetirvalor
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 65
    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    repetirvalor                   shift and go to state 64
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 32

    (79) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 72


state 33

    (99) hash_add -> hash . PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> hash . PUNTO LPAREN clave RPAREN
    (101) hash_key -> hash . PUNTO KEY LPAREN value RPAREN

    PUNTO           shift and go to state 73


state 34

    (86) hash -> LBRACE . hash_content RBRACE
    (88) hash_content -> . hash_element
    (89) hash_content -> . hash_elements
    (90) hash_element -> . clave FLECHA value
    (87) hash_elements -> . hash_element hash_more_elements
    (93) clave -> . variables
    (94) clave -> . STRING
    (95) clave -> . INT
    (96) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_content                   shift and go to state 74
    hash_element                   shift and go to state 75
    hash_elements                  shift and go to state 76
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 35

    (14) expression -> factor operadoresMat . factor
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21

    factor                         shift and go to state 82
    expression                     shift and go to state 45

state 36

    (21) operadoresMat -> PLUS .

    INT             reduce using rule 21 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 21 (operadoresMat -> PLUS .)


state 37

    (22) operadoresMat -> MINUS .

    INT             reduce using rule 22 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 22 (operadoresMat -> MINUS .)


state 38

    (23) operadoresMat -> TIMES .

    INT             reduce using rule 23 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 23 (operadoresMat -> TIMES .)


state 39

    (24) operadoresMat -> DIVIDE .

    INT             reduce using rule 24 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 24 (operadoresMat -> DIVIDE .)


state 40

    (25) operadoresMat -> MOD .

    INT             reduce using rule 25 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 25 (operadoresMat -> MOD .)


state 41

    (9) impresion -> PUTS factor .
    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (18) operadoresComp -> . MAYORQUE
    (19) operadoresComp -> . MENORQUE
    (20) operadoresComp -> . operadoresEquals
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 9 (impresion -> PUTS factor .)
    PUTS            reduce using rule 9 (impresion -> PUTS factor .)
    ID              reduce using rule 9 (impresion -> PUTS factor .)
    CONSTANT        reduce using rule 9 (impresion -> PUTS factor .)
    GLOBAL          reduce using rule 9 (impresion -> PUTS factor .)
    SET             reduce using rule 9 (impresion -> PUTS factor .)
    LCOR            reduce using rule 9 (impresion -> PUTS factor .)
    ARRAY           reduce using rule 9 (impresion -> PUTS factor .)
    LBRACE          reduce using rule 9 (impresion -> PUTS factor .)
    END             reduce using rule 9 (impresion -> PUTS factor .)
    NEWLINE         reduce using rule 9 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 84
    MENORQUE        shift and go to state 85
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresComp                 shift and go to state 83
    operadoresMat                  shift and go to state 35
    operadoresEquals               shift and go to state 86

state 42

    (10) impresion -> PUTS comparacion .

    $end            reduce using rule 10 (impresion -> PUTS comparacion .)
    PUTS            reduce using rule 10 (impresion -> PUTS comparacion .)
    ID              reduce using rule 10 (impresion -> PUTS comparacion .)
    CONSTANT        reduce using rule 10 (impresion -> PUTS comparacion .)
    GLOBAL          reduce using rule 10 (impresion -> PUTS comparacion .)
    SET             reduce using rule 10 (impresion -> PUTS comparacion .)
    LCOR            reduce using rule 10 (impresion -> PUTS comparacion .)
    ARRAY           reduce using rule 10 (impresion -> PUTS comparacion .)
    LBRACE          reduce using rule 10 (impresion -> PUTS comparacion .)
    END             reduce using rule 10 (impresion -> PUTS comparacion .)
    NEWLINE         reduce using rule 10 (impresion -> PUTS comparacion .)


state 43

    (11) impresion -> PUTS comparacion_bool .

    $end            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    PUTS            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ID              reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    CONSTANT        reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    GLOBAL          reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    SET             reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    LCOR            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    ARRAY           reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    LBRACE          reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    END             reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    NEWLINE         reduce using rule 11 (impresion -> PUTS comparacion_bool .)


state 44

    (12) impresion -> PUTS STRING .
    (16) comparacion -> STRING . operadoresEquals STRING
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 12 (impresion -> PUTS STRING .)
    PUTS            reduce using rule 12 (impresion -> PUTS STRING .)
    ID              reduce using rule 12 (impresion -> PUTS STRING .)
    CONSTANT        reduce using rule 12 (impresion -> PUTS STRING .)
    GLOBAL          reduce using rule 12 (impresion -> PUTS STRING .)
    SET             reduce using rule 12 (impresion -> PUTS STRING .)
    LCOR            reduce using rule 12 (impresion -> PUTS STRING .)
    ARRAY           reduce using rule 12 (impresion -> PUTS STRING .)
    LBRACE          reduce using rule 12 (impresion -> PUTS STRING .)
    END             reduce using rule 12 (impresion -> PUTS STRING .)
    NEWLINE         reduce using rule 12 (impresion -> PUTS STRING .)
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresEquals               shift and go to state 89

state 45

    (28) factor -> expression .

    MAYORQUE        reduce using rule 28 (factor -> expression .)
    MENORQUE        reduce using rule 28 (factor -> expression .)
    PLUS            reduce using rule 28 (factor -> expression .)
    MINUS           reduce using rule 28 (factor -> expression .)
    TIMES           reduce using rule 28 (factor -> expression .)
    DIVIDE          reduce using rule 28 (factor -> expression .)
    MOD             reduce using rule 28 (factor -> expression .)
    EQUALSX2        reduce using rule 28 (factor -> expression .)
    NOTEQUALS       reduce using rule 28 (factor -> expression .)
    $end            reduce using rule 28 (factor -> expression .)
    PUTS            reduce using rule 28 (factor -> expression .)
    ID              reduce using rule 28 (factor -> expression .)
    CONSTANT        reduce using rule 28 (factor -> expression .)
    GLOBAL          reduce using rule 28 (factor -> expression .)
    SET             reduce using rule 28 (factor -> expression .)
    LCOR            reduce using rule 28 (factor -> expression .)
    ARRAY           reduce using rule 28 (factor -> expression .)
    LBRACE          reduce using rule 28 (factor -> expression .)
    END             reduce using rule 28 (factor -> expression .)
    NEWLINE         reduce using rule 28 (factor -> expression .)
    DO              reduce using rule 28 (factor -> expression .)


state 46

    (17) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    AND             shift and go to state 91
    OR              shift and go to state 92
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 90
    operadoresEquals               shift and go to state 93

state 47

    (29) booleanos -> TRUE .

    AND             reduce using rule 29 (booleanos -> TRUE .)
    OR              reduce using rule 29 (booleanos -> TRUE .)
    EQUALSX2        reduce using rule 29 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 29 (booleanos -> TRUE .)
    DO              reduce using rule 29 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 29 (booleanos -> TRUE .)
    COMMA           reduce using rule 29 (booleanos -> TRUE .)
    RCOR            reduce using rule 29 (booleanos -> TRUE .)
    $end            reduce using rule 29 (booleanos -> TRUE .)
    PUTS            reduce using rule 29 (booleanos -> TRUE .)
    ID              reduce using rule 29 (booleanos -> TRUE .)
    CONSTANT        reduce using rule 29 (booleanos -> TRUE .)
    GLOBAL          reduce using rule 29 (booleanos -> TRUE .)
    SET             reduce using rule 29 (booleanos -> TRUE .)
    LCOR            reduce using rule 29 (booleanos -> TRUE .)
    ARRAY           reduce using rule 29 (booleanos -> TRUE .)
    LBRACE          reduce using rule 29 (booleanos -> TRUE .)
    END             reduce using rule 29 (booleanos -> TRUE .)
    RPAREN          reduce using rule 29 (booleanos -> TRUE .)
    RBRACE          reduce using rule 29 (booleanos -> TRUE .)


state 48

    (30) booleanos -> FALSE .

    AND             reduce using rule 30 (booleanos -> FALSE .)
    OR              reduce using rule 30 (booleanos -> FALSE .)
    EQUALSX2        reduce using rule 30 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 30 (booleanos -> FALSE .)
    DO              reduce using rule 30 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 30 (booleanos -> FALSE .)
    COMMA           reduce using rule 30 (booleanos -> FALSE .)
    RCOR            reduce using rule 30 (booleanos -> FALSE .)
    $end            reduce using rule 30 (booleanos -> FALSE .)
    PUTS            reduce using rule 30 (booleanos -> FALSE .)
    ID              reduce using rule 30 (booleanos -> FALSE .)
    CONSTANT        reduce using rule 30 (booleanos -> FALSE .)
    GLOBAL          reduce using rule 30 (booleanos -> FALSE .)
    SET             reduce using rule 30 (booleanos -> FALSE .)
    LCOR            reduce using rule 30 (booleanos -> FALSE .)
    ARRAY           reduce using rule 30 (booleanos -> FALSE .)
    LBRACE          reduce using rule 30 (booleanos -> FALSE .)
    END             reduce using rule 30 (booleanos -> FALSE .)
    RPAREN          reduce using rule 30 (booleanos -> FALSE .)
    RBRACE          reduce using rule 30 (booleanos -> FALSE .)


state 49

    (39) asignacion -> variables EQUAL . factor
    (40) asignacion -> variables EQUAL . STRING
    (41) asignacion -> variables EQUAL . booleanos
    (42) asignacion -> variables EQUAL . comparacion_bool
    (43) asignacion -> variables EQUAL . struct
    (44) asignacion -> variables EQUAL . comparacion
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (17) comparacion_bool -> . booleanos operadoresBool booleanos
    (45) struct -> . conjunto
    (46) struct -> . formacion
    (47) struct -> . hash
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion -> . STRING operadoresEquals STRING
    (14) expression -> . factor operadoresMat factor
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    STRING          shift and go to state 95
    INT             shift and go to state 18
    FLOAT           shift and go to state 21
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    factor                         shift and go to state 94
    booleanos                      shift and go to state 96
    comparacion_bool               shift and go to state 97
    struct                         shift and go to state 98
    comparacion                    shift and go to state 99
    expression                     shift and go to state 45
    conjunto                       shift and go to state 100
    formacion                      shift and go to state 101
    hash                           shift and go to state 102

state 50

    (13) leer -> GETS PUNTO . CHOMP

    CHOMP           shift and go to state 103


state 51

    (71) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    IN              shift and go to state 104


state 52

    (76) sentenciawhile -> WHILE condicion . DO repetircontenido END

    DO              shift and go to state 105


state 53

    (72) condicion -> comparacion .

    DO              reduce using rule 72 (condicion -> comparacion .)
    NEWLINE         reduce using rule 72 (condicion -> comparacion .)


state 54

    (73) condicion -> comparacion_bool .

    DO              reduce using rule 73 (condicion -> comparacion_bool .)
    NEWLINE         reduce using rule 73 (condicion -> comparacion_bool .)


state 55

    (74) condicion -> booleanos .
    (17) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    DO              reduce using rule 74 (condicion -> booleanos .)
    NEWLINE         reduce using rule 74 (condicion -> booleanos .)
    AND             shift and go to state 91
    OR              shift and go to state 92
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 90
    operadoresEquals               shift and go to state 93

state 56

    (75) condicion -> ARRAY . PUNTO NEW LPAREN arr RPAREN

    PUNTO           shift and go to state 106


state 57

    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (18) operadoresComp -> . MAYORQUE
    (19) operadoresComp -> . MENORQUE
    (20) operadoresComp -> . operadoresEquals
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    MAYORQUE        shift and go to state 84
    MENORQUE        shift and go to state 85
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresComp                 shift and go to state 83
    operadoresMat                  shift and go to state 35
    operadoresEquals               shift and go to state 86

state 58

    (16) comparacion -> STRING . operadoresEquals STRING
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresEquals               shift and go to state 89

state 59

    (105) sentenciaElsif -> IF condicion . NEWLINE repetircontenido mas_sentencias END

    NEWLINE         shift and go to state 107


state 60

    (61) funcionsconjunto -> conjunto PUNTO . ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> conjunto PUNTO . ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> conjunto PUNTO . MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> conjunto PUNTO . SIZE LPAREN RPAREN
    (65) funcionsconjunto -> conjunto PUNTO . SIZE

    ADD             shift and go to state 108
    MERGE           shift and go to state 109
    SIZE            shift and go to state 110


state 61

    (81) funcionsformacion -> formacion PUNTO . LENGTH LPAREN RPAREN
    (82) funcionsformacion -> formacion PUNTO . PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> formacion PUNTO . FIRST
    (85) funcionsformacion -> formacion PUNTO . FIRST LPAREN RPAREN

    LENGTH          shift and go to state 111
    PUSH            shift and go to state 112
    SAMPLE          shift and go to state 113
    FIRST           shift and go to state 114


state 62

    (48) conjunto -> SET arr .

    PUNTO           reduce using rule 48 (conjunto -> SET arr .)
    $end            reduce using rule 48 (conjunto -> SET arr .)
    PUTS            reduce using rule 48 (conjunto -> SET arr .)
    ID              reduce using rule 48 (conjunto -> SET arr .)
    CONSTANT        reduce using rule 48 (conjunto -> SET arr .)
    GLOBAL          reduce using rule 48 (conjunto -> SET arr .)
    SET             reduce using rule 48 (conjunto -> SET arr .)
    LCOR            reduce using rule 48 (conjunto -> SET arr .)
    ARRAY           reduce using rule 48 (conjunto -> SET arr .)
    LBRACE          reduce using rule 48 (conjunto -> SET arr .)
    END             reduce using rule 48 (conjunto -> SET arr .)
    NEWLINE         reduce using rule 48 (conjunto -> SET arr .)
    COMMA           reduce using rule 48 (conjunto -> SET arr .)
    RBRACE          reduce using rule 48 (conjunto -> SET arr .)
    RPAREN          reduce using rule 48 (conjunto -> SET arr .)


state 63

    (49) conjunto -> SET LCOR . RCOR
    (57) arr -> LCOR . repetirvalor RCOR
    (55) repetirvalor -> . valor
    (56) repetirvalor -> . valor COMMA repetirvalor
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    RCOR            shift and go to state 115
    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    repetirvalor                   shift and go to state 116
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 64

    (77) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 117


state 65

    (78) formacion -> LCOR RCOR .

    PUNTO           reduce using rule 78 (formacion -> LCOR RCOR .)
    $end            reduce using rule 78 (formacion -> LCOR RCOR .)
    PUTS            reduce using rule 78 (formacion -> LCOR RCOR .)
    ID              reduce using rule 78 (formacion -> LCOR RCOR .)
    CONSTANT        reduce using rule 78 (formacion -> LCOR RCOR .)
    GLOBAL          reduce using rule 78 (formacion -> LCOR RCOR .)
    SET             reduce using rule 78 (formacion -> LCOR RCOR .)
    LCOR            reduce using rule 78 (formacion -> LCOR RCOR .)
    ARRAY           reduce using rule 78 (formacion -> LCOR RCOR .)
    LBRACE          reduce using rule 78 (formacion -> LCOR RCOR .)
    END             reduce using rule 78 (formacion -> LCOR RCOR .)
    NEWLINE         reduce using rule 78 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 78 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 78 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 78 (formacion -> LCOR RCOR .)


state 66

    (55) repetirvalor -> valor .
    (56) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 55 (repetirvalor -> valor .)
    RPAREN          reduce using rule 55 (repetirvalor -> valor .)
    COMMA           shift and go to state 118


state 67

    (50) valor -> INT .

    COMMA           reduce using rule 50 (valor -> INT .)
    RCOR            reduce using rule 50 (valor -> INT .)
    RPAREN          reduce using rule 50 (valor -> INT .)
    RBRACE          reduce using rule 50 (valor -> INT .)


state 68

    (51) valor -> ID .

    COMMA           reduce using rule 51 (valor -> ID .)
    RCOR            reduce using rule 51 (valor -> ID .)
    RPAREN          reduce using rule 51 (valor -> ID .)
    RBRACE          reduce using rule 51 (valor -> ID .)


state 69

    (52) valor -> STRING .

    COMMA           reduce using rule 52 (valor -> STRING .)
    RCOR            reduce using rule 52 (valor -> STRING .)
    RPAREN          reduce using rule 52 (valor -> STRING .)
    RBRACE          reduce using rule 52 (valor -> STRING .)


state 70

    (53) valor -> booleanos .

    COMMA           reduce using rule 53 (valor -> booleanos .)
    RCOR            reduce using rule 53 (valor -> booleanos .)
    RPAREN          reduce using rule 53 (valor -> booleanos .)
    RBRACE          reduce using rule 53 (valor -> booleanos .)


state 71

    (54) valor -> FLOAT .

    COMMA           reduce using rule 54 (valor -> FLOAT .)
    RCOR            reduce using rule 54 (valor -> FLOAT .)
    RPAREN          reduce using rule 54 (valor -> FLOAT .)
    RBRACE          reduce using rule 54 (valor -> FLOAT .)


state 72

    (79) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (80) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 119


state 73

    (99) hash_add -> hash PUNTO . STORE LPAREN hash_element RPAREN
    (100) hash_delete -> hash PUNTO . LPAREN clave RPAREN
    (101) hash_key -> hash PUNTO . KEY LPAREN value RPAREN

    STORE           shift and go to state 120
    LPAREN          shift and go to state 121
    KEY             shift and go to state 122


state 74

    (86) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 123


state 75

    (88) hash_content -> hash_element .
    (87) hash_elements -> hash_element . hash_more_elements
    (91) hash_more_elements -> . COMMA hash_element
    (92) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 88 (hash_content -> hash_element .)
    COMMA           shift and go to state 125

    hash_more_elements             shift and go to state 124

state 76

    (89) hash_content -> hash_elements .

    RBRACE          reduce using rule 89 (hash_content -> hash_elements .)


state 77

    (90) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 126


state 78

    (93) clave -> variables .

    FLECHA          reduce using rule 93 (clave -> variables .)
    RPAREN          reduce using rule 93 (clave -> variables .)


state 79

    (94) clave -> STRING .

    FLECHA          reduce using rule 94 (clave -> STRING .)
    RPAREN          reduce using rule 94 (clave -> STRING .)


state 80

    (95) clave -> INT .

    FLECHA          reduce using rule 95 (clave -> INT .)
    RPAREN          reduce using rule 95 (clave -> INT .)


state 81

    (96) clave -> FLOAT .

    FLECHA          reduce using rule 96 (clave -> FLOAT .)
    RPAREN          reduce using rule 96 (clave -> FLOAT .)


state 82

    (14) expression -> factor operadoresMat factor .
    (14) expression -> factor . operadoresMat factor
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    $end            reduce using rule 14 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 14 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 14 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 14 (expression -> factor operadoresMat factor .)
    PUTS            reduce using rule 14 (expression -> factor operadoresMat factor .)
    ID              reduce using rule 14 (expression -> factor operadoresMat factor .)
    CONSTANT        reduce using rule 14 (expression -> factor operadoresMat factor .)
    GLOBAL          reduce using rule 14 (expression -> factor operadoresMat factor .)
    SET             reduce using rule 14 (expression -> factor operadoresMat factor .)
    LCOR            reduce using rule 14 (expression -> factor operadoresMat factor .)
    ARRAY           reduce using rule 14 (expression -> factor operadoresMat factor .)
    LBRACE          reduce using rule 14 (expression -> factor operadoresMat factor .)
    END             reduce using rule 14 (expression -> factor operadoresMat factor .)
    NEWLINE         reduce using rule 14 (expression -> factor operadoresMat factor .)
    DO              reduce using rule 14 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

  ! PLUS            [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 14 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 35

state 83

    (15) comparacion -> factor operadoresComp . factor
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (14) expression -> . factor operadoresMat factor

    INT             shift and go to state 18
    FLOAT           shift and go to state 21

    factor                         shift and go to state 127
    expression                     shift and go to state 45

state 84

    (18) operadoresComp -> MAYORQUE .

    INT             reduce using rule 18 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 18 (operadoresComp -> MAYORQUE .)


state 85

    (19) operadoresComp -> MENORQUE .

    INT             reduce using rule 19 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 19 (operadoresComp -> MENORQUE .)


state 86

    (20) operadoresComp -> operadoresEquals .

    INT             reduce using rule 20 (operadoresComp -> operadoresEquals .)
    FLOAT           reduce using rule 20 (operadoresComp -> operadoresEquals .)


state 87

    (34) operadoresEquals -> EQUALSX2 .

    INT             reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    STRING          reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    TRUE            reduce using rule 34 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 34 (operadoresEquals -> EQUALSX2 .)


state 88

    (35) operadoresEquals -> NOTEQUALS .

    INT             reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    STRING          reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    TRUE            reduce using rule 35 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 35 (operadoresEquals -> NOTEQUALS .)


state 89

    (16) comparacion -> STRING operadoresEquals . STRING

    STRING          shift and go to state 128


state 90

    (17) comparacion_bool -> booleanos operadoresBool . booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    booleanos                      shift and go to state 129

state 91

    (31) operadoresBool -> AND .

    TRUE            reduce using rule 31 (operadoresBool -> AND .)
    FALSE           reduce using rule 31 (operadoresBool -> AND .)


state 92

    (32) operadoresBool -> OR .

    TRUE            reduce using rule 32 (operadoresBool -> OR .)
    FALSE           reduce using rule 32 (operadoresBool -> OR .)


state 93

    (33) operadoresBool -> operadoresEquals .

    TRUE            reduce using rule 33 (operadoresBool -> operadoresEquals .)
    FALSE           reduce using rule 33 (operadoresBool -> operadoresEquals .)


state 94

    (39) asignacion -> variables EQUAL factor .
    (15) comparacion -> factor . operadoresComp factor
    (14) expression -> factor . operadoresMat factor
    (18) operadoresComp -> . MAYORQUE
    (19) operadoresComp -> . MENORQUE
    (20) operadoresComp -> . operadoresEquals
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    PUTS            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ID              reduce using rule 39 (asignacion -> variables EQUAL factor .)
    CONSTANT        reduce using rule 39 (asignacion -> variables EQUAL factor .)
    GLOBAL          reduce using rule 39 (asignacion -> variables EQUAL factor .)
    SET             reduce using rule 39 (asignacion -> variables EQUAL factor .)
    LCOR            reduce using rule 39 (asignacion -> variables EQUAL factor .)
    ARRAY           reduce using rule 39 (asignacion -> variables EQUAL factor .)
    LBRACE          reduce using rule 39 (asignacion -> variables EQUAL factor .)
    END             reduce using rule 39 (asignacion -> variables EQUAL factor .)
    NEWLINE         reduce using rule 39 (asignacion -> variables EQUAL factor .)
    MAYORQUE        shift and go to state 84
    MENORQUE        shift and go to state 85
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresComp                 shift and go to state 83
    operadoresMat                  shift and go to state 35
    operadoresEquals               shift and go to state 86

state 95

    (40) asignacion -> variables EQUAL STRING .
    (16) comparacion -> STRING . operadoresEquals STRING
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    PUTS            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ID              reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    CONSTANT        reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    GLOBAL          reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    SET             reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    LCOR            reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    ARRAY           reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    LBRACE          reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    END             reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    NEWLINE         reduce using rule 40 (asignacion -> variables EQUAL STRING .)
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresEquals               shift and go to state 89

state 96

    (41) asignacion -> variables EQUAL booleanos .
    (17) comparacion_bool -> booleanos . operadoresBool booleanos
    (31) operadoresBool -> . AND
    (32) operadoresBool -> . OR
    (33) operadoresBool -> . operadoresEquals
    (34) operadoresEquals -> . EQUALSX2
    (35) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    PUTS            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ID              reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    CONSTANT        reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    GLOBAL          reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    SET             reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    LCOR            reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    ARRAY           reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    LBRACE          reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    END             reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    NEWLINE         reduce using rule 41 (asignacion -> variables EQUAL booleanos .)
    AND             shift and go to state 91
    OR              shift and go to state 92
    EQUALSX2        shift and go to state 87
    NOTEQUALS       shift and go to state 88

    operadoresBool                 shift and go to state 90
    operadoresEquals               shift and go to state 93

state 97

    (42) asignacion -> variables EQUAL comparacion_bool .

    $end            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    PUTS            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ID              reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    CONSTANT        reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    GLOBAL          reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    SET             reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    LCOR            reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    ARRAY           reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    LBRACE          reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    END             reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)
    NEWLINE         reduce using rule 42 (asignacion -> variables EQUAL comparacion_bool .)


state 98

    (43) asignacion -> variables EQUAL struct .

    $end            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    PUTS            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ID              reduce using rule 43 (asignacion -> variables EQUAL struct .)
    CONSTANT        reduce using rule 43 (asignacion -> variables EQUAL struct .)
    GLOBAL          reduce using rule 43 (asignacion -> variables EQUAL struct .)
    SET             reduce using rule 43 (asignacion -> variables EQUAL struct .)
    LCOR            reduce using rule 43 (asignacion -> variables EQUAL struct .)
    ARRAY           reduce using rule 43 (asignacion -> variables EQUAL struct .)
    LBRACE          reduce using rule 43 (asignacion -> variables EQUAL struct .)
    END             reduce using rule 43 (asignacion -> variables EQUAL struct .)
    NEWLINE         reduce using rule 43 (asignacion -> variables EQUAL struct .)


state 99

    (44) asignacion -> variables EQUAL comparacion .

    $end            reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    PUTS            reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    ID              reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    CONSTANT        reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    GLOBAL          reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    SET             reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    LCOR            reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    ARRAY           reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    LBRACE          reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    END             reduce using rule 44 (asignacion -> variables EQUAL comparacion .)
    NEWLINE         reduce using rule 44 (asignacion -> variables EQUAL comparacion .)


state 100

    (45) struct -> conjunto .

    $end            reduce using rule 45 (struct -> conjunto .)
    PUTS            reduce using rule 45 (struct -> conjunto .)
    ID              reduce using rule 45 (struct -> conjunto .)
    CONSTANT        reduce using rule 45 (struct -> conjunto .)
    GLOBAL          reduce using rule 45 (struct -> conjunto .)
    SET             reduce using rule 45 (struct -> conjunto .)
    LCOR            reduce using rule 45 (struct -> conjunto .)
    ARRAY           reduce using rule 45 (struct -> conjunto .)
    LBRACE          reduce using rule 45 (struct -> conjunto .)
    END             reduce using rule 45 (struct -> conjunto .)
    NEWLINE         reduce using rule 45 (struct -> conjunto .)
    COMMA           reduce using rule 45 (struct -> conjunto .)
    RBRACE          reduce using rule 45 (struct -> conjunto .)
    RPAREN          reduce using rule 45 (struct -> conjunto .)


state 101

    (46) struct -> formacion .

    $end            reduce using rule 46 (struct -> formacion .)
    PUTS            reduce using rule 46 (struct -> formacion .)
    ID              reduce using rule 46 (struct -> formacion .)
    CONSTANT        reduce using rule 46 (struct -> formacion .)
    GLOBAL          reduce using rule 46 (struct -> formacion .)
    SET             reduce using rule 46 (struct -> formacion .)
    LCOR            reduce using rule 46 (struct -> formacion .)
    ARRAY           reduce using rule 46 (struct -> formacion .)
    LBRACE          reduce using rule 46 (struct -> formacion .)
    END             reduce using rule 46 (struct -> formacion .)
    NEWLINE         reduce using rule 46 (struct -> formacion .)
    COMMA           reduce using rule 46 (struct -> formacion .)
    RBRACE          reduce using rule 46 (struct -> formacion .)
    RPAREN          reduce using rule 46 (struct -> formacion .)


state 102

    (47) struct -> hash .

    $end            reduce using rule 47 (struct -> hash .)
    PUTS            reduce using rule 47 (struct -> hash .)
    ID              reduce using rule 47 (struct -> hash .)
    CONSTANT        reduce using rule 47 (struct -> hash .)
    GLOBAL          reduce using rule 47 (struct -> hash .)
    SET             reduce using rule 47 (struct -> hash .)
    LCOR            reduce using rule 47 (struct -> hash .)
    ARRAY           reduce using rule 47 (struct -> hash .)
    LBRACE          reduce using rule 47 (struct -> hash .)
    END             reduce using rule 47 (struct -> hash .)
    NEWLINE         reduce using rule 47 (struct -> hash .)
    COMMA           reduce using rule 47 (struct -> hash .)
    RBRACE          reduce using rule 47 (struct -> hash .)
    RPAREN          reduce using rule 47 (struct -> hash .)


state 103

    (13) leer -> GETS PUNTO CHOMP .

    $end            reduce using rule 13 (leer -> GETS PUNTO CHOMP .)


state 104

    (71) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    LPAREN          shift and go to state 130


state 105

    (76) sentenciawhile -> WHILE condicion DO . repetircontenido END
    (69) repetircontenido -> . contenido
    (70) repetircontenido -> . contenido repetircontenido
    (66) contenido -> . impresion
    (67) contenido -> . asignacion
    (68) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 131
    contenido                      shift and go to state 132
    impresion                      shift and go to state 133
    asignacion                     shift and go to state 134
    funcionstruct                  shift and go to state 135
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 106

    (75) condicion -> ARRAY PUNTO . NEW LPAREN arr RPAREN

    NEW             shift and go to state 136


state 107

    (105) sentenciaElsif -> IF condicion NEWLINE . repetircontenido mas_sentencias END
    (69) repetircontenido -> . contenido
    (70) repetircontenido -> . contenido repetircontenido
    (66) contenido -> . impresion
    (67) contenido -> . asignacion
    (68) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 137
    contenido                      shift and go to state 132
    impresion                      shift and go to state 133
    asignacion                     shift and go to state 134
    funcionstruct                  shift and go to state 135
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 108

    (61) funcionsconjunto -> conjunto PUNTO ADD . LPAREN valor RPAREN
    (62) funcionsconjunto -> conjunto PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 138


state 109

    (63) funcionsconjunto -> conjunto PUNTO MERGE . LPAREN variables RPAREN

    LPAREN          shift and go to state 139


state 110

    (64) funcionsconjunto -> conjunto PUNTO SIZE . LPAREN RPAREN
    (65) funcionsconjunto -> conjunto PUNTO SIZE .

    LPAREN          shift and go to state 140
    $end            reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    PUTS            reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    ID              reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    CONSTANT        reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    GLOBAL          reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    SET             reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    LCOR            reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    ARRAY           reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    LBRACE          reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    END             reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)
    NEWLINE         reduce using rule 65 (funcionsconjunto -> conjunto PUNTO SIZE .)


state 111

    (81) funcionsformacion -> formacion PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 141


state 112

    (82) funcionsformacion -> formacion PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 142


state 113

    (83) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN variables RPAREN

    LPAREN          shift and go to state 143


state 114

    (84) funcionsformacion -> formacion PUNTO FIRST .
    (85) funcionsformacion -> formacion PUNTO FIRST . LPAREN RPAREN

    $end            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    PUTS            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    ID              reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    CONSTANT        reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    GLOBAL          reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    SET             reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    LCOR            reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    ARRAY           reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    LBRACE          reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    END             reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    NEWLINE         reduce using rule 84 (funcionsformacion -> formacion PUNTO FIRST .)
    LPAREN          shift and go to state 144


state 115

    (49) conjunto -> SET LCOR RCOR .

    PUNTO           reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    $end            reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    PUTS            reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    ID              reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    CONSTANT        reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    GLOBAL          reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    SET             reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    LCOR            reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    ARRAY           reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    LBRACE          reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    END             reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    NEWLINE         reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 49 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 49 (conjunto -> SET LCOR RCOR .)


state 116

    (57) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 145


state 117

    (77) formacion -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    SET             reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    LCOR            reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    ARRAY           reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    LBRACE          reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    END             reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 77 (formacion -> LCOR repetirvalor RCOR .)


state 118

    (56) repetirvalor -> valor COMMA . repetirvalor
    (55) repetirvalor -> . valor
    (56) repetirvalor -> . valor COMMA repetirvalor
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    valor                          shift and go to state 66
    repetirvalor                   shift and go to state 146
    booleanos                      shift and go to state 70

state 119

    (79) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (80) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 147


state 120

    (99) hash_add -> hash PUNTO STORE . LPAREN hash_element RPAREN

    LPAREN          shift and go to state 148


state 121

    (100) hash_delete -> hash PUNTO LPAREN . clave RPAREN
    (93) clave -> . variables
    (94) clave -> . STRING
    (95) clave -> . INT
    (96) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    clave                          shift and go to state 149
    variables                      shift and go to state 78

state 122

    (101) hash_key -> hash PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 150


state 123

    (86) hash -> LBRACE hash_content RBRACE .

    PUNTO           reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    ID              reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    CONSTANT        reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    GLOBAL          reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    SET             reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    LCOR            reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    ARRAY           reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    LBRACE          reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    END             reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    NEWLINE         reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 86 (hash -> LBRACE hash_content RBRACE .)


state 124

    (87) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 87 (hash_elements -> hash_element hash_more_elements .)


state 125

    (91) hash_more_elements -> COMMA . hash_element
    (92) hash_more_elements -> COMMA . hash_element hash_more_elements
    (90) hash_element -> . clave FLECHA value
    (93) clave -> . variables
    (94) clave -> . STRING
    (95) clave -> . INT
    (96) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_element                   shift and go to state 151
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 126

    (90) hash_element -> clave FLECHA . value
    (97) value -> . valor
    (98) value -> . struct
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (45) struct -> . conjunto
    (46) struct -> . formacion
    (47) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    value                          shift and go to state 152
    valor                          shift and go to state 153
    struct                         shift and go to state 154
    booleanos                      shift and go to state 70
    conjunto                       shift and go to state 100
    formacion                      shift and go to state 101
    hash                           shift and go to state 102

state 127

    (15) comparacion -> factor operadoresComp factor .
    (14) expression -> factor . operadoresMat factor
    (21) operadoresMat -> . PLUS
    (22) operadoresMat -> . MINUS
    (23) operadoresMat -> . TIMES
    (24) operadoresMat -> . DIVIDE
    (25) operadoresMat -> . MOD

    $end            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PUTS            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ID              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    CONSTANT        reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    GLOBAL          reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    SET             reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    LCOR            reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    ARRAY           reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    LBRACE          reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    END             reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    NEWLINE         reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    DO              reduce using rule 15 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operadoresMat                  shift and go to state 35

state 128

    (16) comparacion -> STRING operadoresEquals STRING .

    $end            reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    PUTS            reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    ID              reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    CONSTANT        reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    GLOBAL          reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    SET             reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    LCOR            reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    ARRAY           reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    LBRACE          reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    END             reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    NEWLINE         reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)
    DO              reduce using rule 16 (comparacion -> STRING operadoresEquals STRING .)


state 129

    (17) comparacion_bool -> booleanos operadoresBool booleanos .

    $end            reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    PUTS            reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ID              reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    CONSTANT        reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    GLOBAL          reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    SET             reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    LCOR            reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ARRAY           reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    LBRACE          reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    END             reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    NEWLINE         reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)
    DO              reduce using rule 17 (comparacion_bool -> booleanos operadoresBool booleanos .)


state 130

    (71) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN repetircontenido END

    INT             shift and go to state 155


state 131

    (76) sentenciawhile -> WHILE condicion DO repetircontenido . END

    END             shift and go to state 156


state 132

    (69) repetircontenido -> contenido .
    (70) repetircontenido -> contenido . repetircontenido
    (69) repetircontenido -> . contenido
    (70) repetircontenido -> . contenido repetircontenido
    (66) contenido -> . impresion
    (67) contenido -> . asignacion
    (68) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    END             reduce using rule 69 (repetircontenido -> contenido .)
    NEWLINE         reduce using rule 69 (repetircontenido -> contenido .)
    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    contenido                      shift and go to state 132
    repetircontenido               shift and go to state 157
    impresion                      shift and go to state 133
    asignacion                     shift and go to state 134
    funcionstruct                  shift and go to state 135
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 133

    (66) contenido -> impresion .

    PUTS            reduce using rule 66 (contenido -> impresion .)
    ID              reduce using rule 66 (contenido -> impresion .)
    CONSTANT        reduce using rule 66 (contenido -> impresion .)
    GLOBAL          reduce using rule 66 (contenido -> impresion .)
    SET             reduce using rule 66 (contenido -> impresion .)
    LCOR            reduce using rule 66 (contenido -> impresion .)
    ARRAY           reduce using rule 66 (contenido -> impresion .)
    LBRACE          reduce using rule 66 (contenido -> impresion .)
    END             reduce using rule 66 (contenido -> impresion .)
    NEWLINE         reduce using rule 66 (contenido -> impresion .)


state 134

    (67) contenido -> asignacion .

    PUTS            reduce using rule 67 (contenido -> asignacion .)
    ID              reduce using rule 67 (contenido -> asignacion .)
    CONSTANT        reduce using rule 67 (contenido -> asignacion .)
    GLOBAL          reduce using rule 67 (contenido -> asignacion .)
    SET             reduce using rule 67 (contenido -> asignacion .)
    LCOR            reduce using rule 67 (contenido -> asignacion .)
    ARRAY           reduce using rule 67 (contenido -> asignacion .)
    LBRACE          reduce using rule 67 (contenido -> asignacion .)
    END             reduce using rule 67 (contenido -> asignacion .)
    NEWLINE         reduce using rule 67 (contenido -> asignacion .)


state 135

    (68) contenido -> funcionstruct .

    PUTS            reduce using rule 68 (contenido -> funcionstruct .)
    ID              reduce using rule 68 (contenido -> funcionstruct .)
    CONSTANT        reduce using rule 68 (contenido -> funcionstruct .)
    GLOBAL          reduce using rule 68 (contenido -> funcionstruct .)
    SET             reduce using rule 68 (contenido -> funcionstruct .)
    LCOR            reduce using rule 68 (contenido -> funcionstruct .)
    ARRAY           reduce using rule 68 (contenido -> funcionstruct .)
    LBRACE          reduce using rule 68 (contenido -> funcionstruct .)
    END             reduce using rule 68 (contenido -> funcionstruct .)
    NEWLINE         reduce using rule 68 (contenido -> funcionstruct .)


state 136

    (75) condicion -> ARRAY PUNTO NEW . LPAREN arr RPAREN

    LPAREN          shift and go to state 158


state 137

    (105) sentenciaElsif -> IF condicion NEWLINE repetircontenido . mas_sentencias END
    (106) mas_sentencias -> . NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE
    (107) mas_sentencias -> . NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias

    NEWLINE         shift and go to state 159

    mas_sentencias                 shift and go to state 160

state 138

    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN . valor RPAREN
    (62) funcionsconjunto -> conjunto PUNTO ADD LPAREN . arr RPAREN
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (57) arr -> . LCOR repetirvalor RCOR
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    LCOR            shift and go to state 163
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    valor                          shift and go to state 161
    arr                            shift and go to state 162
    booleanos                      shift and go to state 70

state 139

    (63) funcionsconjunto -> conjunto PUNTO MERGE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 164

state 140

    (64) funcionsconjunto -> conjunto PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 165


state 141

    (81) funcionsformacion -> formacion PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 166


state 142

    (82) funcionsformacion -> formacion PUNTO PUSH LPAREN . repetirvalor RPAREN
    (55) repetirvalor -> . valor
    (56) repetirvalor -> . valor COMMA repetirvalor
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    repetirvalor                   shift and go to state 167
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 143

    (83) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . variables RPAREN
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    variables                      shift and go to state 168

state 144

    (85) funcionsformacion -> formacion PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 169


state 145

    (57) arr -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    SET             reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    LCOR            reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    ARRAY           reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    LBRACE          reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    END             reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 57 (arr -> LCOR repetirvalor RCOR .)


state 146

    (56) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 56 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 56 (repetirvalor -> valor COMMA repetirvalor .)


state 147

    (79) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (80) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 170
    RPAREN          shift and go to state 171


state 148

    (99) hash_add -> hash PUNTO STORE LPAREN . hash_element RPAREN
    (90) hash_element -> . clave FLECHA value
    (93) clave -> . variables
    (94) clave -> . STRING
    (95) clave -> . INT
    (96) clave -> . FLOAT
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL

    STRING          shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24

    hash_element                   shift and go to state 172
    clave                          shift and go to state 77
    variables                      shift and go to state 78

state 149

    (100) hash_delete -> hash PUNTO LPAREN clave . RPAREN

    RPAREN          shift and go to state 173


state 150

    (101) hash_key -> hash PUNTO KEY LPAREN . value RPAREN
    (97) value -> . valor
    (98) value -> . struct
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (45) struct -> . conjunto
    (46) struct -> . formacion
    (47) struct -> . hash
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    hash                           shift and go to state 102
    value                          shift and go to state 174
    valor                          shift and go to state 153
    struct                         shift and go to state 154
    booleanos                      shift and go to state 70
    conjunto                       shift and go to state 100
    formacion                      shift and go to state 101

state 151

    (91) hash_more_elements -> COMMA hash_element .
    (92) hash_more_elements -> COMMA hash_element . hash_more_elements
    (91) hash_more_elements -> . COMMA hash_element
    (92) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 91 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 125

    hash_more_elements             shift and go to state 175

state 152

    (90) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 90 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 90 (hash_element -> clave FLECHA value .)
    RPAREN          reduce using rule 90 (hash_element -> clave FLECHA value .)


state 153

    (97) value -> valor .

    COMMA           reduce using rule 97 (value -> valor .)
    RBRACE          reduce using rule 97 (value -> valor .)
    RPAREN          reduce using rule 97 (value -> valor .)


state 154

    (98) value -> struct .

    COMMA           reduce using rule 98 (value -> struct .)
    RBRACE          reduce using rule 98 (value -> struct .)
    RPAREN          reduce using rule 98 (value -> struct .)


state 155

    (71) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 176


state 156

    (76) sentenciawhile -> WHILE condicion DO repetircontenido END .

    $end            reduce using rule 76 (sentenciawhile -> WHILE condicion DO repetircontenido END .)


state 157

    (70) repetircontenido -> contenido repetircontenido .

    END             reduce using rule 70 (repetircontenido -> contenido repetircontenido .)
    NEWLINE         reduce using rule 70 (repetircontenido -> contenido repetircontenido .)


state 158

    (75) condicion -> ARRAY PUNTO NEW LPAREN . arr RPAREN
    (57) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 163

    arr                            shift and go to state 177

state 159

    (106) mas_sentencias -> NEWLINE . ELSIF condicion NEWLINE repetircontenido NEWLINE
    (107) mas_sentencias -> NEWLINE . ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias

    ELSIF           shift and go to state 178


state 160

    (105) sentenciaElsif -> IF condicion NEWLINE repetircontenido mas_sentencias . END

    END             shift and go to state 179


state 161

    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 180


state 162

    (62) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 181


state 163

    (57) arr -> LCOR . repetirvalor RCOR
    (55) repetirvalor -> . valor
    (56) repetirvalor -> . valor COMMA repetirvalor
    (50) valor -> . INT
    (51) valor -> . ID
    (52) valor -> . STRING
    (53) valor -> . booleanos
    (54) valor -> . FLOAT
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE

    INT             shift and go to state 67
    ID              shift and go to state 68
    STRING          shift and go to state 69
    FLOAT           shift and go to state 71
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    repetirvalor                   shift and go to state 116
    valor                          shift and go to state 66
    booleanos                      shift and go to state 70

state 164

    (63) funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables . RPAREN

    RPAREN          shift and go to state 182


state 165

    (64) funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .

    $end            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    PUTS            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    ID              reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    CONSTANT        reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    GLOBAL          reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    SET             reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    LCOR            reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    ARRAY           reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    LBRACE          reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    END             reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    NEWLINE         reduce using rule 64 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)


state 166

    (81) funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .

    $end            reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    PUTS            reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    ID              reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    CONSTANT        reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    GLOBAL          reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    SET             reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    LCOR            reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    ARRAY           reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    LBRACE          reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    END             reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    NEWLINE         reduce using rule 81 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)


state 167

    (82) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 183


state 168

    (83) funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables . RPAREN

    RPAREN          shift and go to state 184


state 169

    (85) funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .

    $end            reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    PUTS            reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    ID              reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    CONSTANT        reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    GLOBAL          reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    SET             reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    LCOR            reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    ARRAY           reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    LBRACE          reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    END             reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    NEWLINE         reduce using rule 85 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)


state 170

    (79) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 185


state 171

    (80) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    PUNTO           reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    $end            reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    PUTS            reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ID              reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    CONSTANT        reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    GLOBAL          reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    SET             reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    LCOR            reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ARRAY           reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    LBRACE          reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    END             reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    NEWLINE         reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 80 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 172

    (99) hash_add -> hash PUNTO STORE LPAREN hash_element . RPAREN

    RPAREN          shift and go to state 186


state 173

    (100) hash_delete -> hash PUNTO LPAREN clave RPAREN .

    $end            reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    PUTS            reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    ID              reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    CONSTANT        reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    GLOBAL          reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    SET             reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    LCOR            reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    ARRAY           reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    LBRACE          reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    END             reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)
    NEWLINE         reduce using rule 100 (hash_delete -> hash PUNTO LPAREN clave RPAREN .)


state 174

    (101) hash_key -> hash PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 187


state 175

    (92) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 92 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 176

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 188


state 177

    (75) condicion -> ARRAY PUNTO NEW LPAREN arr . RPAREN

    RPAREN          shift and go to state 189


state 178

    (106) mas_sentencias -> NEWLINE ELSIF . condicion NEWLINE repetircontenido NEWLINE
    (107) mas_sentencias -> NEWLINE ELSIF . condicion NEWLINE repetircontenido NEWLINE mas_sentencias
    (72) condicion -> . comparacion
    (73) condicion -> . comparacion_bool
    (74) condicion -> . booleanos
    (75) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (15) comparacion -> . factor operadoresComp factor
    (16) comparacion -> . STRING operadoresEquals STRING
    (17) comparacion_bool -> . booleanos operadoresBool booleanos
    (29) booleanos -> . TRUE
    (30) booleanos -> . FALSE
    (26) factor -> . INT
    (27) factor -> . FLOAT
    (28) factor -> . expression
    (14) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 56
    STRING          shift and go to state 58
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    INT             shift and go to state 18
    FLOAT           shift and go to state 21

    condicion                      shift and go to state 190
    comparacion                    shift and go to state 53
    comparacion_bool               shift and go to state 54
    booleanos                      shift and go to state 55
    factor                         shift and go to state 57
    expression                     shift and go to state 45

state 179

    (105) sentenciaElsif -> IF condicion NEWLINE repetircontenido mas_sentencias END .

    $end            reduce using rule 105 (sentenciaElsif -> IF condicion NEWLINE repetircontenido mas_sentencias END .)


state 180

    (61) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .

    $end            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    PUTS            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    ID              reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    CONSTANT        reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    GLOBAL          reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    SET             reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    LCOR            reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    ARRAY           reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    LBRACE          reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    END             reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    NEWLINE         reduce using rule 61 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)


state 181

    (62) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .

    $end            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    PUTS            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    ID              reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    SET             reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    LCOR            reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    ARRAY           reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    LBRACE          reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    END             reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    NEWLINE         reduce using rule 62 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)


state 182

    (63) funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .

    $end            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    PUTS            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    ID              reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    SET             reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    LCOR            reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    ARRAY           reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    LBRACE          reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    END             reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)
    NEWLINE         reduce using rule 63 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN .)


state 183

    (82) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .

    $end            reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    PUTS            reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ID              reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    CONSTANT        reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    GLOBAL          reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    SET             reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    LCOR            reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ARRAY           reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    LBRACE          reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    END             reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    NEWLINE         reduce using rule 82 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 184

    (83) funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .

    $end            reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    PUTS            reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    ID              reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    SET             reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    LCOR            reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    ARRAY           reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    LBRACE          reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    END             reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)
    NEWLINE         reduce using rule 83 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN .)


state 185

    (79) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    PUNTO           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    $end            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    PUTS            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ID              reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    CONSTANT        reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    GLOBAL          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    SET             reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    LCOR            reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ARRAY           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    LBRACE          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    END             reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    NEWLINE         reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 79 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 186

    (99) hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .

    $end            reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    PUTS            reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    ID              reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    CONSTANT        reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    GLOBAL          reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    SET             reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    LCOR            reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    ARRAY           reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    LBRACE          reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    END             reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)
    NEWLINE         reduce using rule 99 (hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN .)


state 187

    (101) hash_key -> hash PUNTO KEY LPAREN value RPAREN .

    $end            reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    PUTS            reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    ID              reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    CONSTANT        reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    GLOBAL          reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    SET             reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    LCOR            reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    ARRAY           reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    LBRACE          reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    END             reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    NEWLINE         reduce using rule 101 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)


state 188

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN repetircontenido END

    INT             shift and go to state 191


state 189

    (75) condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .

    DO              reduce using rule 75 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)
    NEWLINE         reduce using rule 75 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)


state 190

    (106) mas_sentencias -> NEWLINE ELSIF condicion . NEWLINE repetircontenido NEWLINE
    (107) mas_sentencias -> NEWLINE ELSIF condicion . NEWLINE repetircontenido NEWLINE mas_sentencias

    NEWLINE         shift and go to state 192


state 191

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN repetircontenido END

    RPAREN          shift and go to state 193


state 192

    (106) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE . repetircontenido NEWLINE
    (107) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE . repetircontenido NEWLINE mas_sentencias
    (69) repetircontenido -> . contenido
    (70) repetircontenido -> . contenido repetircontenido
    (66) contenido -> . impresion
    (67) contenido -> . asignacion
    (68) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    repetircontenido               shift and go to state 194
    contenido                      shift and go to state 132
    impresion                      shift and go to state 133
    asignacion                     shift and go to state 134
    funcionstruct                  shift and go to state 135
    variables                      shift and go to state 12
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 193

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . repetircontenido END
    (69) repetircontenido -> . contenido
    (70) repetircontenido -> . contenido repetircontenido
    (66) contenido -> . impresion
    (67) contenido -> . asignacion
    (68) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (39) asignacion -> . variables EQUAL factor
    (40) asignacion -> . variables EQUAL STRING
    (41) asignacion -> . variables EQUAL booleanos
    (42) asignacion -> . variables EQUAL comparacion_bool
    (43) asignacion -> . variables EQUAL struct
    (44) asignacion -> . variables EQUAL comparacion
    (58) funcionstruct -> . funcionsconjunto
    (59) funcionstruct -> . funcionsformacion
    (60) funcionstruct -> . funcionsHash
    (36) variables -> . ID
    (37) variables -> . CONSTANT
    (38) variables -> . GLOBAL
    (61) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (62) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (63) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN variables RPAREN
    (64) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (65) funcionsconjunto -> . conjunto PUNTO SIZE
    (81) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (82) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (83) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN variables RPAREN
    (84) funcionsformacion -> . formacion PUNTO FIRST
    (85) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (102) funcionsHash -> . hash_add
    (103) funcionsHash -> . hash_delete
    (104) funcionsHash -> . hash_key
    (48) conjunto -> . SET arr
    (49) conjunto -> . SET LCOR RCOR
    (77) formacion -> . LCOR repetirvalor RCOR
    (78) formacion -> . LCOR RCOR
    (79) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (80) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (99) hash_add -> . hash PUNTO STORE LPAREN hash_element RPAREN
    (100) hash_delete -> . hash PUNTO LPAREN clave RPAREN
    (101) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (86) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 11
    ID              shift and go to state 22
    CONSTANT        shift and go to state 23
    GLOBAL          shift and go to state 24
    SET             shift and go to state 30
    LCOR            shift and go to state 31
    ARRAY           shift and go to state 32
    LBRACE          shift and go to state 34

    variables                      shift and go to state 12
    repetircontenido               shift and go to state 195
    contenido                      shift and go to state 132
    impresion                      shift and go to state 133
    asignacion                     shift and go to state 134
    funcionstruct                  shift and go to state 135
    funcionsconjunto               shift and go to state 14
    funcionsformacion              shift and go to state 15
    funcionsHash                   shift and go to state 16
    conjunto                       shift and go to state 25
    formacion                      shift and go to state 26
    hash_add                       shift and go to state 27
    hash_delete                    shift and go to state 28
    hash_key                       shift and go to state 29
    hash                           shift and go to state 33

state 194

    (106) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido . NEWLINE
    (107) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido . NEWLINE mas_sentencias

    NEWLINE         shift and go to state 196


state 195

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido . END

    END             shift and go to state 197


state 196

    (106) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE .
    (107) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE . mas_sentencias
    (106) mas_sentencias -> . NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE
    (107) mas_sentencias -> . NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias

    END             reduce using rule 106 (mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE .)
    NEWLINE         shift and go to state 159

    mas_sentencias                 shift and go to state 198

state 197

    (71) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .

    $end            reduce using rule 71 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .)


state 198

    (107) mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias .

    END             reduce using rule 107 (mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
