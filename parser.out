Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    CLEAR
    DEF
    DEFINED
    DELETE
    ELSE
    ELSIF
    ENSURE
    FETCH
    IF
    MODULE
    NEWLINE
    NEXT
    NIL
    NOT
    NUMERAL
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> sentenciafor
Rule 7     cuerpo -> sentenciawhile
Rule 8     impresion -> PUTS factor
Rule 9     impresion -> PUTS comparacion
Rule 10    impresion -> PUTS comparacion_bool
Rule 11    impresion -> PUTS STRING
Rule 12    leer -> GETS PUNTO CHOMP
Rule 13    expression -> factor operadoresMat factor
Rule 14    comparacion -> factor operadoresComp factor
Rule 15    comparacion_bool -> booleanos operadoresBool booleanos
Rule 16    operadoresComp -> MAYORQUE
Rule 17    operadoresComp -> MENORQUE
Rule 18    operadoresComp -> operadoresEquals
Rule 19    operadoresMat -> PLUS
Rule 20    operadoresMat -> MINUS
Rule 21    operadoresMat -> TIMES
Rule 22    operadoresMat -> DIVIDE
Rule 23    operadoresMat -> MOD
Rule 24    factor -> INT
Rule 25    factor -> variables
Rule 26    factor -> FLOAT
Rule 27    factor -> expression
Rule 28    booleanos -> TRUE
Rule 29    booleanos -> FALSE
Rule 30    operadoresBool -> AND
Rule 31    operadoresBool -> OR
Rule 32    operadoresBool -> operadoresEquals
Rule 33    operadoresEquals -> EQUALSX2
Rule 34    operadoresEquals -> NOTEQUALS
Rule 35    variables -> ID
Rule 36    variables -> CONSTANT
Rule 37    variables -> GLOBAL
Rule 38    asignacion -> variables EQUAL factor
Rule 39    asignacion -> variables EQUAL STRING
Rule 40    asignacion -> variables EQUAL booleanos
Rule 41    asignacion -> variables EQUAL comparacion_bool
Rule 42    asignacion -> variables EQUAL struct
Rule 43    struct -> conjunto
Rule 44    struct -> formacion
Rule 45    struct -> hash
Rule 46    conjunto -> SET arr
Rule 47    conjunto -> SET LCOR RCOR
Rule 48    valor -> INT
Rule 49    valor -> ID
Rule 50    valor -> STRING
Rule 51    valor -> booleanos
Rule 52    valor -> FLOAT
Rule 53    repetirvalor -> valor
Rule 54    repetirvalor -> valor COMMA repetirvalor
Rule 55    arr -> LCOR repetirvalor RCOR
Rule 56    funcionstruct -> funcionsconjunto
Rule 57    funcionstruct -> funcionsformacion
Rule 58    funcionstruct -> funcionsHash
Rule 59    funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN
Rule 60    funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN
Rule 61    funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN
Rule 62    funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN
Rule 63    funcionsconjunto -> variables PUNTO SIZE
Rule 64    contenido -> impresion
Rule 65    contenido -> asignacion
Rule 66    contenido -> funcionstruct
Rule 67    repetircontenido -> contenido
Rule 68    repetircontenido -> contenido repetircontenido
Rule 69    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
Rule 70    condicion -> comparacion
Rule 71    condicion -> comparacion_bool
Rule 72    condicion -> booleanos
Rule 73    condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN
Rule 74    sentenciawhile -> WHILE condicion DO repetircontenido END
Rule 75    formacion -> LCOR repetirvalor RCOR
Rule 76    formacion -> LCOR RCOR
Rule 77    formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 78    formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 79    funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN
Rule 80    funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 81    funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN
Rule 82    funcionsformacion -> variables PUNTO FIRST
Rule 83    funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN
Rule 84    hash -> LBRACE hash_content RBRACE
Rule 85    hash_elements -> hash_element hash_more_elements
Rule 86    hash_content -> hash_element
Rule 87    hash_content -> hash_elements
Rule 88    hash_element -> clave FLECHA value
Rule 89    hash_more_elements -> COMMA hash_element
Rule 90    hash_more_elements -> COMMA hash_element hash_more_elements
Rule 91    clave -> variables
Rule 92    clave -> STRING
Rule 93    clave -> INT
Rule 94    clave -> FLOAT
Rule 95    value -> valor
Rule 96    value -> struct
Rule 97    hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN
Rule 98    hash_delete -> variables PUNTO LPAREN clave RPAREN
Rule 99    hash_key -> variables PUNTO KEY LPAREN value RPAREN
Rule 100   funcionsHash -> hash_add
Rule 101   funcionsHash -> hash_delete
Rule 102   funcionsHash -> hash_key

Terminals, with rules where they appear

ADD                  : 59 60
ALIAS                : 
AND                  : 30
ARRAY                : 73 77 78
BEGIN                : 
BREAK                : 
CASE                 : 
CHOMP                : 12
CLASS                : 
CLEAR                : 
COMMA                : 54 89 90
CONSTANT             : 36
DEF                  : 
DEFINED              : 
DELETE               : 
DIVIDE               : 22
DO                   : 74
ELSE                 : 
ELSIF                : 
END                  : 69 74
ENSURE               : 
EQUAL                : 38 39 40 41 42
EQUALSX2             : 33
FALSE                : 29
FETCH                : 
FIRST                : 82 83
FLECHA               : 88
FLOAT                : 26 52 94
FOR                  : 69
GETS                 : 12
GLOBAL               : 37
ID                   : 35 49
IF                   : 
IN                   : 69
INT                  : 24 48 69 69 77 93
KEY                  : 99
LBRACE               : 84
LCOR                 : 47 55 75 76
LENGTH               : 79
LPAREN               : 59 60 61 62 69 73 77 78 79 80 81 83 97 98 99
MAYORQUE             : 16
MENORQUE             : 17
MERGE                : 61
MINUS                : 20
MOD                  : 23
MODULE               : 
NEW                  : 73 77 78
NEWLINE              : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUALS            : 34
NUMERAL              : 
OR                   : 31
PLUS                 : 19
PUNTO                : 12 59 60 61 62 63 69 69 73 77 78 79 80 81 82 83 97 98 99
PUSH                 : 80
PUTS                 : 8 9 10 11
RBRACE               : 84
RCOR                 : 47 55 75 76
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 59 60 61 62 69 73 77 78 79 80 81 83 97 98 99
SAMPLE               : 81
SELF                 : 
SET                  : 46 47
SIZE                 : 62 63
STORE                : 97
STRING               : 11 39 50 92
SUPER                : 
THEN                 : 
TIMES                : 21
TRUE                 : 28
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 74
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arr                  : 46 60 73
asignacion           : 3 65
booleanos            : 15 15 40 51 72
clave                : 88 98
comparacion          : 9 70
comparacion_bool     : 10 41 71
condicion            : 74
conjunto             : 43
contenido            : 67 68
cuerpo               : 0
expression           : 1 27
factor               : 8 13 13 14 14 38
formacion            : 44
funcionsHash         : 58
funcionsconjunto     : 56
funcionsformacion    : 57
funcionstruct        : 5 66
hash                 : 45
hash_add             : 100
hash_content         : 84
hash_delete          : 101
hash_element         : 85 86 89 90 97
hash_elements        : 87
hash_key             : 102
hash_more_elements   : 85 90
impresion            : 2 64
leer                 : 4
operadoresBool       : 15
operadoresComp       : 14
operadoresEquals     : 18 32
operadoresMat        : 13
repetircontenido     : 68 69 74
repetirvalor         : 54 55 75 80
sentenciafor         : 6
sentenciawhile       : 7
struct               : 42 96
valor                : 53 54 59 95
value                : 88 99
variables            : 25 38 39 40 41 42 59 60 61 61 62 63 69 79 80 81 81 82 83 91 97 98 99

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . sentenciafor
    (7) cuerpo -> . sentenciawhile
    (13) expression -> . factor operadoresMat factor
    (8) impresion -> . PUTS factor
    (9) impresion -> . PUTS comparacion
    (10) impresion -> . PUTS comparacion_bool
    (11) impresion -> . PUTS STRING
    (38) asignacion -> . variables EQUAL factor
    (39) asignacion -> . variables EQUAL STRING
    (40) asignacion -> . variables EQUAL booleanos
    (41) asignacion -> . variables EQUAL comparacion_bool
    (42) asignacion -> . variables EQUAL struct
    (12) leer -> . GETS PUNTO CHOMP
    (56) funcionstruct -> . funcionsconjunto
    (57) funcionstruct -> . funcionsformacion
    (58) funcionstruct -> . funcionsHash
    (69) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (74) sentenciawhile -> . WHILE condicion DO repetircontenido END
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (59) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE
    (79) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> . variables PUNTO FIRST
    (83) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (100) funcionsHash -> . hash_add
    (101) funcionsHash -> . hash_delete
    (102) funcionsHash -> . hash_key
    (97) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (99) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 10
    GETS            shift and go to state 12
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    sentenciafor                   shift and go to state 7
    sentenciawhile                 shift and go to state 8
    factor                         shift and go to state 9
    variables                      shift and go to state 11
    funcionsconjunto               shift and go to state 13
    funcionsformacion              shift and go to state 14
    funcionsHash                   shift and go to state 15
    hash_add                       shift and go to state 23
    hash_delete                    shift and go to state 24
    hash_key                       shift and go to state 25

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (27) factor -> expression .

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 27 (factor -> expression .)
    MINUS           reduce using rule 27 (factor -> expression .)
    TIMES           reduce using rule 27 (factor -> expression .)
    DIVIDE          reduce using rule 27 (factor -> expression .)
    MOD             reduce using rule 27 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> sentenciafor .

    $end            reduce using rule 6 (cuerpo -> sentenciafor .)


state 8

    (7) cuerpo -> sentenciawhile .

    $end            reduce using rule 7 (cuerpo -> sentenciawhile .)


state 9

    (13) expression -> factor . operadoresMat factor
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD

    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31

    operadoresMat                  shift and go to state 26

state 10

    (8) impresion -> PUTS . factor
    (9) impresion -> PUTS . comparacion
    (10) impresion -> PUTS . comparacion_bool
    (11) impresion -> PUTS . STRING
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (14) comparacion -> . factor operadoresComp factor
    (15) comparacion_bool -> . booleanos operadoresBool booleanos
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (13) expression -> . factor operadoresMat factor
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    STRING          shift and go to state 35
    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    factor                         shift and go to state 32
    comparacion                    shift and go to state 33
    comparacion_bool               shift and go to state 34
    variables                      shift and go to state 36
    expression                     shift and go to state 37
    booleanos                      shift and go to state 38

state 11

    (38) asignacion -> variables . EQUAL factor
    (39) asignacion -> variables . EQUAL STRING
    (40) asignacion -> variables . EQUAL booleanos
    (41) asignacion -> variables . EQUAL comparacion_bool
    (42) asignacion -> variables . EQUAL struct
    (25) factor -> variables .
    (59) funcionsconjunto -> variables . PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> variables . PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> variables . PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> variables . PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> variables . PUNTO SIZE
    (79) funcionsformacion -> variables . PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> variables . PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> variables . PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> variables . PUNTO FIRST
    (83) funcionsformacion -> variables . PUNTO FIRST LPAREN RPAREN
    (97) hash_add -> variables . PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> variables . PUNTO LPAREN clave RPAREN
    (99) hash_key -> variables . PUNTO KEY LPAREN value RPAREN

    EQUAL           shift and go to state 41
    PLUS            reduce using rule 25 (factor -> variables .)
    MINUS           reduce using rule 25 (factor -> variables .)
    TIMES           reduce using rule 25 (factor -> variables .)
    DIVIDE          reduce using rule 25 (factor -> variables .)
    MOD             reduce using rule 25 (factor -> variables .)
    PUNTO           shift and go to state 42


state 12

    (12) leer -> GETS . PUNTO CHOMP

    PUNTO           shift and go to state 43


state 13

    (56) funcionstruct -> funcionsconjunto .

    $end            reduce using rule 56 (funcionstruct -> funcionsconjunto .)
    PUTS            reduce using rule 56 (funcionstruct -> funcionsconjunto .)
    ID              reduce using rule 56 (funcionstruct -> funcionsconjunto .)
    CONSTANT        reduce using rule 56 (funcionstruct -> funcionsconjunto .)
    GLOBAL          reduce using rule 56 (funcionstruct -> funcionsconjunto .)
    END             reduce using rule 56 (funcionstruct -> funcionsconjunto .)


state 14

    (57) funcionstruct -> funcionsformacion .

    $end            reduce using rule 57 (funcionstruct -> funcionsformacion .)
    PUTS            reduce using rule 57 (funcionstruct -> funcionsformacion .)
    ID              reduce using rule 57 (funcionstruct -> funcionsformacion .)
    CONSTANT        reduce using rule 57 (funcionstruct -> funcionsformacion .)
    GLOBAL          reduce using rule 57 (funcionstruct -> funcionsformacion .)
    END             reduce using rule 57 (funcionstruct -> funcionsformacion .)


state 15

    (58) funcionstruct -> funcionsHash .

    $end            reduce using rule 58 (funcionstruct -> funcionsHash .)
    PUTS            reduce using rule 58 (funcionstruct -> funcionsHash .)
    ID              reduce using rule 58 (funcionstruct -> funcionsHash .)
    CONSTANT        reduce using rule 58 (funcionstruct -> funcionsHash .)
    GLOBAL          reduce using rule 58 (funcionstruct -> funcionsHash .)
    END             reduce using rule 58 (funcionstruct -> funcionsHash .)


state 16

    (69) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 44

state 17

    (24) factor -> INT .

    PLUS            reduce using rule 24 (factor -> INT .)
    MINUS           reduce using rule 24 (factor -> INT .)
    TIMES           reduce using rule 24 (factor -> INT .)
    DIVIDE          reduce using rule 24 (factor -> INT .)
    MOD             reduce using rule 24 (factor -> INT .)
    MAYORQUE        reduce using rule 24 (factor -> INT .)
    MENORQUE        reduce using rule 24 (factor -> INT .)
    EQUALSX2        reduce using rule 24 (factor -> INT .)
    NOTEQUALS       reduce using rule 24 (factor -> INT .)
    $end            reduce using rule 24 (factor -> INT .)
    PUTS            reduce using rule 24 (factor -> INT .)
    ID              reduce using rule 24 (factor -> INT .)
    CONSTANT        reduce using rule 24 (factor -> INT .)
    GLOBAL          reduce using rule 24 (factor -> INT .)
    END             reduce using rule 24 (factor -> INT .)
    DO              reduce using rule 24 (factor -> INT .)


state 18

    (74) sentenciawhile -> WHILE . condicion DO repetircontenido END
    (70) condicion -> . comparacion
    (71) condicion -> . comparacion_bool
    (72) condicion -> . booleanos
    (73) condicion -> . ARRAY PUNTO NEW LPAREN arr RPAREN
    (14) comparacion -> . factor operadoresComp factor
    (15) comparacion_bool -> . booleanos operadoresBool booleanos
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (13) expression -> . factor operadoresMat factor

    ARRAY           shift and go to state 49
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    condicion                      shift and go to state 45
    comparacion                    shift and go to state 46
    comparacion_bool               shift and go to state 47
    booleanos                      shift and go to state 48
    factor                         shift and go to state 50
    variables                      shift and go to state 36
    expression                     shift and go to state 37

state 19

    (26) factor -> FLOAT .

    PLUS            reduce using rule 26 (factor -> FLOAT .)
    MINUS           reduce using rule 26 (factor -> FLOAT .)
    TIMES           reduce using rule 26 (factor -> FLOAT .)
    DIVIDE          reduce using rule 26 (factor -> FLOAT .)
    MOD             reduce using rule 26 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 26 (factor -> FLOAT .)
    MENORQUE        reduce using rule 26 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 26 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 26 (factor -> FLOAT .)
    $end            reduce using rule 26 (factor -> FLOAT .)
    PUTS            reduce using rule 26 (factor -> FLOAT .)
    ID              reduce using rule 26 (factor -> FLOAT .)
    CONSTANT        reduce using rule 26 (factor -> FLOAT .)
    GLOBAL          reduce using rule 26 (factor -> FLOAT .)
    END             reduce using rule 26 (factor -> FLOAT .)
    DO              reduce using rule 26 (factor -> FLOAT .)


state 20

    (35) variables -> ID .

    EQUAL           reduce using rule 35 (variables -> ID .)
    PUNTO           reduce using rule 35 (variables -> ID .)
    PLUS            reduce using rule 35 (variables -> ID .)
    MINUS           reduce using rule 35 (variables -> ID .)
    TIMES           reduce using rule 35 (variables -> ID .)
    DIVIDE          reduce using rule 35 (variables -> ID .)
    MOD             reduce using rule 35 (variables -> ID .)
    MAYORQUE        reduce using rule 35 (variables -> ID .)
    MENORQUE        reduce using rule 35 (variables -> ID .)
    EQUALSX2        reduce using rule 35 (variables -> ID .)
    NOTEQUALS       reduce using rule 35 (variables -> ID .)
    $end            reduce using rule 35 (variables -> ID .)
    PUTS            reduce using rule 35 (variables -> ID .)
    ID              reduce using rule 35 (variables -> ID .)
    CONSTANT        reduce using rule 35 (variables -> ID .)
    GLOBAL          reduce using rule 35 (variables -> ID .)
    END             reduce using rule 35 (variables -> ID .)
    IN              reduce using rule 35 (variables -> ID .)
    DO              reduce using rule 35 (variables -> ID .)
    FLECHA          reduce using rule 35 (variables -> ID .)
    RPAREN          reduce using rule 35 (variables -> ID .)


state 21

    (36) variables -> CONSTANT .

    EQUAL           reduce using rule 36 (variables -> CONSTANT .)
    PUNTO           reduce using rule 36 (variables -> CONSTANT .)
    PLUS            reduce using rule 36 (variables -> CONSTANT .)
    MINUS           reduce using rule 36 (variables -> CONSTANT .)
    TIMES           reduce using rule 36 (variables -> CONSTANT .)
    DIVIDE          reduce using rule 36 (variables -> CONSTANT .)
    MOD             reduce using rule 36 (variables -> CONSTANT .)
    MAYORQUE        reduce using rule 36 (variables -> CONSTANT .)
    MENORQUE        reduce using rule 36 (variables -> CONSTANT .)
    EQUALSX2        reduce using rule 36 (variables -> CONSTANT .)
    NOTEQUALS       reduce using rule 36 (variables -> CONSTANT .)
    $end            reduce using rule 36 (variables -> CONSTANT .)
    PUTS            reduce using rule 36 (variables -> CONSTANT .)
    ID              reduce using rule 36 (variables -> CONSTANT .)
    CONSTANT        reduce using rule 36 (variables -> CONSTANT .)
    GLOBAL          reduce using rule 36 (variables -> CONSTANT .)
    END             reduce using rule 36 (variables -> CONSTANT .)
    IN              reduce using rule 36 (variables -> CONSTANT .)
    DO              reduce using rule 36 (variables -> CONSTANT .)
    FLECHA          reduce using rule 36 (variables -> CONSTANT .)
    RPAREN          reduce using rule 36 (variables -> CONSTANT .)


state 22

    (37) variables -> GLOBAL .

    EQUAL           reduce using rule 37 (variables -> GLOBAL .)
    PUNTO           reduce using rule 37 (variables -> GLOBAL .)
    PLUS            reduce using rule 37 (variables -> GLOBAL .)
    MINUS           reduce using rule 37 (variables -> GLOBAL .)
    TIMES           reduce using rule 37 (variables -> GLOBAL .)
    DIVIDE          reduce using rule 37 (variables -> GLOBAL .)
    MOD             reduce using rule 37 (variables -> GLOBAL .)
    MAYORQUE        reduce using rule 37 (variables -> GLOBAL .)
    MENORQUE        reduce using rule 37 (variables -> GLOBAL .)
    EQUALSX2        reduce using rule 37 (variables -> GLOBAL .)
    NOTEQUALS       reduce using rule 37 (variables -> GLOBAL .)
    $end            reduce using rule 37 (variables -> GLOBAL .)
    PUTS            reduce using rule 37 (variables -> GLOBAL .)
    ID              reduce using rule 37 (variables -> GLOBAL .)
    CONSTANT        reduce using rule 37 (variables -> GLOBAL .)
    GLOBAL          reduce using rule 37 (variables -> GLOBAL .)
    END             reduce using rule 37 (variables -> GLOBAL .)
    IN              reduce using rule 37 (variables -> GLOBAL .)
    DO              reduce using rule 37 (variables -> GLOBAL .)
    FLECHA          reduce using rule 37 (variables -> GLOBAL .)
    RPAREN          reduce using rule 37 (variables -> GLOBAL .)


state 23

    (100) funcionsHash -> hash_add .

    $end            reduce using rule 100 (funcionsHash -> hash_add .)
    PUTS            reduce using rule 100 (funcionsHash -> hash_add .)
    ID              reduce using rule 100 (funcionsHash -> hash_add .)
    CONSTANT        reduce using rule 100 (funcionsHash -> hash_add .)
    GLOBAL          reduce using rule 100 (funcionsHash -> hash_add .)
    END             reduce using rule 100 (funcionsHash -> hash_add .)


state 24

    (101) funcionsHash -> hash_delete .

    $end            reduce using rule 101 (funcionsHash -> hash_delete .)
    PUTS            reduce using rule 101 (funcionsHash -> hash_delete .)
    ID              reduce using rule 101 (funcionsHash -> hash_delete .)
    CONSTANT        reduce using rule 101 (funcionsHash -> hash_delete .)
    GLOBAL          reduce using rule 101 (funcionsHash -> hash_delete .)
    END             reduce using rule 101 (funcionsHash -> hash_delete .)


state 25

    (102) funcionsHash -> hash_key .

    $end            reduce using rule 102 (funcionsHash -> hash_key .)
    PUTS            reduce using rule 102 (funcionsHash -> hash_key .)
    ID              reduce using rule 102 (funcionsHash -> hash_key .)
    CONSTANT        reduce using rule 102 (funcionsHash -> hash_key .)
    GLOBAL          reduce using rule 102 (funcionsHash -> hash_key .)
    END             reduce using rule 102 (funcionsHash -> hash_key .)


state 26

    (13) expression -> factor operadoresMat . factor
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (13) expression -> . factor operadoresMat factor

    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    factor                         shift and go to state 51
    variables                      shift and go to state 36
    expression                     shift and go to state 37

state 27

    (19) operadoresMat -> PLUS .

    INT             reduce using rule 19 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 19 (operadoresMat -> PLUS .)
    ID              reduce using rule 19 (operadoresMat -> PLUS .)
    CONSTANT        reduce using rule 19 (operadoresMat -> PLUS .)
    GLOBAL          reduce using rule 19 (operadoresMat -> PLUS .)


state 28

    (20) operadoresMat -> MINUS .

    INT             reduce using rule 20 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 20 (operadoresMat -> MINUS .)
    ID              reduce using rule 20 (operadoresMat -> MINUS .)
    CONSTANT        reduce using rule 20 (operadoresMat -> MINUS .)
    GLOBAL          reduce using rule 20 (operadoresMat -> MINUS .)


state 29

    (21) operadoresMat -> TIMES .

    INT             reduce using rule 21 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 21 (operadoresMat -> TIMES .)
    ID              reduce using rule 21 (operadoresMat -> TIMES .)
    CONSTANT        reduce using rule 21 (operadoresMat -> TIMES .)
    GLOBAL          reduce using rule 21 (operadoresMat -> TIMES .)


state 30

    (22) operadoresMat -> DIVIDE .

    INT             reduce using rule 22 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 22 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 22 (operadoresMat -> DIVIDE .)
    CONSTANT        reduce using rule 22 (operadoresMat -> DIVIDE .)
    GLOBAL          reduce using rule 22 (operadoresMat -> DIVIDE .)


state 31

    (23) operadoresMat -> MOD .

    INT             reduce using rule 23 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 23 (operadoresMat -> MOD .)
    ID              reduce using rule 23 (operadoresMat -> MOD .)
    CONSTANT        reduce using rule 23 (operadoresMat -> MOD .)
    GLOBAL          reduce using rule 23 (operadoresMat -> MOD .)


state 32

    (8) impresion -> PUTS factor .
    (14) comparacion -> factor . operadoresComp factor
    (13) expression -> factor . operadoresMat factor
    (16) operadoresComp -> . MAYORQUE
    (17) operadoresComp -> . MENORQUE
    (18) operadoresComp -> . operadoresEquals
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD
    (33) operadoresEquals -> . EQUALSX2
    (34) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 8 (impresion -> PUTS factor .)
    PUTS            reduce using rule 8 (impresion -> PUTS factor .)
    ID              reduce using rule 8 (impresion -> PUTS factor .)
    CONSTANT        reduce using rule 8 (impresion -> PUTS factor .)
    GLOBAL          reduce using rule 8 (impresion -> PUTS factor .)
    END             reduce using rule 8 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    EQUALSX2        shift and go to state 56
    NOTEQUALS       shift and go to state 57

    operadoresComp                 shift and go to state 52
    operadoresMat                  shift and go to state 26
    operadoresEquals               shift and go to state 55

state 33

    (9) impresion -> PUTS comparacion .

    $end            reduce using rule 9 (impresion -> PUTS comparacion .)
    PUTS            reduce using rule 9 (impresion -> PUTS comparacion .)
    ID              reduce using rule 9 (impresion -> PUTS comparacion .)
    CONSTANT        reduce using rule 9 (impresion -> PUTS comparacion .)
    GLOBAL          reduce using rule 9 (impresion -> PUTS comparacion .)
    END             reduce using rule 9 (impresion -> PUTS comparacion .)


state 34

    (10) impresion -> PUTS comparacion_bool .

    $end            reduce using rule 10 (impresion -> PUTS comparacion_bool .)
    PUTS            reduce using rule 10 (impresion -> PUTS comparacion_bool .)
    ID              reduce using rule 10 (impresion -> PUTS comparacion_bool .)
    CONSTANT        reduce using rule 10 (impresion -> PUTS comparacion_bool .)
    GLOBAL          reduce using rule 10 (impresion -> PUTS comparacion_bool .)
    END             reduce using rule 10 (impresion -> PUTS comparacion_bool .)


state 35

    (11) impresion -> PUTS STRING .

    $end            reduce using rule 11 (impresion -> PUTS STRING .)
    PUTS            reduce using rule 11 (impresion -> PUTS STRING .)
    ID              reduce using rule 11 (impresion -> PUTS STRING .)
    CONSTANT        reduce using rule 11 (impresion -> PUTS STRING .)
    GLOBAL          reduce using rule 11 (impresion -> PUTS STRING .)
    END             reduce using rule 11 (impresion -> PUTS STRING .)


state 36

    (25) factor -> variables .

    MAYORQUE        reduce using rule 25 (factor -> variables .)
    MENORQUE        reduce using rule 25 (factor -> variables .)
    PLUS            reduce using rule 25 (factor -> variables .)
    MINUS           reduce using rule 25 (factor -> variables .)
    TIMES           reduce using rule 25 (factor -> variables .)
    DIVIDE          reduce using rule 25 (factor -> variables .)
    MOD             reduce using rule 25 (factor -> variables .)
    EQUALSX2        reduce using rule 25 (factor -> variables .)
    NOTEQUALS       reduce using rule 25 (factor -> variables .)
    $end            reduce using rule 25 (factor -> variables .)
    PUTS            reduce using rule 25 (factor -> variables .)
    ID              reduce using rule 25 (factor -> variables .)
    CONSTANT        reduce using rule 25 (factor -> variables .)
    GLOBAL          reduce using rule 25 (factor -> variables .)
    END             reduce using rule 25 (factor -> variables .)
    DO              reduce using rule 25 (factor -> variables .)


state 37

    (27) factor -> expression .

    MAYORQUE        reduce using rule 27 (factor -> expression .)
    MENORQUE        reduce using rule 27 (factor -> expression .)
    PLUS            reduce using rule 27 (factor -> expression .)
    MINUS           reduce using rule 27 (factor -> expression .)
    TIMES           reduce using rule 27 (factor -> expression .)
    DIVIDE          reduce using rule 27 (factor -> expression .)
    MOD             reduce using rule 27 (factor -> expression .)
    EQUALSX2        reduce using rule 27 (factor -> expression .)
    NOTEQUALS       reduce using rule 27 (factor -> expression .)
    $end            reduce using rule 27 (factor -> expression .)
    PUTS            reduce using rule 27 (factor -> expression .)
    ID              reduce using rule 27 (factor -> expression .)
    CONSTANT        reduce using rule 27 (factor -> expression .)
    GLOBAL          reduce using rule 27 (factor -> expression .)
    END             reduce using rule 27 (factor -> expression .)
    DO              reduce using rule 27 (factor -> expression .)


state 38

    (15) comparacion_bool -> booleanos . operadoresBool booleanos
    (30) operadoresBool -> . AND
    (31) operadoresBool -> . OR
    (32) operadoresBool -> . operadoresEquals
    (33) operadoresEquals -> . EQUALSX2
    (34) operadoresEquals -> . NOTEQUALS

    AND             shift and go to state 59
    OR              shift and go to state 60
    EQUALSX2        shift and go to state 56
    NOTEQUALS       shift and go to state 57

    operadoresBool                 shift and go to state 58
    operadoresEquals               shift and go to state 61

state 39

    (28) booleanos -> TRUE .

    AND             reduce using rule 28 (booleanos -> TRUE .)
    OR              reduce using rule 28 (booleanos -> TRUE .)
    EQUALSX2        reduce using rule 28 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 28 (booleanos -> TRUE .)
    DO              reduce using rule 28 (booleanos -> TRUE .)
    $end            reduce using rule 28 (booleanos -> TRUE .)
    PUTS            reduce using rule 28 (booleanos -> TRUE .)
    ID              reduce using rule 28 (booleanos -> TRUE .)
    CONSTANT        reduce using rule 28 (booleanos -> TRUE .)
    GLOBAL          reduce using rule 28 (booleanos -> TRUE .)
    END             reduce using rule 28 (booleanos -> TRUE .)
    COMMA           reduce using rule 28 (booleanos -> TRUE .)
    RCOR            reduce using rule 28 (booleanos -> TRUE .)
    RPAREN          reduce using rule 28 (booleanos -> TRUE .)
    RBRACE          reduce using rule 28 (booleanos -> TRUE .)


state 40

    (29) booleanos -> FALSE .

    AND             reduce using rule 29 (booleanos -> FALSE .)
    OR              reduce using rule 29 (booleanos -> FALSE .)
    EQUALSX2        reduce using rule 29 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 29 (booleanos -> FALSE .)
    DO              reduce using rule 29 (booleanos -> FALSE .)
    $end            reduce using rule 29 (booleanos -> FALSE .)
    PUTS            reduce using rule 29 (booleanos -> FALSE .)
    ID              reduce using rule 29 (booleanos -> FALSE .)
    CONSTANT        reduce using rule 29 (booleanos -> FALSE .)
    GLOBAL          reduce using rule 29 (booleanos -> FALSE .)
    END             reduce using rule 29 (booleanos -> FALSE .)
    COMMA           reduce using rule 29 (booleanos -> FALSE .)
    RCOR            reduce using rule 29 (booleanos -> FALSE .)
    RPAREN          reduce using rule 29 (booleanos -> FALSE .)
    RBRACE          reduce using rule 29 (booleanos -> FALSE .)


state 41

    (38) asignacion -> variables EQUAL . factor
    (39) asignacion -> variables EQUAL . STRING
    (40) asignacion -> variables EQUAL . booleanos
    (41) asignacion -> variables EQUAL . comparacion_bool
    (42) asignacion -> variables EQUAL . struct
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE
    (15) comparacion_bool -> . booleanos operadoresBool booleanos
    (43) struct -> . conjunto
    (44) struct -> . formacion
    (45) struct -> . hash
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (13) expression -> . factor operadoresMat factor
    (46) conjunto -> . SET arr
    (47) conjunto -> . SET LCOR RCOR
    (75) formacion -> . LCOR repetirvalor RCOR
    (76) formacion -> . LCOR RCOR
    (77) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (78) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (84) hash -> . LBRACE hash_content RBRACE

    STRING          shift and go to state 63
    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22
    SET             shift and go to state 70
    LCOR            shift and go to state 71
    ARRAY           shift and go to state 72
    LBRACE          shift and go to state 73

    variables                      shift and go to state 36
    factor                         shift and go to state 62
    booleanos                      shift and go to state 64
    comparacion_bool               shift and go to state 65
    struct                         shift and go to state 66
    expression                     shift and go to state 37
    conjunto                       shift and go to state 67
    formacion                      shift and go to state 68
    hash                           shift and go to state 69

state 42

    (59) funcionsconjunto -> variables PUNTO . ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> variables PUNTO . ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> variables PUNTO . MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> variables PUNTO . SIZE LPAREN RPAREN
    (63) funcionsconjunto -> variables PUNTO . SIZE
    (79) funcionsformacion -> variables PUNTO . LENGTH LPAREN RPAREN
    (80) funcionsformacion -> variables PUNTO . PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> variables PUNTO . SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> variables PUNTO . FIRST
    (83) funcionsformacion -> variables PUNTO . FIRST LPAREN RPAREN
    (97) hash_add -> variables PUNTO . STORE LPAREN hash_element RPAREN
    (98) hash_delete -> variables PUNTO . LPAREN clave RPAREN
    (99) hash_key -> variables PUNTO . KEY LPAREN value RPAREN

    ADD             shift and go to state 74
    MERGE           shift and go to state 76
    SIZE            shift and go to state 77
    LENGTH          shift and go to state 78
    PUSH            shift and go to state 79
    SAMPLE          shift and go to state 80
    FIRST           shift and go to state 81
    STORE           shift and go to state 82
    LPAREN          shift and go to state 75
    KEY             shift and go to state 83


state 43

    (12) leer -> GETS PUNTO . CHOMP

    CHOMP           shift and go to state 84


state 44

    (69) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    IN              shift and go to state 85


state 45

    (74) sentenciawhile -> WHILE condicion . DO repetircontenido END

    DO              shift and go to state 86


state 46

    (70) condicion -> comparacion .

    DO              reduce using rule 70 (condicion -> comparacion .)


state 47

    (71) condicion -> comparacion_bool .

    DO              reduce using rule 71 (condicion -> comparacion_bool .)


state 48

    (72) condicion -> booleanos .
    (15) comparacion_bool -> booleanos . operadoresBool booleanos
    (30) operadoresBool -> . AND
    (31) operadoresBool -> . OR
    (32) operadoresBool -> . operadoresEquals
    (33) operadoresEquals -> . EQUALSX2
    (34) operadoresEquals -> . NOTEQUALS

    DO              reduce using rule 72 (condicion -> booleanos .)
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQUALSX2        shift and go to state 56
    NOTEQUALS       shift and go to state 57

    operadoresBool                 shift and go to state 58
    operadoresEquals               shift and go to state 61

state 49

    (73) condicion -> ARRAY . PUNTO NEW LPAREN arr RPAREN

    PUNTO           shift and go to state 87


state 50

    (14) comparacion -> factor . operadoresComp factor
    (13) expression -> factor . operadoresMat factor
    (16) operadoresComp -> . MAYORQUE
    (17) operadoresComp -> . MENORQUE
    (18) operadoresComp -> . operadoresEquals
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD
    (33) operadoresEquals -> . EQUALSX2
    (34) operadoresEquals -> . NOTEQUALS

    MAYORQUE        shift and go to state 53
    MENORQUE        shift and go to state 54
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    EQUALSX2        shift and go to state 56
    NOTEQUALS       shift and go to state 57

    operadoresComp                 shift and go to state 52
    operadoresMat                  shift and go to state 26
    operadoresEquals               shift and go to state 55

state 51

    (13) expression -> factor operadoresMat factor .
    (13) expression -> factor . operadoresMat factor
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    $end            reduce using rule 13 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 13 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 13 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 13 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 13 (expression -> factor operadoresMat factor .)
    PUTS            reduce using rule 13 (expression -> factor operadoresMat factor .)
    ID              reduce using rule 13 (expression -> factor operadoresMat factor .)
    CONSTANT        reduce using rule 13 (expression -> factor operadoresMat factor .)
    GLOBAL          reduce using rule 13 (expression -> factor operadoresMat factor .)
    END             reduce using rule 13 (expression -> factor operadoresMat factor .)
    DO              reduce using rule 13 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31

  ! PLUS            [ reduce using rule 13 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 13 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 13 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 13 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 26

state 52

    (14) comparacion -> factor operadoresComp . factor
    (24) factor -> . INT
    (25) factor -> . variables
    (26) factor -> . FLOAT
    (27) factor -> . expression
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (13) expression -> . factor operadoresMat factor

    INT             shift and go to state 17
    FLOAT           shift and go to state 19
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    factor                         shift and go to state 88
    variables                      shift and go to state 36
    expression                     shift and go to state 37

state 53

    (16) operadoresComp -> MAYORQUE .

    INT             reduce using rule 16 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 16 (operadoresComp -> MAYORQUE .)
    ID              reduce using rule 16 (operadoresComp -> MAYORQUE .)
    CONSTANT        reduce using rule 16 (operadoresComp -> MAYORQUE .)
    GLOBAL          reduce using rule 16 (operadoresComp -> MAYORQUE .)


state 54

    (17) operadoresComp -> MENORQUE .

    INT             reduce using rule 17 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 17 (operadoresComp -> MENORQUE .)
    ID              reduce using rule 17 (operadoresComp -> MENORQUE .)
    CONSTANT        reduce using rule 17 (operadoresComp -> MENORQUE .)
    GLOBAL          reduce using rule 17 (operadoresComp -> MENORQUE .)


state 55

    (18) operadoresComp -> operadoresEquals .

    INT             reduce using rule 18 (operadoresComp -> operadoresEquals .)
    FLOAT           reduce using rule 18 (operadoresComp -> operadoresEquals .)
    ID              reduce using rule 18 (operadoresComp -> operadoresEquals .)
    CONSTANT        reduce using rule 18 (operadoresComp -> operadoresEquals .)
    GLOBAL          reduce using rule 18 (operadoresComp -> operadoresEquals .)


state 56

    (33) operadoresEquals -> EQUALSX2 .

    INT             reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    ID              reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    CONSTANT        reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    GLOBAL          reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    TRUE            reduce using rule 33 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 33 (operadoresEquals -> EQUALSX2 .)


state 57

    (34) operadoresEquals -> NOTEQUALS .

    INT             reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    ID              reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    CONSTANT        reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    GLOBAL          reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    TRUE            reduce using rule 34 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 34 (operadoresEquals -> NOTEQUALS .)


state 58

    (15) comparacion_bool -> booleanos operadoresBool . booleanos
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    booleanos                      shift and go to state 89

state 59

    (30) operadoresBool -> AND .

    TRUE            reduce using rule 30 (operadoresBool -> AND .)
    FALSE           reduce using rule 30 (operadoresBool -> AND .)


state 60

    (31) operadoresBool -> OR .

    TRUE            reduce using rule 31 (operadoresBool -> OR .)
    FALSE           reduce using rule 31 (operadoresBool -> OR .)


state 61

    (32) operadoresBool -> operadoresEquals .

    TRUE            reduce using rule 32 (operadoresBool -> operadoresEquals .)
    FALSE           reduce using rule 32 (operadoresBool -> operadoresEquals .)


state 62

    (38) asignacion -> variables EQUAL factor .
    (13) expression -> factor . operadoresMat factor
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD

    $end            reduce using rule 38 (asignacion -> variables EQUAL factor .)
    PUTS            reduce using rule 38 (asignacion -> variables EQUAL factor .)
    ID              reduce using rule 38 (asignacion -> variables EQUAL factor .)
    CONSTANT        reduce using rule 38 (asignacion -> variables EQUAL factor .)
    GLOBAL          reduce using rule 38 (asignacion -> variables EQUAL factor .)
    END             reduce using rule 38 (asignacion -> variables EQUAL factor .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31

    operadoresMat                  shift and go to state 26

state 63

    (39) asignacion -> variables EQUAL STRING .

    $end            reduce using rule 39 (asignacion -> variables EQUAL STRING .)
    PUTS            reduce using rule 39 (asignacion -> variables EQUAL STRING .)
    ID              reduce using rule 39 (asignacion -> variables EQUAL STRING .)
    CONSTANT        reduce using rule 39 (asignacion -> variables EQUAL STRING .)
    GLOBAL          reduce using rule 39 (asignacion -> variables EQUAL STRING .)
    END             reduce using rule 39 (asignacion -> variables EQUAL STRING .)


state 64

    (40) asignacion -> variables EQUAL booleanos .
    (15) comparacion_bool -> booleanos . operadoresBool booleanos
    (30) operadoresBool -> . AND
    (31) operadoresBool -> . OR
    (32) operadoresBool -> . operadoresEquals
    (33) operadoresEquals -> . EQUALSX2
    (34) operadoresEquals -> . NOTEQUALS

    $end            reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    PUTS            reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    ID              reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    CONSTANT        reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    GLOBAL          reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    END             reduce using rule 40 (asignacion -> variables EQUAL booleanos .)
    AND             shift and go to state 59
    OR              shift and go to state 60
    EQUALSX2        shift and go to state 56
    NOTEQUALS       shift and go to state 57

    operadoresBool                 shift and go to state 58
    operadoresEquals               shift and go to state 61

state 65

    (41) asignacion -> variables EQUAL comparacion_bool .

    $end            reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)
    PUTS            reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)
    ID              reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)
    CONSTANT        reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)
    GLOBAL          reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)
    END             reduce using rule 41 (asignacion -> variables EQUAL comparacion_bool .)


state 66

    (42) asignacion -> variables EQUAL struct .

    $end            reduce using rule 42 (asignacion -> variables EQUAL struct .)
    PUTS            reduce using rule 42 (asignacion -> variables EQUAL struct .)
    ID              reduce using rule 42 (asignacion -> variables EQUAL struct .)
    CONSTANT        reduce using rule 42 (asignacion -> variables EQUAL struct .)
    GLOBAL          reduce using rule 42 (asignacion -> variables EQUAL struct .)
    END             reduce using rule 42 (asignacion -> variables EQUAL struct .)


state 67

    (43) struct -> conjunto .

    $end            reduce using rule 43 (struct -> conjunto .)
    PUTS            reduce using rule 43 (struct -> conjunto .)
    ID              reduce using rule 43 (struct -> conjunto .)
    CONSTANT        reduce using rule 43 (struct -> conjunto .)
    GLOBAL          reduce using rule 43 (struct -> conjunto .)
    END             reduce using rule 43 (struct -> conjunto .)
    RPAREN          reduce using rule 43 (struct -> conjunto .)
    COMMA           reduce using rule 43 (struct -> conjunto .)
    RBRACE          reduce using rule 43 (struct -> conjunto .)


state 68

    (44) struct -> formacion .

    $end            reduce using rule 44 (struct -> formacion .)
    PUTS            reduce using rule 44 (struct -> formacion .)
    ID              reduce using rule 44 (struct -> formacion .)
    CONSTANT        reduce using rule 44 (struct -> formacion .)
    GLOBAL          reduce using rule 44 (struct -> formacion .)
    END             reduce using rule 44 (struct -> formacion .)
    RPAREN          reduce using rule 44 (struct -> formacion .)
    COMMA           reduce using rule 44 (struct -> formacion .)
    RBRACE          reduce using rule 44 (struct -> formacion .)


state 69

    (45) struct -> hash .

    $end            reduce using rule 45 (struct -> hash .)
    PUTS            reduce using rule 45 (struct -> hash .)
    ID              reduce using rule 45 (struct -> hash .)
    CONSTANT        reduce using rule 45 (struct -> hash .)
    GLOBAL          reduce using rule 45 (struct -> hash .)
    END             reduce using rule 45 (struct -> hash .)
    RPAREN          reduce using rule 45 (struct -> hash .)
    COMMA           reduce using rule 45 (struct -> hash .)
    RBRACE          reduce using rule 45 (struct -> hash .)


state 70

    (46) conjunto -> SET . arr
    (47) conjunto -> SET . LCOR RCOR
    (55) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 91

    arr                            shift and go to state 90

state 71

    (75) formacion -> LCOR . repetirvalor RCOR
    (76) formacion -> LCOR . RCOR
    (53) repetirvalor -> . valor
    (54) repetirvalor -> . valor COMMA repetirvalor
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    RCOR            shift and go to state 93
    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    repetirvalor                   shift and go to state 92
    valor                          shift and go to state 94
    booleanos                      shift and go to state 98

state 72

    (77) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (78) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 100


state 73

    (84) hash -> LBRACE . hash_content RBRACE
    (86) hash_content -> . hash_element
    (87) hash_content -> . hash_elements
    (88) hash_element -> . clave FLECHA value
    (85) hash_elements -> . hash_element hash_more_elements
    (91) clave -> . variables
    (92) clave -> . STRING
    (93) clave -> . INT
    (94) clave -> . FLOAT
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    STRING          shift and go to state 106
    INT             shift and go to state 107
    FLOAT           shift and go to state 108
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    hash_content                   shift and go to state 101
    hash_element                   shift and go to state 102
    hash_elements                  shift and go to state 103
    clave                          shift and go to state 104
    variables                      shift and go to state 105

state 74

    (59) funcionsconjunto -> variables PUNTO ADD . LPAREN valor RPAREN
    (60) funcionsconjunto -> variables PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 109


state 75

    (98) hash_delete -> variables PUNTO LPAREN . clave RPAREN
    (91) clave -> . variables
    (92) clave -> . STRING
    (93) clave -> . INT
    (94) clave -> . FLOAT
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    STRING          shift and go to state 106
    INT             shift and go to state 107
    FLOAT           shift and go to state 108
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 105
    clave                          shift and go to state 110

state 76

    (61) funcionsconjunto -> variables PUNTO MERGE . LPAREN variables RPAREN

    LPAREN          shift and go to state 111


state 77

    (62) funcionsconjunto -> variables PUNTO SIZE . LPAREN RPAREN
    (63) funcionsconjunto -> variables PUNTO SIZE .

    LPAREN          shift and go to state 112
    $end            reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)
    PUTS            reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)
    ID              reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)
    CONSTANT        reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)
    GLOBAL          reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)
    END             reduce using rule 63 (funcionsconjunto -> variables PUNTO SIZE .)


state 78

    (79) funcionsformacion -> variables PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 113


state 79

    (80) funcionsformacion -> variables PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 114


state 80

    (81) funcionsformacion -> variables PUNTO SAMPLE . LPAREN variables RPAREN

    LPAREN          shift and go to state 115


state 81

    (82) funcionsformacion -> variables PUNTO FIRST .
    (83) funcionsformacion -> variables PUNTO FIRST . LPAREN RPAREN

    $end            reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    PUTS            reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    ID              reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    CONSTANT        reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    GLOBAL          reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    END             reduce using rule 82 (funcionsformacion -> variables PUNTO FIRST .)
    LPAREN          shift and go to state 116


state 82

    (97) hash_add -> variables PUNTO STORE . LPAREN hash_element RPAREN

    LPAREN          shift and go to state 117


state 83

    (99) hash_key -> variables PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 118


state 84

    (12) leer -> GETS PUNTO CHOMP .

    $end            reduce using rule 12 (leer -> GETS PUNTO CHOMP .)


state 85

    (69) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END

    LPAREN          shift and go to state 119


state 86

    (74) sentenciawhile -> WHILE condicion DO . repetircontenido END
    (67) repetircontenido -> . contenido
    (68) repetircontenido -> . contenido repetircontenido
    (64) contenido -> . impresion
    (65) contenido -> . asignacion
    (66) contenido -> . funcionstruct
    (8) impresion -> . PUTS factor
    (9) impresion -> . PUTS comparacion
    (10) impresion -> . PUTS comparacion_bool
    (11) impresion -> . PUTS STRING
    (38) asignacion -> . variables EQUAL factor
    (39) asignacion -> . variables EQUAL STRING
    (40) asignacion -> . variables EQUAL booleanos
    (41) asignacion -> . variables EQUAL comparacion_bool
    (42) asignacion -> . variables EQUAL struct
    (56) funcionstruct -> . funcionsconjunto
    (57) funcionstruct -> . funcionsformacion
    (58) funcionstruct -> . funcionsHash
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (59) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE
    (79) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> . variables PUNTO FIRST
    (83) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (100) funcionsHash -> . hash_add
    (101) funcionsHash -> . hash_delete
    (102) funcionsHash -> . hash_key
    (97) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (99) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 10
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    repetircontenido               shift and go to state 120
    contenido                      shift and go to state 121
    impresion                      shift and go to state 122
    asignacion                     shift and go to state 123
    funcionstruct                  shift and go to state 124
    variables                      shift and go to state 125
    funcionsconjunto               shift and go to state 13
    funcionsformacion              shift and go to state 14
    funcionsHash                   shift and go to state 15
    hash_add                       shift and go to state 23
    hash_delete                    shift and go to state 24
    hash_key                       shift and go to state 25

state 87

    (73) condicion -> ARRAY PUNTO . NEW LPAREN arr RPAREN

    NEW             shift and go to state 126


state 88

    (14) comparacion -> factor operadoresComp factor .
    (13) expression -> factor . operadoresMat factor
    (19) operadoresMat -> . PLUS
    (20) operadoresMat -> . MINUS
    (21) operadoresMat -> . TIMES
    (22) operadoresMat -> . DIVIDE
    (23) operadoresMat -> . MOD

    $end            reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    PUTS            reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    ID              reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    CONSTANT        reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    GLOBAL          reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    END             reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    DO              reduce using rule 14 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31

    operadoresMat                  shift and go to state 26

state 89

    (15) comparacion_bool -> booleanos operadoresBool booleanos .

    $end            reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    PUTS            reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    ID              reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    CONSTANT        reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    GLOBAL          reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    END             reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)
    DO              reduce using rule 15 (comparacion_bool -> booleanos operadoresBool booleanos .)


state 90

    (46) conjunto -> SET arr .

    $end            reduce using rule 46 (conjunto -> SET arr .)
    PUTS            reduce using rule 46 (conjunto -> SET arr .)
    ID              reduce using rule 46 (conjunto -> SET arr .)
    CONSTANT        reduce using rule 46 (conjunto -> SET arr .)
    GLOBAL          reduce using rule 46 (conjunto -> SET arr .)
    END             reduce using rule 46 (conjunto -> SET arr .)
    RPAREN          reduce using rule 46 (conjunto -> SET arr .)
    COMMA           reduce using rule 46 (conjunto -> SET arr .)
    RBRACE          reduce using rule 46 (conjunto -> SET arr .)


state 91

    (47) conjunto -> SET LCOR . RCOR
    (55) arr -> LCOR . repetirvalor RCOR
    (53) repetirvalor -> . valor
    (54) repetirvalor -> . valor COMMA repetirvalor
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    RCOR            shift and go to state 127
    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    repetirvalor                   shift and go to state 128
    valor                          shift and go to state 94
    booleanos                      shift and go to state 98

state 92

    (75) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 129


state 93

    (76) formacion -> LCOR RCOR .

    $end            reduce using rule 76 (formacion -> LCOR RCOR .)
    PUTS            reduce using rule 76 (formacion -> LCOR RCOR .)
    ID              reduce using rule 76 (formacion -> LCOR RCOR .)
    CONSTANT        reduce using rule 76 (formacion -> LCOR RCOR .)
    GLOBAL          reduce using rule 76 (formacion -> LCOR RCOR .)
    END             reduce using rule 76 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 76 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 76 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 76 (formacion -> LCOR RCOR .)


state 94

    (53) repetirvalor -> valor .
    (54) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 53 (repetirvalor -> valor .)
    RPAREN          reduce using rule 53 (repetirvalor -> valor .)
    COMMA           shift and go to state 130


state 95

    (48) valor -> INT .

    COMMA           reduce using rule 48 (valor -> INT .)
    RCOR            reduce using rule 48 (valor -> INT .)
    RPAREN          reduce using rule 48 (valor -> INT .)
    RBRACE          reduce using rule 48 (valor -> INT .)


state 96

    (49) valor -> ID .

    COMMA           reduce using rule 49 (valor -> ID .)
    RCOR            reduce using rule 49 (valor -> ID .)
    RPAREN          reduce using rule 49 (valor -> ID .)
    RBRACE          reduce using rule 49 (valor -> ID .)


state 97

    (50) valor -> STRING .

    COMMA           reduce using rule 50 (valor -> STRING .)
    RCOR            reduce using rule 50 (valor -> STRING .)
    RPAREN          reduce using rule 50 (valor -> STRING .)
    RBRACE          reduce using rule 50 (valor -> STRING .)


state 98

    (51) valor -> booleanos .

    COMMA           reduce using rule 51 (valor -> booleanos .)
    RCOR            reduce using rule 51 (valor -> booleanos .)
    RPAREN          reduce using rule 51 (valor -> booleanos .)
    RBRACE          reduce using rule 51 (valor -> booleanos .)


state 99

    (52) valor -> FLOAT .

    COMMA           reduce using rule 52 (valor -> FLOAT .)
    RCOR            reduce using rule 52 (valor -> FLOAT .)
    RPAREN          reduce using rule 52 (valor -> FLOAT .)
    RBRACE          reduce using rule 52 (valor -> FLOAT .)


state 100

    (77) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (78) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 131


state 101

    (84) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 132


state 102

    (86) hash_content -> hash_element .
    (85) hash_elements -> hash_element . hash_more_elements
    (89) hash_more_elements -> . COMMA hash_element
    (90) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 86 (hash_content -> hash_element .)
    COMMA           shift and go to state 134

    hash_more_elements             shift and go to state 133

state 103

    (87) hash_content -> hash_elements .

    RBRACE          reduce using rule 87 (hash_content -> hash_elements .)


state 104

    (88) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 135


state 105

    (91) clave -> variables .

    FLECHA          reduce using rule 91 (clave -> variables .)
    RPAREN          reduce using rule 91 (clave -> variables .)


state 106

    (92) clave -> STRING .

    FLECHA          reduce using rule 92 (clave -> STRING .)
    RPAREN          reduce using rule 92 (clave -> STRING .)


state 107

    (93) clave -> INT .

    FLECHA          reduce using rule 93 (clave -> INT .)
    RPAREN          reduce using rule 93 (clave -> INT .)


state 108

    (94) clave -> FLOAT .

    FLECHA          reduce using rule 94 (clave -> FLOAT .)
    RPAREN          reduce using rule 94 (clave -> FLOAT .)


state 109

    (59) funcionsconjunto -> variables PUNTO ADD LPAREN . valor RPAREN
    (60) funcionsconjunto -> variables PUNTO ADD LPAREN . arr RPAREN
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (55) arr -> . LCOR repetirvalor RCOR
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    LCOR            shift and go to state 138
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    valor                          shift and go to state 136
    arr                            shift and go to state 137
    booleanos                      shift and go to state 98

state 110

    (98) hash_delete -> variables PUNTO LPAREN clave . RPAREN

    RPAREN          shift and go to state 139


state 111

    (61) funcionsconjunto -> variables PUNTO MERGE LPAREN . variables RPAREN
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 140

state 112

    (62) funcionsconjunto -> variables PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 141


state 113

    (79) funcionsformacion -> variables PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 142


state 114

    (80) funcionsformacion -> variables PUNTO PUSH LPAREN . repetirvalor RPAREN
    (53) repetirvalor -> . valor
    (54) repetirvalor -> . valor COMMA repetirvalor
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    repetirvalor                   shift and go to state 143
    valor                          shift and go to state 94
    booleanos                      shift and go to state 98

state 115

    (81) funcionsformacion -> variables PUNTO SAMPLE LPAREN . variables RPAREN
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 144

state 116

    (83) funcionsformacion -> variables PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 145


state 117

    (97) hash_add -> variables PUNTO STORE LPAREN . hash_element RPAREN
    (88) hash_element -> . clave FLECHA value
    (91) clave -> . variables
    (92) clave -> . STRING
    (93) clave -> . INT
    (94) clave -> . FLOAT
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    STRING          shift and go to state 106
    INT             shift and go to state 107
    FLOAT           shift and go to state 108
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 105
    hash_element                   shift and go to state 146
    clave                          shift and go to state 104

state 118

    (99) hash_key -> variables PUNTO KEY LPAREN . value RPAREN
    (95) value -> . valor
    (96) value -> . struct
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (43) struct -> . conjunto
    (44) struct -> . formacion
    (45) struct -> . hash
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE
    (46) conjunto -> . SET arr
    (47) conjunto -> . SET LCOR RCOR
    (75) formacion -> . LCOR repetirvalor RCOR
    (76) formacion -> . LCOR RCOR
    (77) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (78) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (84) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SET             shift and go to state 70
    LCOR            shift and go to state 71
    ARRAY           shift and go to state 72
    LBRACE          shift and go to state 73

    value                          shift and go to state 147
    valor                          shift and go to state 148
    struct                         shift and go to state 149
    booleanos                      shift and go to state 98
    conjunto                       shift and go to state 67
    formacion                      shift and go to state 68
    hash                           shift and go to state 69

state 119

    (69) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN repetircontenido END

    INT             shift and go to state 150


state 120

    (74) sentenciawhile -> WHILE condicion DO repetircontenido . END

    END             shift and go to state 151


state 121

    (67) repetircontenido -> contenido .
    (68) repetircontenido -> contenido . repetircontenido
    (67) repetircontenido -> . contenido
    (68) repetircontenido -> . contenido repetircontenido
    (64) contenido -> . impresion
    (65) contenido -> . asignacion
    (66) contenido -> . funcionstruct
    (8) impresion -> . PUTS factor
    (9) impresion -> . PUTS comparacion
    (10) impresion -> . PUTS comparacion_bool
    (11) impresion -> . PUTS STRING
    (38) asignacion -> . variables EQUAL factor
    (39) asignacion -> . variables EQUAL STRING
    (40) asignacion -> . variables EQUAL booleanos
    (41) asignacion -> . variables EQUAL comparacion_bool
    (42) asignacion -> . variables EQUAL struct
    (56) funcionstruct -> . funcionsconjunto
    (57) funcionstruct -> . funcionsformacion
    (58) funcionstruct -> . funcionsHash
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (59) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE
    (79) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> . variables PUNTO FIRST
    (83) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (100) funcionsHash -> . hash_add
    (101) funcionsHash -> . hash_delete
    (102) funcionsHash -> . hash_key
    (97) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (99) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    END             reduce using rule 67 (repetircontenido -> contenido .)
    PUTS            shift and go to state 10
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    contenido                      shift and go to state 121
    repetircontenido               shift and go to state 152
    impresion                      shift and go to state 122
    asignacion                     shift and go to state 123
    funcionstruct                  shift and go to state 124
    variables                      shift and go to state 125
    funcionsconjunto               shift and go to state 13
    funcionsformacion              shift and go to state 14
    funcionsHash                   shift and go to state 15
    hash_add                       shift and go to state 23
    hash_delete                    shift and go to state 24
    hash_key                       shift and go to state 25

state 122

    (64) contenido -> impresion .

    PUTS            reduce using rule 64 (contenido -> impresion .)
    ID              reduce using rule 64 (contenido -> impresion .)
    CONSTANT        reduce using rule 64 (contenido -> impresion .)
    GLOBAL          reduce using rule 64 (contenido -> impresion .)
    END             reduce using rule 64 (contenido -> impresion .)


state 123

    (65) contenido -> asignacion .

    PUTS            reduce using rule 65 (contenido -> asignacion .)
    ID              reduce using rule 65 (contenido -> asignacion .)
    CONSTANT        reduce using rule 65 (contenido -> asignacion .)
    GLOBAL          reduce using rule 65 (contenido -> asignacion .)
    END             reduce using rule 65 (contenido -> asignacion .)


state 124

    (66) contenido -> funcionstruct .

    PUTS            reduce using rule 66 (contenido -> funcionstruct .)
    ID              reduce using rule 66 (contenido -> funcionstruct .)
    CONSTANT        reduce using rule 66 (contenido -> funcionstruct .)
    GLOBAL          reduce using rule 66 (contenido -> funcionstruct .)
    END             reduce using rule 66 (contenido -> funcionstruct .)


state 125

    (38) asignacion -> variables . EQUAL factor
    (39) asignacion -> variables . EQUAL STRING
    (40) asignacion -> variables . EQUAL booleanos
    (41) asignacion -> variables . EQUAL comparacion_bool
    (42) asignacion -> variables . EQUAL struct
    (59) funcionsconjunto -> variables . PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> variables . PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> variables . PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> variables . PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> variables . PUNTO SIZE
    (79) funcionsformacion -> variables . PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> variables . PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> variables . PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> variables . PUNTO FIRST
    (83) funcionsformacion -> variables . PUNTO FIRST LPAREN RPAREN
    (97) hash_add -> variables . PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> variables . PUNTO LPAREN clave RPAREN
    (99) hash_key -> variables . PUNTO KEY LPAREN value RPAREN

    EQUAL           shift and go to state 41
    PUNTO           shift and go to state 42


state 126

    (73) condicion -> ARRAY PUNTO NEW . LPAREN arr RPAREN

    LPAREN          shift and go to state 153


state 127

    (47) conjunto -> SET LCOR RCOR .

    $end            reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    PUTS            reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    ID              reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    CONSTANT        reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    GLOBAL          reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    END             reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 47 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 47 (conjunto -> SET LCOR RCOR .)


state 128

    (55) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 154


state 129

    (75) formacion -> LCOR repetirvalor RCOR .

    $end            reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    END             reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 75 (formacion -> LCOR repetirvalor RCOR .)


state 130

    (54) repetirvalor -> valor COMMA . repetirvalor
    (53) repetirvalor -> . valor
    (54) repetirvalor -> . valor COMMA repetirvalor
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    valor                          shift and go to state 94
    repetirvalor                   shift and go to state 155
    booleanos                      shift and go to state 98

state 131

    (77) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (78) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 156


state 132

    (84) hash -> LBRACE hash_content RBRACE .

    $end            reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    ID              reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    CONSTANT        reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    GLOBAL          reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    END             reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 84 (hash -> LBRACE hash_content RBRACE .)


state 133

    (85) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 85 (hash_elements -> hash_element hash_more_elements .)


state 134

    (89) hash_more_elements -> COMMA . hash_element
    (90) hash_more_elements -> COMMA . hash_element hash_more_elements
    (88) hash_element -> . clave FLECHA value
    (91) clave -> . variables
    (92) clave -> . STRING
    (93) clave -> . INT
    (94) clave -> . FLOAT
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL

    STRING          shift and go to state 106
    INT             shift and go to state 107
    FLOAT           shift and go to state 108
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    hash_element                   shift and go to state 157
    clave                          shift and go to state 104
    variables                      shift and go to state 105

state 135

    (88) hash_element -> clave FLECHA . value
    (95) value -> . valor
    (96) value -> . struct
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (43) struct -> . conjunto
    (44) struct -> . formacion
    (45) struct -> . hash
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE
    (46) conjunto -> . SET arr
    (47) conjunto -> . SET LCOR RCOR
    (75) formacion -> . LCOR repetirvalor RCOR
    (76) formacion -> . LCOR RCOR
    (77) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (78) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (84) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SET             shift and go to state 70
    LCOR            shift and go to state 71
    ARRAY           shift and go to state 72
    LBRACE          shift and go to state 73

    value                          shift and go to state 158
    valor                          shift and go to state 148
    struct                         shift and go to state 149
    booleanos                      shift and go to state 98
    conjunto                       shift and go to state 67
    formacion                      shift and go to state 68
    hash                           shift and go to state 69

state 136

    (59) funcionsconjunto -> variables PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 159


state 137

    (60) funcionsconjunto -> variables PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 160


state 138

    (55) arr -> LCOR . repetirvalor RCOR
    (53) repetirvalor -> . valor
    (54) repetirvalor -> . valor COMMA repetirvalor
    (48) valor -> . INT
    (49) valor -> . ID
    (50) valor -> . STRING
    (51) valor -> . booleanos
    (52) valor -> . FLOAT
    (28) booleanos -> . TRUE
    (29) booleanos -> . FALSE

    INT             shift and go to state 95
    ID              shift and go to state 96
    STRING          shift and go to state 97
    FLOAT           shift and go to state 99
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    repetirvalor                   shift and go to state 128
    valor                          shift and go to state 94
    booleanos                      shift and go to state 98

state 139

    (98) hash_delete -> variables PUNTO LPAREN clave RPAREN .

    $end            reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    PUTS            reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    ID              reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    CONSTANT        reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    GLOBAL          reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)
    END             reduce using rule 98 (hash_delete -> variables PUNTO LPAREN clave RPAREN .)


state 140

    (61) funcionsconjunto -> variables PUNTO MERGE LPAREN variables . RPAREN

    RPAREN          shift and go to state 161


state 141

    (62) funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .

    $end            reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    PUTS            reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    ID              reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    CONSTANT        reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    GLOBAL          reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)
    END             reduce using rule 62 (funcionsconjunto -> variables PUNTO SIZE LPAREN RPAREN .)


state 142

    (79) funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .

    $end            reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    PUTS            reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    ID              reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    CONSTANT        reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    GLOBAL          reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)
    END             reduce using rule 79 (funcionsformacion -> variables PUNTO LENGTH LPAREN RPAREN .)


state 143

    (80) funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 162


state 144

    (81) funcionsformacion -> variables PUNTO SAMPLE LPAREN variables . RPAREN

    RPAREN          shift and go to state 163


state 145

    (83) funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .

    $end            reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    PUTS            reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    ID              reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    CONSTANT        reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    GLOBAL          reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)
    END             reduce using rule 83 (funcionsformacion -> variables PUNTO FIRST LPAREN RPAREN .)


state 146

    (97) hash_add -> variables PUNTO STORE LPAREN hash_element . RPAREN

    RPAREN          shift and go to state 164


state 147

    (99) hash_key -> variables PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 165


state 148

    (95) value -> valor .

    RPAREN          reduce using rule 95 (value -> valor .)
    COMMA           reduce using rule 95 (value -> valor .)
    RBRACE          reduce using rule 95 (value -> valor .)


state 149

    (96) value -> struct .

    RPAREN          reduce using rule 96 (value -> struct .)
    COMMA           reduce using rule 96 (value -> struct .)
    RBRACE          reduce using rule 96 (value -> struct .)


state 150

    (69) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 166


state 151

    (74) sentenciawhile -> WHILE condicion DO repetircontenido END .

    $end            reduce using rule 74 (sentenciawhile -> WHILE condicion DO repetircontenido END .)


state 152

    (68) repetircontenido -> contenido repetircontenido .

    END             reduce using rule 68 (repetircontenido -> contenido repetircontenido .)


state 153

    (73) condicion -> ARRAY PUNTO NEW LPAREN . arr RPAREN
    (55) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 138

    arr                            shift and go to state 167

state 154

    (55) arr -> LCOR repetirvalor RCOR .

    $end            reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    PUTS            reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    ID              reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    CONSTANT        reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    GLOBAL          reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    END             reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 55 (arr -> LCOR repetirvalor RCOR .)


state 155

    (54) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 54 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 54 (repetirvalor -> valor COMMA repetirvalor .)


state 156

    (77) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (78) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 168
    RPAREN          shift and go to state 169


state 157

    (89) hash_more_elements -> COMMA hash_element .
    (90) hash_more_elements -> COMMA hash_element . hash_more_elements
    (89) hash_more_elements -> . COMMA hash_element
    (90) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 89 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 134

    hash_more_elements             shift and go to state 170

state 158

    (88) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 88 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 88 (hash_element -> clave FLECHA value .)
    RPAREN          reduce using rule 88 (hash_element -> clave FLECHA value .)


state 159

    (59) funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .

    $end            reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    PUTS            reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    ID              reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    CONSTANT        reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    GLOBAL          reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)
    END             reduce using rule 59 (funcionsconjunto -> variables PUNTO ADD LPAREN valor RPAREN .)


state 160

    (60) funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .

    $end            reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    PUTS            reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    ID              reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    CONSTANT        reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    GLOBAL          reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)
    END             reduce using rule 60 (funcionsconjunto -> variables PUNTO ADD LPAREN arr RPAREN .)


state 161

    (61) funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .

    $end            reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    PUTS            reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    ID              reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)
    END             reduce using rule 61 (funcionsconjunto -> variables PUNTO MERGE LPAREN variables RPAREN .)


state 162

    (80) funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .

    $end            reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    PUTS            reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    ID              reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    CONSTANT        reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    GLOBAL          reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)
    END             reduce using rule 80 (funcionsformacion -> variables PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 163

    (81) funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .

    $end            reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    PUTS            reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    ID              reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    CONSTANT        reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    GLOBAL          reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)
    END             reduce using rule 81 (funcionsformacion -> variables PUNTO SAMPLE LPAREN variables RPAREN .)


state 164

    (97) hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .

    $end            reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    PUTS            reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    ID              reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    CONSTANT        reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    GLOBAL          reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)
    END             reduce using rule 97 (hash_add -> variables PUNTO STORE LPAREN hash_element RPAREN .)


state 165

    (99) hash_key -> variables PUNTO KEY LPAREN value RPAREN .

    $end            reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    PUTS            reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    ID              reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    CONSTANT        reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    GLOBAL          reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)
    END             reduce using rule 99 (hash_key -> variables PUNTO KEY LPAREN value RPAREN .)


state 166

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN repetircontenido END

    PUNTO           shift and go to state 171


state 167

    (73) condicion -> ARRAY PUNTO NEW LPAREN arr . RPAREN

    RPAREN          shift and go to state 172


state 168

    (77) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 173


state 169

    (78) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    $end            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    PUTS            reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    ID              reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    CONSTANT        reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    GLOBAL          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    END             reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 78 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 170

    (90) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 90 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 171

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN repetircontenido END

    INT             shift and go to state 174


state 172

    (73) condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .

    DO              reduce using rule 73 (condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN .)


state 173

    (77) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    $end            reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    PUTS            reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    ID              reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    CONSTANT        reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    GLOBAL          reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    END             reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 77 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 174

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN repetircontenido END

    RPAREN          shift and go to state 175


state 175

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . repetircontenido END
    (67) repetircontenido -> . contenido
    (68) repetircontenido -> . contenido repetircontenido
    (64) contenido -> . impresion
    (65) contenido -> . asignacion
    (66) contenido -> . funcionstruct
    (8) impresion -> . PUTS factor
    (9) impresion -> . PUTS comparacion
    (10) impresion -> . PUTS comparacion_bool
    (11) impresion -> . PUTS STRING
    (38) asignacion -> . variables EQUAL factor
    (39) asignacion -> . variables EQUAL STRING
    (40) asignacion -> . variables EQUAL booleanos
    (41) asignacion -> . variables EQUAL comparacion_bool
    (42) asignacion -> . variables EQUAL struct
    (56) funcionstruct -> . funcionsconjunto
    (57) funcionstruct -> . funcionsformacion
    (58) funcionstruct -> . funcionsHash
    (35) variables -> . ID
    (36) variables -> . CONSTANT
    (37) variables -> . GLOBAL
    (59) funcionsconjunto -> . variables PUNTO ADD LPAREN valor RPAREN
    (60) funcionsconjunto -> . variables PUNTO ADD LPAREN arr RPAREN
    (61) funcionsconjunto -> . variables PUNTO MERGE LPAREN variables RPAREN
    (62) funcionsconjunto -> . variables PUNTO SIZE LPAREN RPAREN
    (63) funcionsconjunto -> . variables PUNTO SIZE
    (79) funcionsformacion -> . variables PUNTO LENGTH LPAREN RPAREN
    (80) funcionsformacion -> . variables PUNTO PUSH LPAREN repetirvalor RPAREN
    (81) funcionsformacion -> . variables PUNTO SAMPLE LPAREN variables RPAREN
    (82) funcionsformacion -> . variables PUNTO FIRST
    (83) funcionsformacion -> . variables PUNTO FIRST LPAREN RPAREN
    (100) funcionsHash -> . hash_add
    (101) funcionsHash -> . hash_delete
    (102) funcionsHash -> . hash_key
    (97) hash_add -> . variables PUNTO STORE LPAREN hash_element RPAREN
    (98) hash_delete -> . variables PUNTO LPAREN clave RPAREN
    (99) hash_key -> . variables PUNTO KEY LPAREN value RPAREN

    PUTS            shift and go to state 10
    ID              shift and go to state 20
    CONSTANT        shift and go to state 21
    GLOBAL          shift and go to state 22

    variables                      shift and go to state 125
    repetircontenido               shift and go to state 176
    contenido                      shift and go to state 121
    impresion                      shift and go to state 122
    asignacion                     shift and go to state 123
    funcionstruct                  shift and go to state 124
    funcionsconjunto               shift and go to state 13
    funcionsformacion              shift and go to state 14
    funcionsHash                   shift and go to state 15
    hash_add                       shift and go to state 23
    hash_delete                    shift and go to state 24
    hash_key                       shift and go to state 25

state 176

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido . END

    END             shift and go to state 177


state 177

    (69) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .

    $end            reduce using rule 69 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for MOD in state 51 resolved as shift
