Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    CLEAR
    DEF
    DEFINED
    DO
    ELSE
    ENSURE
    FETCH
    MODULE
    NEXT
    NIL
    NOT
    NUMERAL
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    THEN
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> leer
Rule 5     cuerpo -> funcionstruct
Rule 6     cuerpo -> estructurasControl
Rule 7     cuerpo -> operaciones
Rule 8     cuerpo -> cuerpo NEWLINE cuerpo
Rule 9     impresion -> PUTS factor
Rule 10    impresion -> PUTS comparacion
Rule 11    impresion -> PUTS comparacion_bool
Rule 12    impresion -> PUTS STRING
Rule 13    impresion -> PUTS variables
Rule 14    leer -> GETS PUNTO CHOMP
Rule 15    expression -> factor operadoresMat factor
Rule 16    operacionstring -> STRING PLUS STRING
Rule 17    operacionstring -> STRING TIMES INT
Rule 18    operacionstring -> STRING PLUS operacionstring
Rule 19    operacionstring -> STRING TIMES INT PLUS operacionstring
Rule 20    operaciones -> operacionstring
Rule 21    operaciones -> comparacion_bool
Rule 22    operaciones -> comparacionb
Rule 23    comparacion -> factor operadoresComp factor
Rule 24    comparacion -> STRING operadoresEquals STRING
Rule 25    comparacion -> comparacion operadoresBool comparacion
Rule 26    comparacion_bool -> booleanos operadoresEquals booleanos
Rule 27    comparacionb -> booleanos operadoresBool booleanos
Rule 28    comparacionb -> booleanos operadoresBool comparacionb
Rule 29    comparacionb -> booleanos operadoresBool comparacion_bool
Rule 30    operadoresComp -> MAYORQUE
Rule 31    operadoresComp -> MENORQUE
Rule 32    operadoresComp -> operadoresEquals
Rule 33    operadoresMat -> PLUS
Rule 34    operadoresMat -> MINUS
Rule 35    operadoresMat -> TIMES
Rule 36    operadoresMat -> DIVIDE
Rule 37    operadoresMat -> MOD
Rule 38    factor -> INT
Rule 39    factor -> FLOAT
Rule 40    factor -> expression
Rule 41    booleanos -> TRUE
Rule 42    booleanos -> FALSE
Rule 43    operadoresBool -> AND
Rule 44    operadoresBool -> OR
Rule 45    operadoresEquals -> EQUALSX2
Rule 46    operadoresEquals -> NOTEQUALS
Rule 47    variables -> ID
Rule 48    variables -> CONSTANT
Rule 49    variables -> GLOBAL
Rule 50    asignacion -> variables EQUAL factor
Rule 51    asignacion -> variables EQUAL STRING
Rule 52    asignacion -> variables EQUAL booleanos
Rule 53    asignacion -> variables EQUAL comparacion_bool
Rule 54    asignacion -> variables EQUAL comparacionb
Rule 55    asignacion -> variables EQUAL struct
Rule 56    asignacion -> variables EQUAL comparacion
Rule 57    asignacion -> variables EQUAL operacionstring
Rule 58    struct -> conjunto
Rule 59    struct -> formacion
Rule 60    struct -> hash
Rule 61    conjunto -> SET arr
Rule 62    conjunto -> SET LCOR RCOR
Rule 63    valor -> INT
Rule 64    valor -> STRING
Rule 65    valor -> booleanos
Rule 66    valor -> FLOAT
Rule 67    repetirvalor -> valor
Rule 68    repetirvalor -> valor COMMA repetirvalor
Rule 69    arr -> LCOR repetirvalor RCOR
Rule 70    funcionstruct -> funcionsconjunto
Rule 71    funcionstruct -> funcionsformacion
Rule 72    funcionstruct -> funcionsHash
Rule 73    funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN
Rule 74    funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN
Rule 75    funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN
Rule 76    funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN
Rule 77    funcionsconjunto -> conjunto PUNTO SIZE
Rule 78    contenido -> impresion
Rule 79    contenido -> asignacion
Rule 80    contenido -> funcionstruct
Rule 81    repetircontenido -> contenido
Rule 82    repetircontenido -> contenido SEMICOLON repetircontenido
Rule 83    condicion -> comparacion
Rule 84    condicion -> comparacion_bool
Rule 85    condicion -> comparacionb
Rule 86    condicion -> booleanos
Rule 87    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
Rule 88    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
Rule 89    sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
Rule 90    sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END
Rule 91    sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
Rule 92    sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END
Rule 93    sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
Rule 94    sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END
Rule 95    sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END
Rule 96    estructurasControl -> sentenciaif
Rule 97    estructurasControl -> sentenciawhile
Rule 98    estructurasControl -> sentenciafor
Rule 99    formacion -> LCOR repetirvalor RCOR
Rule 100   formacion -> LCOR RCOR
Rule 101   formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN
Rule 102   formacion -> ARRAY PUNTO NEW LPAREN RPAREN
Rule 103   funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN
Rule 104   funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN
Rule 105   funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN
Rule 106   funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN
Rule 107   funcionsformacion -> formacion PUNTO FIRST
Rule 108   funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN
Rule 109   hash -> LBRACE hash_content RBRACE
Rule 110   hash_elements -> hash_element hash_more_elements
Rule 111   hash_content -> hash_element
Rule 112   hash_content -> hash_elements
Rule 113   hash_element -> clave FLECHA value
Rule 114   hash_more_elements -> COMMA hash_element
Rule 115   hash_more_elements -> COMMA hash_element hash_more_elements
Rule 116   clave -> STRING
Rule 117   clave -> INT
Rule 118   clave -> FLOAT
Rule 119   value -> valor
Rule 120   value -> struct
Rule 121   hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN
Rule 122   hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN
Rule 123   hash_key -> hash PUNTO KEY LPAREN value RPAREN
Rule 124   funcionsHash -> hash_add
Rule 125   funcionsHash -> hash_delete
Rule 126   funcionsHash -> hash_key

Terminals, with rules where they appear

ADD                  : 73 74
ALIAS                : 
AND                  : 43
ARRAY                : 101 102
BEGIN                : 
BREAK                : 
CASE                 : 
CHOMP                : 14
CLASS                : 
CLEAR                : 
COMMA                : 68 114 115 121
CONSTANT             : 48
DEF                  : 
DEFINED              : 
DELETE               : 122
DIVIDE               : 36
DO                   : 
ELSE                 : 
ELSIF                : 92 93
END                  : 87 88 89 90 92 94 95
ENSURE               : 
EQUAL                : 50 51 52 53 54 55 56 57
EQUALSX2             : 45
FALSE                : 42
FETCH                : 
FIRST                : 107 108
FLECHA               : 113
FLOAT                : 39 66 118
FOR                  : 87 88 89
GETS                 : 14
GLOBAL               : 49
ID                   : 47
IF                   : 90 91
IN                   : 87 88 89
INT                  : 17 19 38 63 87 87 88 88 89 89 101 106 117
KEY                  : 123
LBRACE               : 109
LCOR                 : 62 69 99 100
LENGTH               : 103
LPAREN               : 73 74 75 76 87 88 89 101 102 103 104 105 106 108 121 122 123
MAYORQUE             : 30
MENORQUE             : 31
MERGE                : 75
MINUS                : 34
MOD                  : 37
MODULE               : 
NEW                  : 101 102
NEWLINE              : 8 87 87 88 88 89 89 89 90 90 91 91 92 92 93 93 94 94 95 95
NEXT                 : 
NIL                  : 
NOT                  : 
NOTEQUALS            : 46
NUMERAL              : 
OR                   : 44
PLUS                 : 16 18 19 33
PUNTO                : 14 73 74 75 76 77 87 87 88 88 89 89 101 102 103 104 105 106 107 108 121 122 123
PUSH                 : 104
PUTS                 : 9 10 11 12 13
RBRACE               : 109
RCOR                 : 62 69 99 100
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 73 74 75 76 87 88 89 101 102 103 104 105 106 108 121 122 123
SAMPLE               : 105 106
SELF                 : 
SEMICOLON            : 82
SET                  : 61 62
SIZE                 : 76 77
STORE                : 121
STRING               : 12 16 16 17 18 19 24 24 51 64 116
SUPER                : 
THEN                 : 
TIMES                : 17 19 35
TRUE                 : 41
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 94 95
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arr                  : 61 74
asignacion           : 3 79
booleanos            : 26 26 27 27 28 29 52 65 86
clave                : 113 121 122
comparacion          : 10 25 25 56 83
comparacion_bool     : 11 21 29 53 84
comparacionb         : 22 28 54 85
condicion            : 90 91 92 93 94 95
conjunto             : 58 73 74 75 75 76 77
contenido            : 81 82
cuerpo               : 8 8 0
estructurasControl   : 6
expression           : 1 40
factor               : 9 15 15 23 23 50
formacion            : 59 103 104 105 106 107 108
funcionsHash         : 72
funcionsconjunto     : 70
funcionsformacion    : 71
funcionstruct        : 5 80
hash                 : 60 121 122 123
hash_add             : 124
hash_content         : 109
hash_delete          : 125
hash_element         : 110 111 114 115
hash_elements        : 112
hash_key             : 126
hash_more_elements   : 110 115
impresion            : 2 78
leer                 : 4
operaciones          : 7
operacionstring      : 18 19 20 57
operadoresBool       : 25 27 28 29
operadoresComp       : 23
operadoresEquals     : 24 26 32
operadoresMat        : 15
repetircontenido     : 82 87 89 90 91 92 93 94
repetirvalor         : 68 69 99 104
sentenciaelsif       : 91 93
sentenciafor         : 98
sentenciaif          : 88 89 95 96
sentenciawhile       : 97
struct               : 55 120
valor                : 67 68 73 119
value                : 113 121 123
variables            : 13 50 51 52 53 54 55 56 57 87 88 89

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . estructurasControl
    (7) cuerpo -> . operaciones
    (8) cuerpo -> . cuerpo NEWLINE cuerpo
    (15) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (14) leer -> . GETS PUNTO CHOMP
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (96) estructurasControl -> . sentenciaif
    (97) estructurasControl -> . sentenciawhile
    (98) estructurasControl -> . sentenciafor
    (20) operaciones -> . operacionstring
    (21) operaciones -> . comparacion_bool
    (22) operaciones -> . comparacionb
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (90) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (94) sentenciawhile -> . WHILE condicion NEWLINE repetircontenido NEWLINE END
    (95) sentenciawhile -> . WHILE condicion NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (109) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    GETS            shift and go to state 17
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    STRING          shift and go to state 12
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    LBRACE          shift and go to state 43

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    estructurasControl             shift and go to state 7
    operaciones                    shift and go to state 8
    factor                         shift and go to state 9
    comparacion_bool               shift and go to state 11
    variables                      shift and go to state 13
    booleanos                      shift and go to state 14
    comparacionb                   shift and go to state 15
    operacionstring                shift and go to state 16
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    sentenciaif                    shift and go to state 21
    sentenciawhile                 shift and go to state 22
    sentenciafor                   shift and go to state 23
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 1

    (0) S' -> cuerpo .
    (8) cuerpo -> cuerpo . NEWLINE cuerpo

    NEWLINE         shift and go to state 44


state 2

    (1) cuerpo -> expression .
    (40) factor -> expression .

    NEWLINE         reduce using rule 1 (cuerpo -> expression .)
    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            reduce using rule 40 (factor -> expression .)
    MINUS           reduce using rule 40 (factor -> expression .)
    TIMES           reduce using rule 40 (factor -> expression .)
    DIVIDE          reduce using rule 40 (factor -> expression .)
    MOD             reduce using rule 40 (factor -> expression .)


state 3

    (2) cuerpo -> impresion .

    NEWLINE         reduce using rule 2 (cuerpo -> impresion .)
    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> asignacion .

    NEWLINE         reduce using rule 3 (cuerpo -> asignacion .)
    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> leer .

    NEWLINE         reduce using rule 4 (cuerpo -> leer .)
    $end            reduce using rule 4 (cuerpo -> leer .)


state 6

    (5) cuerpo -> funcionstruct .

    NEWLINE         reduce using rule 5 (cuerpo -> funcionstruct .)
    $end            reduce using rule 5 (cuerpo -> funcionstruct .)


state 7

    (6) cuerpo -> estructurasControl .

    NEWLINE         reduce using rule 6 (cuerpo -> estructurasControl .)
    $end            reduce using rule 6 (cuerpo -> estructurasControl .)


state 8

    (7) cuerpo -> operaciones .

    NEWLINE         reduce using rule 7 (cuerpo -> operaciones .)
    $end            reduce using rule 7 (cuerpo -> operaciones .)


state 9

    (15) expression -> factor . operadoresMat factor
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD

    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50

    operadoresMat                  shift and go to state 45

state 10

    (9) impresion -> PUTS . factor
    (10) impresion -> PUTS . comparacion
    (11) impresion -> PUTS . comparacion_bool
    (12) impresion -> PUTS . STRING
    (13) impresion -> PUTS . variables
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (15) expression -> . factor operadoresMat factor
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    STRING          shift and go to state 54
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    factor                         shift and go to state 51
    comparacion                    shift and go to state 52
    comparacion_bool               shift and go to state 53
    variables                      shift and go to state 55
    expression                     shift and go to state 56
    booleanos                      shift and go to state 57

state 11

    (21) operaciones -> comparacion_bool .

    NEWLINE         reduce using rule 21 (operaciones -> comparacion_bool .)
    $end            reduce using rule 21 (operaciones -> comparacion_bool .)


state 12

    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring

    PLUS            shift and go to state 58
    TIMES           shift and go to state 59


state 13

    (50) asignacion -> variables . EQUAL factor
    (51) asignacion -> variables . EQUAL STRING
    (52) asignacion -> variables . EQUAL booleanos
    (53) asignacion -> variables . EQUAL comparacion_bool
    (54) asignacion -> variables . EQUAL comparacionb
    (55) asignacion -> variables . EQUAL struct
    (56) asignacion -> variables . EQUAL comparacion
    (57) asignacion -> variables . EQUAL operacionstring

    EQUAL           shift and go to state 60


state 14

    (26) comparacion_bool -> booleanos . operadoresEquals booleanos
    (27) comparacionb -> booleanos . operadoresBool booleanos
    (28) comparacionb -> booleanos . operadoresBool comparacionb
    (29) comparacionb -> booleanos . operadoresBool comparacion_bool
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 61
    operadoresBool                 shift and go to state 62

state 15

    (22) operaciones -> comparacionb .

    NEWLINE         reduce using rule 22 (operaciones -> comparacionb .)
    $end            reduce using rule 22 (operaciones -> comparacionb .)


state 16

    (20) operaciones -> operacionstring .

    NEWLINE         reduce using rule 20 (operaciones -> operacionstring .)
    $end            reduce using rule 20 (operaciones -> operacionstring .)


state 17

    (14) leer -> GETS . PUNTO CHOMP

    PUNTO           shift and go to state 67


state 18

    (70) funcionstruct -> funcionsconjunto .

    NEWLINE         reduce using rule 70 (funcionstruct -> funcionsconjunto .)
    $end            reduce using rule 70 (funcionstruct -> funcionsconjunto .)
    SEMICOLON       reduce using rule 70 (funcionstruct -> funcionsconjunto .)


state 19

    (71) funcionstruct -> funcionsformacion .

    NEWLINE         reduce using rule 71 (funcionstruct -> funcionsformacion .)
    $end            reduce using rule 71 (funcionstruct -> funcionsformacion .)
    SEMICOLON       reduce using rule 71 (funcionstruct -> funcionsformacion .)


state 20

    (72) funcionstruct -> funcionsHash .

    NEWLINE         reduce using rule 72 (funcionstruct -> funcionsHash .)
    $end            reduce using rule 72 (funcionstruct -> funcionsHash .)
    SEMICOLON       reduce using rule 72 (funcionstruct -> funcionsHash .)


state 21

    (96) estructurasControl -> sentenciaif .

    NEWLINE         reduce using rule 96 (estructurasControl -> sentenciaif .)
    $end            reduce using rule 96 (estructurasControl -> sentenciaif .)


state 22

    (97) estructurasControl -> sentenciawhile .

    NEWLINE         reduce using rule 97 (estructurasControl -> sentenciawhile .)
    $end            reduce using rule 97 (estructurasControl -> sentenciawhile .)


state 23

    (98) estructurasControl -> sentenciafor .

    NEWLINE         reduce using rule 98 (estructurasControl -> sentenciafor .)
    $end            reduce using rule 98 (estructurasControl -> sentenciafor .)


state 24

    (38) factor -> INT .

    PLUS            reduce using rule 38 (factor -> INT .)
    MINUS           reduce using rule 38 (factor -> INT .)
    TIMES           reduce using rule 38 (factor -> INT .)
    DIVIDE          reduce using rule 38 (factor -> INT .)
    MOD             reduce using rule 38 (factor -> INT .)
    MAYORQUE        reduce using rule 38 (factor -> INT .)
    MENORQUE        reduce using rule 38 (factor -> INT .)
    EQUALSX2        reduce using rule 38 (factor -> INT .)
    NOTEQUALS       reduce using rule 38 (factor -> INT .)
    NEWLINE         reduce using rule 38 (factor -> INT .)
    $end            reduce using rule 38 (factor -> INT .)
    SEMICOLON       reduce using rule 38 (factor -> INT .)
    AND             reduce using rule 38 (factor -> INT .)
    OR              reduce using rule 38 (factor -> INT .)


state 25

    (39) factor -> FLOAT .

    PLUS            reduce using rule 39 (factor -> FLOAT .)
    MINUS           reduce using rule 39 (factor -> FLOAT .)
    TIMES           reduce using rule 39 (factor -> FLOAT .)
    DIVIDE          reduce using rule 39 (factor -> FLOAT .)
    MOD             reduce using rule 39 (factor -> FLOAT .)
    MAYORQUE        reduce using rule 39 (factor -> FLOAT .)
    MENORQUE        reduce using rule 39 (factor -> FLOAT .)
    EQUALSX2        reduce using rule 39 (factor -> FLOAT .)
    NOTEQUALS       reduce using rule 39 (factor -> FLOAT .)
    NEWLINE         reduce using rule 39 (factor -> FLOAT .)
    $end            reduce using rule 39 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 39 (factor -> FLOAT .)
    AND             reduce using rule 39 (factor -> FLOAT .)
    OR              reduce using rule 39 (factor -> FLOAT .)


state 26

    (47) variables -> ID .

    EQUAL           reduce using rule 47 (variables -> ID .)
    NEWLINE         reduce using rule 47 (variables -> ID .)
    $end            reduce using rule 47 (variables -> ID .)
    SEMICOLON       reduce using rule 47 (variables -> ID .)
    IN              reduce using rule 47 (variables -> ID .)


state 27

    (48) variables -> CONSTANT .

    EQUAL           reduce using rule 48 (variables -> CONSTANT .)
    NEWLINE         reduce using rule 48 (variables -> CONSTANT .)
    $end            reduce using rule 48 (variables -> CONSTANT .)
    SEMICOLON       reduce using rule 48 (variables -> CONSTANT .)
    IN              reduce using rule 48 (variables -> CONSTANT .)


state 28

    (49) variables -> GLOBAL .

    EQUAL           reduce using rule 49 (variables -> GLOBAL .)
    NEWLINE         reduce using rule 49 (variables -> GLOBAL .)
    $end            reduce using rule 49 (variables -> GLOBAL .)
    SEMICOLON       reduce using rule 49 (variables -> GLOBAL .)
    IN              reduce using rule 49 (variables -> GLOBAL .)


state 29

    (73) funcionsconjunto -> conjunto . PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> conjunto . PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> conjunto . PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> conjunto . PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> conjunto . PUNTO SIZE

    PUNTO           shift and go to state 68


state 30

    (103) funcionsformacion -> formacion . PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> formacion . PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> formacion . PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> formacion . PUNTO FIRST
    (108) funcionsformacion -> formacion . PUNTO FIRST LPAREN RPAREN

    PUNTO           shift and go to state 69


state 31

    (124) funcionsHash -> hash_add .

    NEWLINE         reduce using rule 124 (funcionsHash -> hash_add .)
    $end            reduce using rule 124 (funcionsHash -> hash_add .)
    SEMICOLON       reduce using rule 124 (funcionsHash -> hash_add .)


state 32

    (125) funcionsHash -> hash_delete .

    NEWLINE         reduce using rule 125 (funcionsHash -> hash_delete .)
    $end            reduce using rule 125 (funcionsHash -> hash_delete .)
    SEMICOLON       reduce using rule 125 (funcionsHash -> hash_delete .)


state 33

    (126) funcionsHash -> hash_key .

    NEWLINE         reduce using rule 126 (funcionsHash -> hash_key .)
    $end            reduce using rule 126 (funcionsHash -> hash_key .)
    SEMICOLON       reduce using rule 126 (funcionsHash -> hash_key .)


state 34

    (90) sentenciaif -> IF . condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> IF . condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (83) condicion -> . comparacion
    (84) condicion -> . comparacion_bool
    (85) condicion -> . comparacionb
    (86) condicion -> . booleanos
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 76
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 70
    comparacion                    shift and go to state 71
    comparacion_bool               shift and go to state 72
    comparacionb                   shift and go to state 73
    booleanos                      shift and go to state 74
    factor                         shift and go to state 75
    expression                     shift and go to state 56

state 35

    (94) sentenciawhile -> WHILE . condicion NEWLINE repetircontenido NEWLINE END
    (95) sentenciawhile -> WHILE . condicion NEWLINE sentenciaif NEWLINE END
    (83) condicion -> . comparacion
    (84) condicion -> . comparacion_bool
    (85) condicion -> . comparacionb
    (86) condicion -> . booleanos
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 76
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 77
    comparacion                    shift and go to state 71
    comparacion_bool               shift and go to state 72
    comparacionb                   shift and go to state 73
    booleanos                      shift and go to state 74
    factor                         shift and go to state 75
    expression                     shift and go to state 56

state 36

    (87) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR . variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL

    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28

    variables                      shift and go to state 78

state 37

    (61) conjunto -> SET . arr
    (62) conjunto -> SET . LCOR RCOR
    (69) arr -> . LCOR repetirvalor RCOR

    LCOR            shift and go to state 80

    arr                            shift and go to state 79

state 38

    (99) formacion -> LCOR . repetirvalor RCOR
    (100) formacion -> LCOR . RCOR
    (67) repetirvalor -> . valor
    (68) repetirvalor -> . valor COMMA repetirvalor
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    RCOR            shift and go to state 82
    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 81
    valor                          shift and go to state 83
    booleanos                      shift and go to state 86

state 39

    (101) formacion -> ARRAY . PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> ARRAY . PUNTO NEW LPAREN RPAREN

    PUNTO           shift and go to state 88


state 40

    (121) hash_add -> hash . PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> hash . PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> hash . PUNTO KEY LPAREN value RPAREN

    PUNTO           shift and go to state 89


state 41

    (41) booleanos -> TRUE .

    EQUALSX2        reduce using rule 41 (booleanos -> TRUE .)
    NOTEQUALS       reduce using rule 41 (booleanos -> TRUE .)
    AND             reduce using rule 41 (booleanos -> TRUE .)
    OR              reduce using rule 41 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 41 (booleanos -> TRUE .)
    COMMA           reduce using rule 41 (booleanos -> TRUE .)
    RCOR            reduce using rule 41 (booleanos -> TRUE .)
    $end            reduce using rule 41 (booleanos -> TRUE .)
    SEMICOLON       reduce using rule 41 (booleanos -> TRUE .)
    RPAREN          reduce using rule 41 (booleanos -> TRUE .)
    RBRACE          reduce using rule 41 (booleanos -> TRUE .)


state 42

    (42) booleanos -> FALSE .

    EQUALSX2        reduce using rule 42 (booleanos -> FALSE .)
    NOTEQUALS       reduce using rule 42 (booleanos -> FALSE .)
    AND             reduce using rule 42 (booleanos -> FALSE .)
    OR              reduce using rule 42 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 42 (booleanos -> FALSE .)
    COMMA           reduce using rule 42 (booleanos -> FALSE .)
    RCOR            reduce using rule 42 (booleanos -> FALSE .)
    $end            reduce using rule 42 (booleanos -> FALSE .)
    SEMICOLON       reduce using rule 42 (booleanos -> FALSE .)
    RPAREN          reduce using rule 42 (booleanos -> FALSE .)
    RBRACE          reduce using rule 42 (booleanos -> FALSE .)


state 43

    (109) hash -> LBRACE . hash_content RBRACE
    (111) hash_content -> . hash_element
    (112) hash_content -> . hash_elements
    (113) hash_element -> . clave FLECHA value
    (110) hash_elements -> . hash_element hash_more_elements
    (116) clave -> . STRING
    (117) clave -> . INT
    (118) clave -> . FLOAT

    STRING          shift and go to state 94
    INT             shift and go to state 95
    FLOAT           shift and go to state 96

    hash_content                   shift and go to state 90
    hash_element                   shift and go to state 91
    hash_elements                  shift and go to state 92
    clave                          shift and go to state 93

state 44

    (8) cuerpo -> cuerpo NEWLINE . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . impresion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . leer
    (5) cuerpo -> . funcionstruct
    (6) cuerpo -> . estructurasControl
    (7) cuerpo -> . operaciones
    (8) cuerpo -> . cuerpo NEWLINE cuerpo
    (15) expression -> . factor operadoresMat factor
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (14) leer -> . GETS PUNTO CHOMP
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (96) estructurasControl -> . sentenciaif
    (97) estructurasControl -> . sentenciawhile
    (98) estructurasControl -> . sentenciafor
    (20) operaciones -> . operacionstring
    (21) operaciones -> . comparacion_bool
    (22) operaciones -> . comparacionb
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (90) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (94) sentenciawhile -> . WHILE condicion NEWLINE repetircontenido NEWLINE END
    (95) sentenciawhile -> . WHILE condicion NEWLINE sentenciaif NEWLINE END
    (87) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> . FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (109) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    GETS            shift and go to state 17
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    STRING          shift and go to state 12
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    LBRACE          shift and go to state 43

    cuerpo                         shift and go to state 97
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    asignacion                     shift and go to state 4
    leer                           shift and go to state 5
    funcionstruct                  shift and go to state 6
    estructurasControl             shift and go to state 7
    operaciones                    shift and go to state 8
    factor                         shift and go to state 9
    comparacion_bool               shift and go to state 11
    variables                      shift and go to state 13
    booleanos                      shift and go to state 14
    comparacionb                   shift and go to state 15
    operacionstring                shift and go to state 16
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    sentenciaif                    shift and go to state 21
    sentenciawhile                 shift and go to state 22
    sentenciafor                   shift and go to state 23
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 45

    (15) expression -> factor operadoresMat . factor
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    factor                         shift and go to state 98
    expression                     shift and go to state 56

state 46

    (33) operadoresMat -> PLUS .

    INT             reduce using rule 33 (operadoresMat -> PLUS .)
    FLOAT           reduce using rule 33 (operadoresMat -> PLUS .)


state 47

    (34) operadoresMat -> MINUS .

    INT             reduce using rule 34 (operadoresMat -> MINUS .)
    FLOAT           reduce using rule 34 (operadoresMat -> MINUS .)


state 48

    (35) operadoresMat -> TIMES .

    INT             reduce using rule 35 (operadoresMat -> TIMES .)
    FLOAT           reduce using rule 35 (operadoresMat -> TIMES .)


state 49

    (36) operadoresMat -> DIVIDE .

    INT             reduce using rule 36 (operadoresMat -> DIVIDE .)
    FLOAT           reduce using rule 36 (operadoresMat -> DIVIDE .)


state 50

    (37) operadoresMat -> MOD .

    INT             reduce using rule 37 (operadoresMat -> MOD .)
    FLOAT           reduce using rule 37 (operadoresMat -> MOD .)


state 51

    (9) impresion -> PUTS factor .
    (23) comparacion -> factor . operadoresComp factor
    (15) expression -> factor . operadoresMat factor
    (30) operadoresComp -> . MAYORQUE
    (31) operadoresComp -> . MENORQUE
    (32) operadoresComp -> . operadoresEquals
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 9 (impresion -> PUTS factor .)
    $end            reduce using rule 9 (impresion -> PUTS factor .)
    SEMICOLON       reduce using rule 9 (impresion -> PUTS factor .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresComp                 shift and go to state 99
    operadoresMat                  shift and go to state 45
    operadoresEquals               shift and go to state 102

state 52

    (10) impresion -> PUTS comparacion .
    (25) comparacion -> comparacion . operadoresBool comparacion
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    NEWLINE         reduce using rule 10 (impresion -> PUTS comparacion .)
    $end            reduce using rule 10 (impresion -> PUTS comparacion .)
    SEMICOLON       reduce using rule 10 (impresion -> PUTS comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 103

state 53

    (11) impresion -> PUTS comparacion_bool .

    NEWLINE         reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    $end            reduce using rule 11 (impresion -> PUTS comparacion_bool .)
    SEMICOLON       reduce using rule 11 (impresion -> PUTS comparacion_bool .)


state 54

    (12) impresion -> PUTS STRING .
    (24) comparacion -> STRING . operadoresEquals STRING
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 12 (impresion -> PUTS STRING .)
    $end            reduce using rule 12 (impresion -> PUTS STRING .)
    SEMICOLON       reduce using rule 12 (impresion -> PUTS STRING .)
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresEquals               shift and go to state 104

state 55

    (13) impresion -> PUTS variables .

    NEWLINE         reduce using rule 13 (impresion -> PUTS variables .)
    $end            reduce using rule 13 (impresion -> PUTS variables .)
    SEMICOLON       reduce using rule 13 (impresion -> PUTS variables .)


state 56

    (40) factor -> expression .

    MAYORQUE        reduce using rule 40 (factor -> expression .)
    MENORQUE        reduce using rule 40 (factor -> expression .)
    PLUS            reduce using rule 40 (factor -> expression .)
    MINUS           reduce using rule 40 (factor -> expression .)
    TIMES           reduce using rule 40 (factor -> expression .)
    DIVIDE          reduce using rule 40 (factor -> expression .)
    MOD             reduce using rule 40 (factor -> expression .)
    EQUALSX2        reduce using rule 40 (factor -> expression .)
    NOTEQUALS       reduce using rule 40 (factor -> expression .)
    NEWLINE         reduce using rule 40 (factor -> expression .)
    $end            reduce using rule 40 (factor -> expression .)
    SEMICOLON       reduce using rule 40 (factor -> expression .)
    AND             reduce using rule 40 (factor -> expression .)
    OR              reduce using rule 40 (factor -> expression .)


state 57

    (26) comparacion_bool -> booleanos . operadoresEquals booleanos
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresEquals               shift and go to state 61

state 58

    (16) operacionstring -> STRING PLUS . STRING
    (18) operacionstring -> STRING PLUS . operacionstring
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring

    STRING          shift and go to state 105

    operacionstring                shift and go to state 106

state 59

    (17) operacionstring -> STRING TIMES . INT
    (19) operacionstring -> STRING TIMES . INT PLUS operacionstring

    INT             shift and go to state 107


state 60

    (50) asignacion -> variables EQUAL . factor
    (51) asignacion -> variables EQUAL . STRING
    (52) asignacion -> variables EQUAL . booleanos
    (53) asignacion -> variables EQUAL . comparacion_bool
    (54) asignacion -> variables EQUAL . comparacionb
    (55) asignacion -> variables EQUAL . struct
    (56) asignacion -> variables EQUAL . comparacion
    (57) asignacion -> variables EQUAL . operacionstring
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (58) struct -> . conjunto
    (59) struct -> . formacion
    (60) struct -> . hash
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring
    (15) expression -> . factor operadoresMat factor
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    STRING          shift and go to state 109
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    factor                         shift and go to state 108
    booleanos                      shift and go to state 110
    comparacion_bool               shift and go to state 111
    comparacionb                   shift and go to state 112
    struct                         shift and go to state 113
    comparacion                    shift and go to state 114
    operacionstring                shift and go to state 115
    expression                     shift and go to state 56
    conjunto                       shift and go to state 116
    formacion                      shift and go to state 117
    hash                           shift and go to state 118

state 61

    (26) comparacion_bool -> booleanos operadoresEquals . booleanos
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleanos                      shift and go to state 119

state 62

    (27) comparacionb -> booleanos operadoresBool . booleanos
    (28) comparacionb -> booleanos operadoresBool . comparacionb
    (29) comparacionb -> booleanos operadoresBool . comparacion_bool
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos

    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    booleanos                      shift and go to state 120
    comparacionb                   shift and go to state 121
    comparacion_bool               shift and go to state 122

state 63

    (45) operadoresEquals -> EQUALSX2 .

    TRUE            reduce using rule 45 (operadoresEquals -> EQUALSX2 .)
    FALSE           reduce using rule 45 (operadoresEquals -> EQUALSX2 .)
    INT             reduce using rule 45 (operadoresEquals -> EQUALSX2 .)
    FLOAT           reduce using rule 45 (operadoresEquals -> EQUALSX2 .)
    STRING          reduce using rule 45 (operadoresEquals -> EQUALSX2 .)


state 64

    (46) operadoresEquals -> NOTEQUALS .

    TRUE            reduce using rule 46 (operadoresEquals -> NOTEQUALS .)
    FALSE           reduce using rule 46 (operadoresEquals -> NOTEQUALS .)
    INT             reduce using rule 46 (operadoresEquals -> NOTEQUALS .)
    FLOAT           reduce using rule 46 (operadoresEquals -> NOTEQUALS .)
    STRING          reduce using rule 46 (operadoresEquals -> NOTEQUALS .)


state 65

    (43) operadoresBool -> AND .

    TRUE            reduce using rule 43 (operadoresBool -> AND .)
    FALSE           reduce using rule 43 (operadoresBool -> AND .)
    STRING          reduce using rule 43 (operadoresBool -> AND .)
    INT             reduce using rule 43 (operadoresBool -> AND .)
    FLOAT           reduce using rule 43 (operadoresBool -> AND .)


state 66

    (44) operadoresBool -> OR .

    TRUE            reduce using rule 44 (operadoresBool -> OR .)
    FALSE           reduce using rule 44 (operadoresBool -> OR .)
    STRING          reduce using rule 44 (operadoresBool -> OR .)
    INT             reduce using rule 44 (operadoresBool -> OR .)
    FLOAT           reduce using rule 44 (operadoresBool -> OR .)


state 67

    (14) leer -> GETS PUNTO . CHOMP

    CHOMP           shift and go to state 123


state 68

    (73) funcionsconjunto -> conjunto PUNTO . ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> conjunto PUNTO . ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> conjunto PUNTO . MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> conjunto PUNTO . SIZE LPAREN RPAREN
    (77) funcionsconjunto -> conjunto PUNTO . SIZE

    ADD             shift and go to state 124
    MERGE           shift and go to state 125
    SIZE            shift and go to state 126


state 69

    (103) funcionsformacion -> formacion PUNTO . LENGTH LPAREN RPAREN
    (104) funcionsformacion -> formacion PUNTO . PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> formacion PUNTO . SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> formacion PUNTO . FIRST
    (108) funcionsformacion -> formacion PUNTO . FIRST LPAREN RPAREN

    LENGTH          shift and go to state 127
    PUSH            shift and go to state 128
    SAMPLE          shift and go to state 129
    FIRST           shift and go to state 130


state 70

    (90) sentenciaif -> IF condicion . NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> IF condicion . NEWLINE repetircontenido NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 131


state 71

    (83) condicion -> comparacion .
    (25) comparacion -> comparacion . operadoresBool comparacion
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    NEWLINE         reduce using rule 83 (condicion -> comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 103

state 72

    (84) condicion -> comparacion_bool .

    NEWLINE         reduce using rule 84 (condicion -> comparacion_bool .)


state 73

    (85) condicion -> comparacionb .

    NEWLINE         reduce using rule 85 (condicion -> comparacionb .)


state 74

    (86) condicion -> booleanos .
    (26) comparacion_bool -> booleanos . operadoresEquals booleanos
    (27) comparacionb -> booleanos . operadoresBool booleanos
    (28) comparacionb -> booleanos . operadoresBool comparacionb
    (29) comparacionb -> booleanos . operadoresBool comparacion_bool
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    NEWLINE         reduce using rule 86 (condicion -> booleanos .)
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 61
    operadoresBool                 shift and go to state 62

state 75

    (23) comparacion -> factor . operadoresComp factor
    (15) expression -> factor . operadoresMat factor
    (30) operadoresComp -> . MAYORQUE
    (31) operadoresComp -> . MENORQUE
    (32) operadoresComp -> . operadoresEquals
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresComp                 shift and go to state 99
    operadoresMat                  shift and go to state 45
    operadoresEquals               shift and go to state 102

state 76

    (24) comparacion -> STRING . operadoresEquals STRING
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresEquals               shift and go to state 104

state 77

    (94) sentenciawhile -> WHILE condicion . NEWLINE repetircontenido NEWLINE END
    (95) sentenciawhile -> WHILE condicion . NEWLINE sentenciaif NEWLINE END

    NEWLINE         shift and go to state 132


state 78

    (87) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables . IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    IN              shift and go to state 133


state 79

    (61) conjunto -> SET arr .

    PUNTO           reduce using rule 61 (conjunto -> SET arr .)
    NEWLINE         reduce using rule 61 (conjunto -> SET arr .)
    $end            reduce using rule 61 (conjunto -> SET arr .)
    SEMICOLON       reduce using rule 61 (conjunto -> SET arr .)
    COMMA           reduce using rule 61 (conjunto -> SET arr .)
    RBRACE          reduce using rule 61 (conjunto -> SET arr .)
    RPAREN          reduce using rule 61 (conjunto -> SET arr .)


state 80

    (62) conjunto -> SET LCOR . RCOR
    (69) arr -> LCOR . repetirvalor RCOR
    (67) repetirvalor -> . valor
    (68) repetirvalor -> . valor COMMA repetirvalor
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    RCOR            shift and go to state 134
    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 135
    valor                          shift and go to state 83
    booleanos                      shift and go to state 86

state 81

    (99) formacion -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 136


state 82

    (100) formacion -> LCOR RCOR .

    PUNTO           reduce using rule 100 (formacion -> LCOR RCOR .)
    NEWLINE         reduce using rule 100 (formacion -> LCOR RCOR .)
    $end            reduce using rule 100 (formacion -> LCOR RCOR .)
    SEMICOLON       reduce using rule 100 (formacion -> LCOR RCOR .)
    COMMA           reduce using rule 100 (formacion -> LCOR RCOR .)
    RBRACE          reduce using rule 100 (formacion -> LCOR RCOR .)
    RPAREN          reduce using rule 100 (formacion -> LCOR RCOR .)


state 83

    (67) repetirvalor -> valor .
    (68) repetirvalor -> valor . COMMA repetirvalor

    RCOR            reduce using rule 67 (repetirvalor -> valor .)
    RPAREN          reduce using rule 67 (repetirvalor -> valor .)
    COMMA           shift and go to state 137


state 84

    (63) valor -> INT .

    COMMA           reduce using rule 63 (valor -> INT .)
    RCOR            reduce using rule 63 (valor -> INT .)
    RPAREN          reduce using rule 63 (valor -> INT .)
    RBRACE          reduce using rule 63 (valor -> INT .)


state 85

    (64) valor -> STRING .

    COMMA           reduce using rule 64 (valor -> STRING .)
    RCOR            reduce using rule 64 (valor -> STRING .)
    RPAREN          reduce using rule 64 (valor -> STRING .)
    RBRACE          reduce using rule 64 (valor -> STRING .)


state 86

    (65) valor -> booleanos .

    COMMA           reduce using rule 65 (valor -> booleanos .)
    RCOR            reduce using rule 65 (valor -> booleanos .)
    RPAREN          reduce using rule 65 (valor -> booleanos .)
    RBRACE          reduce using rule 65 (valor -> booleanos .)


state 87

    (66) valor -> FLOAT .

    COMMA           reduce using rule 66 (valor -> FLOAT .)
    RCOR            reduce using rule 66 (valor -> FLOAT .)
    RPAREN          reduce using rule 66 (valor -> FLOAT .)
    RBRACE          reduce using rule 66 (valor -> FLOAT .)


state 88

    (101) formacion -> ARRAY PUNTO . NEW LPAREN INT RPAREN
    (102) formacion -> ARRAY PUNTO . NEW LPAREN RPAREN

    NEW             shift and go to state 138


state 89

    (121) hash_add -> hash PUNTO . STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> hash PUNTO . DELETE LPAREN clave RPAREN
    (123) hash_key -> hash PUNTO . KEY LPAREN value RPAREN

    STORE           shift and go to state 139
    DELETE          shift and go to state 140
    KEY             shift and go to state 141


state 90

    (109) hash -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 142


state 91

    (111) hash_content -> hash_element .
    (110) hash_elements -> hash_element . hash_more_elements
    (114) hash_more_elements -> . COMMA hash_element
    (115) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 111 (hash_content -> hash_element .)
    COMMA           shift and go to state 144

    hash_more_elements             shift and go to state 143

state 92

    (112) hash_content -> hash_elements .

    RBRACE          reduce using rule 112 (hash_content -> hash_elements .)


state 93

    (113) hash_element -> clave . FLECHA value

    FLECHA          shift and go to state 145


state 94

    (116) clave -> STRING .

    FLECHA          reduce using rule 116 (clave -> STRING .)
    COMMA           reduce using rule 116 (clave -> STRING .)
    RPAREN          reduce using rule 116 (clave -> STRING .)


state 95

    (117) clave -> INT .

    FLECHA          reduce using rule 117 (clave -> INT .)
    COMMA           reduce using rule 117 (clave -> INT .)
    RPAREN          reduce using rule 117 (clave -> INT .)


state 96

    (118) clave -> FLOAT .

    FLECHA          reduce using rule 118 (clave -> FLOAT .)
    COMMA           reduce using rule 118 (clave -> FLOAT .)
    RPAREN          reduce using rule 118 (clave -> FLOAT .)


state 97

    (8) cuerpo -> cuerpo NEWLINE cuerpo .
    (8) cuerpo -> cuerpo . NEWLINE cuerpo

  ! shift/reduce conflict for NEWLINE resolved as shift
    $end            reduce using rule 8 (cuerpo -> cuerpo NEWLINE cuerpo .)
    NEWLINE         shift and go to state 44

  ! NEWLINE         [ reduce using rule 8 (cuerpo -> cuerpo NEWLINE cuerpo .) ]


state 98

    (15) expression -> factor operadoresMat factor .
    (15) expression -> factor . operadoresMat factor
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    NEWLINE         reduce using rule 15 (expression -> factor operadoresMat factor .)
    $end            reduce using rule 15 (expression -> factor operadoresMat factor .)
    MAYORQUE        reduce using rule 15 (expression -> factor operadoresMat factor .)
    MENORQUE        reduce using rule 15 (expression -> factor operadoresMat factor .)
    EQUALSX2        reduce using rule 15 (expression -> factor operadoresMat factor .)
    NOTEQUALS       reduce using rule 15 (expression -> factor operadoresMat factor .)
    SEMICOLON       reduce using rule 15 (expression -> factor operadoresMat factor .)
    AND             reduce using rule 15 (expression -> factor operadoresMat factor .)
    OR              reduce using rule 15 (expression -> factor operadoresMat factor .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50

  ! PLUS            [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! MINUS           [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! TIMES           [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]
  ! MOD             [ reduce using rule 15 (expression -> factor operadoresMat factor .) ]

    operadoresMat                  shift and go to state 45

state 99

    (23) comparacion -> factor operadoresComp . factor
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    factor                         shift and go to state 146
    expression                     shift and go to state 56

state 100

    (30) operadoresComp -> MAYORQUE .

    INT             reduce using rule 30 (operadoresComp -> MAYORQUE .)
    FLOAT           reduce using rule 30 (operadoresComp -> MAYORQUE .)


state 101

    (31) operadoresComp -> MENORQUE .

    INT             reduce using rule 31 (operadoresComp -> MENORQUE .)
    FLOAT           reduce using rule 31 (operadoresComp -> MENORQUE .)


state 102

    (32) operadoresComp -> operadoresEquals .

    INT             reduce using rule 32 (operadoresComp -> operadoresEquals .)
    FLOAT           reduce using rule 32 (operadoresComp -> operadoresEquals .)


state 103

    (25) comparacion -> comparacion operadoresBool . comparacion
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 76
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    comparacion                    shift and go to state 147
    factor                         shift and go to state 75
    expression                     shift and go to state 56

state 104

    (24) comparacion -> STRING operadoresEquals . STRING

    STRING          shift and go to state 148


state 105

    (16) operacionstring -> STRING PLUS STRING .
    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring

    NEWLINE         reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    $end            reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    SEMICOLON       reduce using rule 16 (operacionstring -> STRING PLUS STRING .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59


state 106

    (18) operacionstring -> STRING PLUS operacionstring .

    NEWLINE         reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)
    $end            reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)
    SEMICOLON       reduce using rule 18 (operacionstring -> STRING PLUS operacionstring .)


state 107

    (17) operacionstring -> STRING TIMES INT .
    (19) operacionstring -> STRING TIMES INT . PLUS operacionstring

    NEWLINE         reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    $end            reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    SEMICOLON       reduce using rule 17 (operacionstring -> STRING TIMES INT .)
    PLUS            shift and go to state 149


state 108

    (50) asignacion -> variables EQUAL factor .
    (23) comparacion -> factor . operadoresComp factor
    (15) expression -> factor . operadoresMat factor
    (30) operadoresComp -> . MAYORQUE
    (31) operadoresComp -> . MENORQUE
    (32) operadoresComp -> . operadoresEquals
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 50 (asignacion -> variables EQUAL factor .)
    $end            reduce using rule 50 (asignacion -> variables EQUAL factor .)
    SEMICOLON       reduce using rule 50 (asignacion -> variables EQUAL factor .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresComp                 shift and go to state 99
    operadoresMat                  shift and go to state 45
    operadoresEquals               shift and go to state 102

state 109

    (51) asignacion -> variables EQUAL STRING .
    (24) comparacion -> STRING . operadoresEquals STRING
    (16) operacionstring -> STRING . PLUS STRING
    (17) operacionstring -> STRING . TIMES INT
    (18) operacionstring -> STRING . PLUS operacionstring
    (19) operacionstring -> STRING . TIMES INT PLUS operacionstring
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 51 (asignacion -> variables EQUAL STRING .)
    $end            reduce using rule 51 (asignacion -> variables EQUAL STRING .)
    SEMICOLON       reduce using rule 51 (asignacion -> variables EQUAL STRING .)
    PLUS            shift and go to state 58
    TIMES           shift and go to state 59
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresEquals               shift and go to state 104

state 110

    (52) asignacion -> variables EQUAL booleanos .
    (26) comparacion_bool -> booleanos . operadoresEquals booleanos
    (27) comparacionb -> booleanos . operadoresBool booleanos
    (28) comparacionb -> booleanos . operadoresBool comparacionb
    (29) comparacionb -> booleanos . operadoresBool comparacion_bool
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    NEWLINE         reduce using rule 52 (asignacion -> variables EQUAL booleanos .)
    $end            reduce using rule 52 (asignacion -> variables EQUAL booleanos .)
    SEMICOLON       reduce using rule 52 (asignacion -> variables EQUAL booleanos .)
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresEquals               shift and go to state 61
    operadoresBool                 shift and go to state 62

state 111

    (53) asignacion -> variables EQUAL comparacion_bool .

    NEWLINE         reduce using rule 53 (asignacion -> variables EQUAL comparacion_bool .)
    $end            reduce using rule 53 (asignacion -> variables EQUAL comparacion_bool .)
    SEMICOLON       reduce using rule 53 (asignacion -> variables EQUAL comparacion_bool .)


state 112

    (54) asignacion -> variables EQUAL comparacionb .

    NEWLINE         reduce using rule 54 (asignacion -> variables EQUAL comparacionb .)
    $end            reduce using rule 54 (asignacion -> variables EQUAL comparacionb .)
    SEMICOLON       reduce using rule 54 (asignacion -> variables EQUAL comparacionb .)


state 113

    (55) asignacion -> variables EQUAL struct .

    NEWLINE         reduce using rule 55 (asignacion -> variables EQUAL struct .)
    $end            reduce using rule 55 (asignacion -> variables EQUAL struct .)
    SEMICOLON       reduce using rule 55 (asignacion -> variables EQUAL struct .)


state 114

    (56) asignacion -> variables EQUAL comparacion .
    (25) comparacion -> comparacion . operadoresBool comparacion
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

    NEWLINE         reduce using rule 56 (asignacion -> variables EQUAL comparacion .)
    $end            reduce using rule 56 (asignacion -> variables EQUAL comparacion .)
    SEMICOLON       reduce using rule 56 (asignacion -> variables EQUAL comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

    operadoresBool                 shift and go to state 103

state 115

    (57) asignacion -> variables EQUAL operacionstring .

    NEWLINE         reduce using rule 57 (asignacion -> variables EQUAL operacionstring .)
    $end            reduce using rule 57 (asignacion -> variables EQUAL operacionstring .)
    SEMICOLON       reduce using rule 57 (asignacion -> variables EQUAL operacionstring .)


state 116

    (58) struct -> conjunto .

    NEWLINE         reduce using rule 58 (struct -> conjunto .)
    $end            reduce using rule 58 (struct -> conjunto .)
    SEMICOLON       reduce using rule 58 (struct -> conjunto .)
    COMMA           reduce using rule 58 (struct -> conjunto .)
    RBRACE          reduce using rule 58 (struct -> conjunto .)
    RPAREN          reduce using rule 58 (struct -> conjunto .)


state 117

    (59) struct -> formacion .

    NEWLINE         reduce using rule 59 (struct -> formacion .)
    $end            reduce using rule 59 (struct -> formacion .)
    SEMICOLON       reduce using rule 59 (struct -> formacion .)
    COMMA           reduce using rule 59 (struct -> formacion .)
    RBRACE          reduce using rule 59 (struct -> formacion .)
    RPAREN          reduce using rule 59 (struct -> formacion .)


state 118

    (60) struct -> hash .

    NEWLINE         reduce using rule 60 (struct -> hash .)
    $end            reduce using rule 60 (struct -> hash .)
    SEMICOLON       reduce using rule 60 (struct -> hash .)
    COMMA           reduce using rule 60 (struct -> hash .)
    RBRACE          reduce using rule 60 (struct -> hash .)
    RPAREN          reduce using rule 60 (struct -> hash .)


state 119

    (26) comparacion_bool -> booleanos operadoresEquals booleanos .

    NEWLINE         reduce using rule 26 (comparacion_bool -> booleanos operadoresEquals booleanos .)
    $end            reduce using rule 26 (comparacion_bool -> booleanos operadoresEquals booleanos .)
    SEMICOLON       reduce using rule 26 (comparacion_bool -> booleanos operadoresEquals booleanos .)


state 120

    (27) comparacionb -> booleanos operadoresBool booleanos .
    (27) comparacionb -> booleanos . operadoresBool booleanos
    (28) comparacionb -> booleanos . operadoresBool comparacionb
    (29) comparacionb -> booleanos . operadoresBool comparacion_bool
    (26) comparacion_bool -> booleanos . operadoresEquals booleanos
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR
    (45) operadoresEquals -> . EQUALSX2
    (46) operadoresEquals -> . NOTEQUALS

    NEWLINE         reduce using rule 27 (comparacionb -> booleanos operadoresBool booleanos .)
    $end            reduce using rule 27 (comparacionb -> booleanos operadoresBool booleanos .)
    SEMICOLON       reduce using rule 27 (comparacionb -> booleanos operadoresBool booleanos .)
    AND             shift and go to state 65
    OR              shift and go to state 66
    EQUALSX2        shift and go to state 63
    NOTEQUALS       shift and go to state 64

    operadoresBool                 shift and go to state 62
    operadoresEquals               shift and go to state 61

state 121

    (28) comparacionb -> booleanos operadoresBool comparacionb .

    NEWLINE         reduce using rule 28 (comparacionb -> booleanos operadoresBool comparacionb .)
    $end            reduce using rule 28 (comparacionb -> booleanos operadoresBool comparacionb .)
    SEMICOLON       reduce using rule 28 (comparacionb -> booleanos operadoresBool comparacionb .)


state 122

    (29) comparacionb -> booleanos operadoresBool comparacion_bool .

    NEWLINE         reduce using rule 29 (comparacionb -> booleanos operadoresBool comparacion_bool .)
    $end            reduce using rule 29 (comparacionb -> booleanos operadoresBool comparacion_bool .)
    SEMICOLON       reduce using rule 29 (comparacionb -> booleanos operadoresBool comparacion_bool .)


state 123

    (14) leer -> GETS PUNTO CHOMP .

    NEWLINE         reduce using rule 14 (leer -> GETS PUNTO CHOMP .)
    $end            reduce using rule 14 (leer -> GETS PUNTO CHOMP .)


state 124

    (73) funcionsconjunto -> conjunto PUNTO ADD . LPAREN valor RPAREN
    (74) funcionsconjunto -> conjunto PUNTO ADD . LPAREN arr RPAREN

    LPAREN          shift and go to state 150


state 125

    (75) funcionsconjunto -> conjunto PUNTO MERGE . LPAREN conjunto RPAREN

    LPAREN          shift and go to state 151


state 126

    (76) funcionsconjunto -> conjunto PUNTO SIZE . LPAREN RPAREN
    (77) funcionsconjunto -> conjunto PUNTO SIZE .

    LPAREN          shift and go to state 152
    NEWLINE         reduce using rule 77 (funcionsconjunto -> conjunto PUNTO SIZE .)
    $end            reduce using rule 77 (funcionsconjunto -> conjunto PUNTO SIZE .)
    SEMICOLON       reduce using rule 77 (funcionsconjunto -> conjunto PUNTO SIZE .)


state 127

    (103) funcionsformacion -> formacion PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 153


state 128

    (104) funcionsformacion -> formacion PUNTO PUSH . LPAREN repetirvalor RPAREN

    LPAREN          shift and go to state 154


state 129

    (105) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN RPAREN
    (106) funcionsformacion -> formacion PUNTO SAMPLE . LPAREN INT RPAREN

    LPAREN          shift and go to state 155


state 130

    (107) funcionsformacion -> formacion PUNTO FIRST .
    (108) funcionsformacion -> formacion PUNTO FIRST . LPAREN RPAREN

    NEWLINE         reduce using rule 107 (funcionsformacion -> formacion PUNTO FIRST .)
    $end            reduce using rule 107 (funcionsformacion -> formacion PUNTO FIRST .)
    SEMICOLON       reduce using rule 107 (funcionsformacion -> formacion PUNTO FIRST .)
    LPAREN          shift and go to state 156


state 131

    (90) sentenciaif -> IF condicion NEWLINE . repetircontenido NEWLINE END
    (91) sentenciaif -> IF condicion NEWLINE . repetircontenido NEWLINE sentenciaelsif
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 157
    contenido                      shift and go to state 158
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    variables                      shift and go to state 13
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 132

    (94) sentenciawhile -> WHILE condicion NEWLINE . repetircontenido NEWLINE END
    (95) sentenciawhile -> WHILE condicion NEWLINE . sentenciaif NEWLINE END
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (90) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    IF              shift and go to state 34
    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 162
    sentenciaif                    shift and go to state 163
    contenido                      shift and go to state 158
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    variables                      shift and go to state 13
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 133

    (87) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN . LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    LPAREN          shift and go to state 164


state 134

    (62) conjunto -> SET LCOR RCOR .

    PUNTO           reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    NEWLINE         reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    $end            reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    SEMICOLON       reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    COMMA           reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    RBRACE          reduce using rule 62 (conjunto -> SET LCOR RCOR .)
    RPAREN          reduce using rule 62 (conjunto -> SET LCOR RCOR .)


state 135

    (69) arr -> LCOR repetirvalor . RCOR

    RCOR            shift and go to state 165


state 136

    (99) formacion -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    SEMICOLON       reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 99 (formacion -> LCOR repetirvalor RCOR .)


state 137

    (68) repetirvalor -> valor COMMA . repetirvalor
    (67) repetirvalor -> . valor
    (68) repetirvalor -> . valor COMMA repetirvalor
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 83
    repetirvalor                   shift and go to state 166
    booleanos                      shift and go to state 86

state 138

    (101) formacion -> ARRAY PUNTO NEW . LPAREN INT RPAREN
    (102) formacion -> ARRAY PUNTO NEW . LPAREN RPAREN

    LPAREN          shift and go to state 167


state 139

    (121) hash_add -> hash PUNTO STORE . LPAREN clave COMMA value RPAREN

    LPAREN          shift and go to state 168


state 140

    (122) hash_delete -> hash PUNTO DELETE . LPAREN clave RPAREN

    LPAREN          shift and go to state 169


state 141

    (123) hash_key -> hash PUNTO KEY . LPAREN value RPAREN

    LPAREN          shift and go to state 170


state 142

    (109) hash -> LBRACE hash_content RBRACE .

    PUNTO           reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    NEWLINE         reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    SEMICOLON       reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 109 (hash -> LBRACE hash_content RBRACE .)


state 143

    (110) hash_elements -> hash_element hash_more_elements .

    RBRACE          reduce using rule 110 (hash_elements -> hash_element hash_more_elements .)


state 144

    (114) hash_more_elements -> COMMA . hash_element
    (115) hash_more_elements -> COMMA . hash_element hash_more_elements
    (113) hash_element -> . clave FLECHA value
    (116) clave -> . STRING
    (117) clave -> . INT
    (118) clave -> . FLOAT

    STRING          shift and go to state 94
    INT             shift and go to state 95
    FLOAT           shift and go to state 96

    hash_element                   shift and go to state 171
    clave                          shift and go to state 93

state 145

    (113) hash_element -> clave FLECHA . value
    (119) value -> . valor
    (120) value -> . struct
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (58) struct -> . conjunto
    (59) struct -> . formacion
    (60) struct -> . hash
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    value                          shift and go to state 172
    valor                          shift and go to state 173
    struct                         shift and go to state 174
    booleanos                      shift and go to state 86
    conjunto                       shift and go to state 116
    formacion                      shift and go to state 117
    hash                           shift and go to state 118

state 146

    (23) comparacion -> factor operadoresComp factor .
    (15) expression -> factor . operadoresMat factor
    (33) operadoresMat -> . PLUS
    (34) operadoresMat -> . MINUS
    (35) operadoresMat -> . TIMES
    (36) operadoresMat -> . DIVIDE
    (37) operadoresMat -> . MOD

    AND             reduce using rule 23 (comparacion -> factor operadoresComp factor .)
    OR              reduce using rule 23 (comparacion -> factor operadoresComp factor .)
    NEWLINE         reduce using rule 23 (comparacion -> factor operadoresComp factor .)
    $end            reduce using rule 23 (comparacion -> factor operadoresComp factor .)
    SEMICOLON       reduce using rule 23 (comparacion -> factor operadoresComp factor .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    MOD             shift and go to state 50

    operadoresMat                  shift and go to state 45

state 147

    (25) comparacion -> comparacion operadoresBool comparacion .
    (25) comparacion -> comparacion . operadoresBool comparacion
    (43) operadoresBool -> . AND
    (44) operadoresBool -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    NEWLINE         reduce using rule 25 (comparacion -> comparacion operadoresBool comparacion .)
    $end            reduce using rule 25 (comparacion -> comparacion operadoresBool comparacion .)
    SEMICOLON       reduce using rule 25 (comparacion -> comparacion operadoresBool comparacion .)
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! AND             [ reduce using rule 25 (comparacion -> comparacion operadoresBool comparacion .) ]
  ! OR              [ reduce using rule 25 (comparacion -> comparacion operadoresBool comparacion .) ]

    operadoresBool                 shift and go to state 103

state 148

    (24) comparacion -> STRING operadoresEquals STRING .

    AND             reduce using rule 24 (comparacion -> STRING operadoresEquals STRING .)
    OR              reduce using rule 24 (comparacion -> STRING operadoresEquals STRING .)
    NEWLINE         reduce using rule 24 (comparacion -> STRING operadoresEquals STRING .)
    $end            reduce using rule 24 (comparacion -> STRING operadoresEquals STRING .)
    SEMICOLON       reduce using rule 24 (comparacion -> STRING operadoresEquals STRING .)


state 149

    (19) operacionstring -> STRING TIMES INT PLUS . operacionstring
    (16) operacionstring -> . STRING PLUS STRING
    (17) operacionstring -> . STRING TIMES INT
    (18) operacionstring -> . STRING PLUS operacionstring
    (19) operacionstring -> . STRING TIMES INT PLUS operacionstring

    STRING          shift and go to state 12

    operacionstring                shift and go to state 175

state 150

    (73) funcionsconjunto -> conjunto PUNTO ADD LPAREN . valor RPAREN
    (74) funcionsconjunto -> conjunto PUNTO ADD LPAREN . arr RPAREN
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (69) arr -> . LCOR repetirvalor RCOR
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    LCOR            shift and go to state 178
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    valor                          shift and go to state 176
    arr                            shift and go to state 177
    booleanos                      shift and go to state 86

state 151

    (75) funcionsconjunto -> conjunto PUNTO MERGE LPAREN . conjunto RPAREN
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR

    SET             shift and go to state 37

    conjunto                       shift and go to state 179

state 152

    (76) funcionsconjunto -> conjunto PUNTO SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 180


state 153

    (103) funcionsformacion -> formacion PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 181


state 154

    (104) funcionsformacion -> formacion PUNTO PUSH LPAREN . repetirvalor RPAREN
    (67) repetirvalor -> . valor
    (68) repetirvalor -> . valor COMMA repetirvalor
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 182
    valor                          shift and go to state 83
    booleanos                      shift and go to state 86

state 155

    (105) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . RPAREN
    (106) funcionsformacion -> formacion PUNTO SAMPLE LPAREN . INT RPAREN

    RPAREN          shift and go to state 183
    INT             shift and go to state 184


state 156

    (108) funcionsformacion -> formacion PUNTO FIRST LPAREN . RPAREN

    RPAREN          shift and go to state 185


state 157

    (90) sentenciaif -> IF condicion NEWLINE repetircontenido . NEWLINE END
    (91) sentenciaif -> IF condicion NEWLINE repetircontenido . NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 186


state 158

    (81) repetircontenido -> contenido .
    (82) repetircontenido -> contenido . SEMICOLON repetircontenido

    NEWLINE         reduce using rule 81 (repetircontenido -> contenido .)
    SEMICOLON       shift and go to state 187


state 159

    (78) contenido -> impresion .

    SEMICOLON       reduce using rule 78 (contenido -> impresion .)
    NEWLINE         reduce using rule 78 (contenido -> impresion .)


state 160

    (79) contenido -> asignacion .

    SEMICOLON       reduce using rule 79 (contenido -> asignacion .)
    NEWLINE         reduce using rule 79 (contenido -> asignacion .)


state 161

    (80) contenido -> funcionstruct .

    SEMICOLON       reduce using rule 80 (contenido -> funcionstruct .)
    NEWLINE         reduce using rule 80 (contenido -> funcionstruct .)


state 162

    (94) sentenciawhile -> WHILE condicion NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 188


state 163

    (95) sentenciawhile -> WHILE condicion NEWLINE sentenciaif . NEWLINE END

    NEWLINE         shift and go to state 189


state 164

    (87) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN . INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    INT             shift and go to state 190


state 165

    (69) arr -> LCOR repetirvalor RCOR .

    PUNTO           reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    NEWLINE         reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    $end            reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    SEMICOLON       reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    COMMA           reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    RBRACE          reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)
    RPAREN          reduce using rule 69 (arr -> LCOR repetirvalor RCOR .)


state 166

    (68) repetirvalor -> valor COMMA repetirvalor .

    RCOR            reduce using rule 68 (repetirvalor -> valor COMMA repetirvalor .)
    RPAREN          reduce using rule 68 (repetirvalor -> valor COMMA repetirvalor .)


state 167

    (101) formacion -> ARRAY PUNTO NEW LPAREN . INT RPAREN
    (102) formacion -> ARRAY PUNTO NEW LPAREN . RPAREN

    INT             shift and go to state 191
    RPAREN          shift and go to state 192


state 168

    (121) hash_add -> hash PUNTO STORE LPAREN . clave COMMA value RPAREN
    (116) clave -> . STRING
    (117) clave -> . INT
    (118) clave -> . FLOAT

    STRING          shift and go to state 94
    INT             shift and go to state 95
    FLOAT           shift and go to state 96

    clave                          shift and go to state 193

state 169

    (122) hash_delete -> hash PUNTO DELETE LPAREN . clave RPAREN
    (116) clave -> . STRING
    (117) clave -> . INT
    (118) clave -> . FLOAT

    STRING          shift and go to state 94
    INT             shift and go to state 95
    FLOAT           shift and go to state 96

    clave                          shift and go to state 194

state 170

    (123) hash_key -> hash PUNTO KEY LPAREN . value RPAREN
    (119) value -> . valor
    (120) value -> . struct
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (58) struct -> . conjunto
    (59) struct -> . formacion
    (60) struct -> . hash
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    hash                           shift and go to state 118
    value                          shift and go to state 195
    valor                          shift and go to state 173
    struct                         shift and go to state 174
    booleanos                      shift and go to state 86
    conjunto                       shift and go to state 116
    formacion                      shift and go to state 117

state 171

    (114) hash_more_elements -> COMMA hash_element .
    (115) hash_more_elements -> COMMA hash_element . hash_more_elements
    (114) hash_more_elements -> . COMMA hash_element
    (115) hash_more_elements -> . COMMA hash_element hash_more_elements

    RBRACE          reduce using rule 114 (hash_more_elements -> COMMA hash_element .)
    COMMA           shift and go to state 144

    hash_more_elements             shift and go to state 196

state 172

    (113) hash_element -> clave FLECHA value .

    COMMA           reduce using rule 113 (hash_element -> clave FLECHA value .)
    RBRACE          reduce using rule 113 (hash_element -> clave FLECHA value .)


state 173

    (119) value -> valor .

    COMMA           reduce using rule 119 (value -> valor .)
    RBRACE          reduce using rule 119 (value -> valor .)
    RPAREN          reduce using rule 119 (value -> valor .)


state 174

    (120) value -> struct .

    COMMA           reduce using rule 120 (value -> struct .)
    RBRACE          reduce using rule 120 (value -> struct .)
    RPAREN          reduce using rule 120 (value -> struct .)


state 175

    (19) operacionstring -> STRING TIMES INT PLUS operacionstring .

    NEWLINE         reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)
    $end            reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)
    SEMICOLON       reduce using rule 19 (operacionstring -> STRING TIMES INT PLUS operacionstring .)


state 176

    (73) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor . RPAREN

    RPAREN          shift and go to state 197


state 177

    (74) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr . RPAREN

    RPAREN          shift and go to state 198


state 178

    (69) arr -> LCOR . repetirvalor RCOR
    (67) repetirvalor -> . valor
    (68) repetirvalor -> . valor COMMA repetirvalor
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    repetirvalor                   shift and go to state 135
    valor                          shift and go to state 83
    booleanos                      shift and go to state 86

state 179

    (75) funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto . RPAREN

    RPAREN          shift and go to state 199


state 180

    (76) funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .

    NEWLINE         reduce using rule 76 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    $end            reduce using rule 76 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)
    SEMICOLON       reduce using rule 76 (funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN .)


state 181

    (103) funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .

    NEWLINE         reduce using rule 103 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    $end            reduce using rule 103 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)
    SEMICOLON       reduce using rule 103 (funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN .)


state 182

    (104) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor . RPAREN

    RPAREN          shift and go to state 200


state 183

    (105) funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .

    NEWLINE         reduce using rule 105 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)
    $end            reduce using rule 105 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)
    SEMICOLON       reduce using rule 105 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN RPAREN .)


state 184

    (106) funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT . RPAREN

    RPAREN          shift and go to state 201


state 185

    (108) funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .

    NEWLINE         reduce using rule 108 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    $end            reduce using rule 108 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)
    SEMICOLON       reduce using rule 108 (funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN .)


state 186

    (90) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE . END
    (91) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE . sentenciaelsif
    (92) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif

    END             shift and go to state 202
    ELSIF           shift and go to state 204

    sentenciaelsif                 shift and go to state 203

state 187

    (82) repetircontenido -> contenido SEMICOLON . repetircontenido
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    contenido                      shift and go to state 158
    repetircontenido               shift and go to state 205
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    variables                      shift and go to state 13
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 188

    (94) sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 206


state 189

    (95) sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE . END

    END             shift and go to state 207


state 190

    (87) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT . PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    PUNTO           shift and go to state 208


state 191

    (101) formacion -> ARRAY PUNTO NEW LPAREN INT . RPAREN

    RPAREN          shift and go to state 209


state 192

    (102) formacion -> ARRAY PUNTO NEW LPAREN RPAREN .

    PUNTO           reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    NEWLINE         reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    $end            reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    SEMICOLON       reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    COMMA           reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RBRACE          reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)
    RPAREN          reduce using rule 102 (formacion -> ARRAY PUNTO NEW LPAREN RPAREN .)


state 193

    (121) hash_add -> hash PUNTO STORE LPAREN clave . COMMA value RPAREN

    COMMA           shift and go to state 210


state 194

    (122) hash_delete -> hash PUNTO DELETE LPAREN clave . RPAREN

    RPAREN          shift and go to state 211


state 195

    (123) hash_key -> hash PUNTO KEY LPAREN value . RPAREN

    RPAREN          shift and go to state 212


state 196

    (115) hash_more_elements -> COMMA hash_element hash_more_elements .

    RBRACE          reduce using rule 115 (hash_more_elements -> COMMA hash_element hash_more_elements .)


state 197

    (73) funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .

    NEWLINE         reduce using rule 73 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    $end            reduce using rule 73 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)
    SEMICOLON       reduce using rule 73 (funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN .)


state 198

    (74) funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .

    NEWLINE         reduce using rule 74 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    $end            reduce using rule 74 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)
    SEMICOLON       reduce using rule 74 (funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN .)


state 199

    (75) funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .

    NEWLINE         reduce using rule 75 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)
    $end            reduce using rule 75 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)
    SEMICOLON       reduce using rule 75 (funcionsconjunto -> conjunto PUNTO MERGE LPAREN conjunto RPAREN .)


state 200

    (104) funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .

    NEWLINE         reduce using rule 104 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    $end            reduce using rule 104 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)
    SEMICOLON       reduce using rule 104 (funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN .)


state 201

    (106) funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .

    NEWLINE         reduce using rule 106 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)
    $end            reduce using rule 106 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)
    SEMICOLON       reduce using rule 106 (funcionsformacion -> formacion PUNTO SAMPLE LPAREN INT RPAREN .)


state 202

    (90) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 90 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 90 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE END .)


state 203

    (91) sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .

    NEWLINE         reduce using rule 91 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)
    $end            reduce using rule 91 (sentenciaif -> IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)


state 204

    (92) sentenciaelsif -> ELSIF . condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciaelsif -> ELSIF . condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (83) condicion -> . comparacion
    (84) condicion -> . comparacion_bool
    (85) condicion -> . comparacionb
    (86) condicion -> . booleanos
    (23) comparacion -> . factor operadoresComp factor
    (24) comparacion -> . STRING operadoresEquals STRING
    (25) comparacion -> . comparacion operadoresBool comparacion
    (26) comparacion_bool -> . booleanos operadoresEquals booleanos
    (27) comparacionb -> . booleanos operadoresBool booleanos
    (28) comparacionb -> . booleanos operadoresBool comparacionb
    (29) comparacionb -> . booleanos operadoresBool comparacion_bool
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (38) factor -> . INT
    (39) factor -> . FLOAT
    (40) factor -> . expression
    (15) expression -> . factor operadoresMat factor

    STRING          shift and go to state 76
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    condicion                      shift and go to state 213
    comparacion                    shift and go to state 71
    comparacion_bool               shift and go to state 72
    comparacionb                   shift and go to state 73
    booleanos                      shift and go to state 74
    factor                         shift and go to state 75
    expression                     shift and go to state 56

state 205

    (82) repetircontenido -> contenido SEMICOLON repetircontenido .

    NEWLINE         reduce using rule 82 (repetircontenido -> contenido SEMICOLON repetircontenido .)


state 206

    (94) sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 94 (sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 94 (sentenciawhile -> WHILE condicion NEWLINE repetircontenido NEWLINE END .)


state 207

    (95) sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .

    NEWLINE         reduce using rule 95 (sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .)
    $end            reduce using rule 95 (sentenciawhile -> WHILE condicion NEWLINE sentenciaif NEWLINE END .)


state 208

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO . PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    PUNTO           shift and go to state 214


state 209

    (101) formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .

    PUNTO           reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    NEWLINE         reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    $end            reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    SEMICOLON       reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    COMMA           reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RBRACE          reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)
    RPAREN          reduce using rule 101 (formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN .)


state 210

    (121) hash_add -> hash PUNTO STORE LPAREN clave COMMA . value RPAREN
    (119) value -> . valor
    (120) value -> . struct
    (63) valor -> . INT
    (64) valor -> . STRING
    (65) valor -> . booleanos
    (66) valor -> . FLOAT
    (58) struct -> . conjunto
    (59) struct -> . formacion
    (60) struct -> . hash
    (41) booleanos -> . TRUE
    (42) booleanos -> . FALSE
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    INT             shift and go to state 84
    STRING          shift and go to state 85
    FLOAT           shift and go to state 87
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    hash                           shift and go to state 118
    value                          shift and go to state 215
    valor                          shift and go to state 173
    struct                         shift and go to state 174
    booleanos                      shift and go to state 86
    conjunto                       shift and go to state 116
    formacion                      shift and go to state 117

state 211

    (122) hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .

    NEWLINE         reduce using rule 122 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)
    $end            reduce using rule 122 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)
    SEMICOLON       reduce using rule 122 (hash_delete -> hash PUNTO DELETE LPAREN clave RPAREN .)


state 212

    (123) hash_key -> hash PUNTO KEY LPAREN value RPAREN .

    NEWLINE         reduce using rule 123 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    $end            reduce using rule 123 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)
    SEMICOLON       reduce using rule 123 (hash_key -> hash PUNTO KEY LPAREN value RPAREN .)


state 213

    (92) sentenciaelsif -> ELSIF condicion . NEWLINE repetircontenido NEWLINE END
    (93) sentenciaelsif -> ELSIF condicion . NEWLINE repetircontenido NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 216


state 214

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO . INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    INT             shift and go to state 217


state 215

    (121) hash_add -> hash PUNTO STORE LPAREN clave COMMA value . RPAREN

    RPAREN          shift and go to state 218


state 216

    (92) sentenciaelsif -> ELSIF condicion NEWLINE . repetircontenido NEWLINE END
    (93) sentenciaelsif -> ELSIF condicion NEWLINE . repetircontenido NEWLINE sentenciaelsif
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    repetircontenido               shift and go to state 219
    contenido                      shift and go to state 158
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    variables                      shift and go to state 13
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 217

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT . RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    RPAREN          shift and go to state 220


state 218

    (121) hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .

    NEWLINE         reduce using rule 121 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)
    $end            reduce using rule 121 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)
    SEMICOLON       reduce using rule 121 (hash_add -> hash PUNTO STORE LPAREN clave COMMA value RPAREN .)


state 219

    (92) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido . NEWLINE END
    (93) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido . NEWLINE sentenciaelsif

    NEWLINE         shift and go to state 221


state 220

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN . NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END

    NEWLINE         shift and go to state 222


state 221

    (92) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE . END
    (93) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE . sentenciaelsif
    (92) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE END
    (93) sentenciaelsif -> . ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif

    END             shift and go to state 223
    ELSIF           shift and go to state 204

    sentenciaelsif                 shift and go to state 224

state 222

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . repetircontenido NEWLINE END
    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . sentenciaif NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE . sentenciaif NEWLINE repetircontenido NEWLINE END
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (90) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE END
    (91) sentenciaif -> . IF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    IF              shift and go to state 34
    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    variables                      shift and go to state 13
    repetircontenido               shift and go to state 225
    sentenciaif                    shift and go to state 226
    contenido                      shift and go to state 158
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 223

    (92) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 92 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 92 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE END .)


state 224

    (93) sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .

    NEWLINE         reduce using rule 93 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)
    $end            reduce using rule 93 (sentenciaelsif -> ELSIF condicion NEWLINE repetircontenido NEWLINE sentenciaelsif .)


state 225

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 227


state 226

    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif . NEWLINE END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif . NEWLINE repetircontenido NEWLINE END

    NEWLINE         shift and go to state 228


state 227

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 229


state 228

    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE . END
    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE . repetircontenido NEWLINE END
    (81) repetircontenido -> . contenido
    (82) repetircontenido -> . contenido SEMICOLON repetircontenido
    (78) contenido -> . impresion
    (79) contenido -> . asignacion
    (80) contenido -> . funcionstruct
    (9) impresion -> . PUTS factor
    (10) impresion -> . PUTS comparacion
    (11) impresion -> . PUTS comparacion_bool
    (12) impresion -> . PUTS STRING
    (13) impresion -> . PUTS variables
    (50) asignacion -> . variables EQUAL factor
    (51) asignacion -> . variables EQUAL STRING
    (52) asignacion -> . variables EQUAL booleanos
    (53) asignacion -> . variables EQUAL comparacion_bool
    (54) asignacion -> . variables EQUAL comparacionb
    (55) asignacion -> . variables EQUAL struct
    (56) asignacion -> . variables EQUAL comparacion
    (57) asignacion -> . variables EQUAL operacionstring
    (70) funcionstruct -> . funcionsconjunto
    (71) funcionstruct -> . funcionsformacion
    (72) funcionstruct -> . funcionsHash
    (47) variables -> . ID
    (48) variables -> . CONSTANT
    (49) variables -> . GLOBAL
    (73) funcionsconjunto -> . conjunto PUNTO ADD LPAREN valor RPAREN
    (74) funcionsconjunto -> . conjunto PUNTO ADD LPAREN arr RPAREN
    (75) funcionsconjunto -> . conjunto PUNTO MERGE LPAREN conjunto RPAREN
    (76) funcionsconjunto -> . conjunto PUNTO SIZE LPAREN RPAREN
    (77) funcionsconjunto -> . conjunto PUNTO SIZE
    (103) funcionsformacion -> . formacion PUNTO LENGTH LPAREN RPAREN
    (104) funcionsformacion -> . formacion PUNTO PUSH LPAREN repetirvalor RPAREN
    (105) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN RPAREN
    (106) funcionsformacion -> . formacion PUNTO SAMPLE LPAREN INT RPAREN
    (107) funcionsformacion -> . formacion PUNTO FIRST
    (108) funcionsformacion -> . formacion PUNTO FIRST LPAREN RPAREN
    (124) funcionsHash -> . hash_add
    (125) funcionsHash -> . hash_delete
    (126) funcionsHash -> . hash_key
    (61) conjunto -> . SET arr
    (62) conjunto -> . SET LCOR RCOR
    (99) formacion -> . LCOR repetirvalor RCOR
    (100) formacion -> . LCOR RCOR
    (101) formacion -> . ARRAY PUNTO NEW LPAREN INT RPAREN
    (102) formacion -> . ARRAY PUNTO NEW LPAREN RPAREN
    (121) hash_add -> . hash PUNTO STORE LPAREN clave COMMA value RPAREN
    (122) hash_delete -> . hash PUNTO DELETE LPAREN clave RPAREN
    (123) hash_key -> . hash PUNTO KEY LPAREN value RPAREN
    (109) hash -> . LBRACE hash_content RBRACE

    END             shift and go to state 230
    PUTS            shift and go to state 10
    ID              shift and go to state 26
    CONSTANT        shift and go to state 27
    GLOBAL          shift and go to state 28
    SET             shift and go to state 37
    LCOR            shift and go to state 38
    ARRAY           shift and go to state 39
    LBRACE          shift and go to state 43

    variables                      shift and go to state 13
    repetircontenido               shift and go to state 231
    contenido                      shift and go to state 158
    impresion                      shift and go to state 159
    asignacion                     shift and go to state 160
    funcionstruct                  shift and go to state 161
    funcionsconjunto               shift and go to state 18
    funcionsformacion              shift and go to state 19
    funcionsHash                   shift and go to state 20
    conjunto                       shift and go to state 29
    formacion                      shift and go to state 30
    hash_add                       shift and go to state 31
    hash_delete                    shift and go to state 32
    hash_key                       shift and go to state 33
    hash                           shift and go to state 40

state 229

    (87) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 87 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 87 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE repetircontenido NEWLINE END .)


state 230

    (88) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .

    NEWLINE         reduce using rule 88 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .)
    $end            reduce using rule 88 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE END .)


state 231

    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido . NEWLINE END

    NEWLINE         shift and go to state 232


state 232

    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE . END

    END             shift and go to state 233


state 233

    (89) sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .

    NEWLINE         reduce using rule 89 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .)
    $end            reduce using rule 89 (sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN NEWLINE sentenciaif NEWLINE repetircontenido NEWLINE END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for MOD in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
