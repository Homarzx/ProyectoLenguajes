
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALIAS AND ARRAY BEGIN BREAK CASE CHOMP CLASS CLEAR COMMA CONSTANT DEF DEFINED DELETE DIVIDE DO ELSE ELSIF END ENSURE EQUAL EQUALSX2 FALSE FETCH FIRST FLECHA FLOAT FOR GETS GLOBAL ID IF IN INT KEY LBRACE LCOR LENGTH LPAREN MAYORQUE MENORQUE MERGE MINUS MOD MODULE NEW NEWLINE NEXT NIL NOT NOTEQUALS NUMERAL OR PLUS PUNTO PUSH PUTS RBRACE RCOR REDO RESCUE RETRY RETURN RPAREN SAMPLE SELF SET SIZE STORE STRING SUPER THEN TIMES TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDcuerpo : expression\n             | impresion\n             | asignacion\n             | leer\n             | funcionstruct\n             | sentenciafor\n             | sentenciawhile\n             | sentenciaElsifimpresion : PUTS factor\n                    | PUTS comparacion\n                    | PUTS comparacion_bool\n                    | PUTS STRINGleer : GETS PUNTO CHOMPexpression : factor operadoresMat factorcomparacion : factor operadoresComp factor\n                | STRING operadoresEquals STRINGcomparacion_bool : booleanos operadoresBool booleanosoperadoresComp : MAYORQUE\n                    | MENORQUE\n                    | operadoresEqualsoperadoresMat : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MODfactor : INT\n            | FLOATfactor : expressionbooleanos : TRUE\n        | FALSE\n    operadoresBool : AND\n                        | OR\n                        | operadoresEqualsoperadoresEquals : EQUALSX2\n                        | NOTEQUALSvariables : ID\n                | CONSTANT\n                | GLOBALasignacion : variables EQUAL factor\n                  | variables EQUAL STRING\n                  | variables EQUAL booleanos\n                  | variables EQUAL comparacion_bool\n                  | variables EQUAL struct\n                  | variables EQUAL comparacionstruct : conjunto\n                | formacion\n                | hashconjunto : SET arr\n                | SET LCOR RCORvalor : INT\n             | ID\n             | STRING\n             | booleanos\n             | FLOATrepetirvalor : valor\n                    | valor COMMA repetirvalorarr : LCOR repetirvalor RCORfuncionstruct : funcionsconjunto\n                        | funcionsformacion\n                        | funcionsHashfuncionsconjunto : conjunto PUNTO ADD LPAREN valor RPAREN\n                        | conjunto PUNTO ADD LPAREN arr RPAREN\n                        | conjunto PUNTO MERGE LPAREN variables RPAREN\n                        | conjunto PUNTO SIZE LPAREN RPAREN\n                        | conjunto PUNTO SIZEcontenido : impresion\n                 | asignacion\n                 | funcionstructrepetircontenido : contenido \n                        | contenido repetircontenido sentenciafor : FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido ENDcondicion : comparacion\n                | comparacion_bool\n                | booleanos\n                | ARRAY PUNTO NEW LPAREN arr RPARENsentenciawhile : WHILE condicion  DO repetircontenido ENDformacion : LCOR repetirvalor RCOR\n                | LCOR RCOR\n                | ARRAY PUNTO NEW LPAREN INT RPAREN\n                | ARRAY PUNTO NEW LPAREN  RPARENfuncionsformacion : formacion PUNTO LENGTH LPAREN RPAREN\n                        | formacion PUNTO PUSH LPAREN repetirvalor RPAREN\n                        | formacion PUNTO SAMPLE LPAREN variables RPAREN\n                        | formacion PUNTO FIRST\n                        | formacion PUNTO FIRST LPAREN RPARENhash : LBRACE hash_content RBRACEhash_elements : hash_element hash_more_elementshash_content : hash_element \n                    | hash_elementshash_element : clave FLECHA valuehash_more_elements : COMMA hash_element\n                            | COMMA hash_element hash_more_elementsclave : variables                                                     \n            | STRING\n            | INT\n            | FLOATvalue : valor\n            | structhash_add : hash PUNTO STORE LPAREN hash_element RPARENhash_delete : hash PUNTO LPAREN clave RPARENhash_key : hash PUNTO KEY LPAREN value RPARENfuncionsHash : hash_add\n                    | hash_delete\n                    | hash_keysentenciaElsif : IF condicion NEWLINE repetircontenido mas_sentencias ENDmas_sentencias : NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE\n                        |  NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentenciasoperacionNumeros : INT PLUS INT'
    
_lr_action_items = {'PUTS':([0,14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,123,127,128,129,132,133,134,135,145,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[11,-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,11,11,-65,-84,-49,-77,-86,-15,-16,-17,11,-66,-67,-68,-57,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,11,11,]),'GETS':([0,],[13,]),'FOR':([0,],[17,]),'WHILE':([0,],[19,]),'IF':([0,],[20,]),'INT':([0,11,19,20,31,34,35,36,37,38,39,40,49,63,83,84,85,86,87,88,118,121,125,126,130,138,142,147,148,150,163,178,188,],[18,18,18,18,67,80,18,-21,-22,-23,-24,-25,18,67,18,-18,-19,-20,-34,-35,67,80,80,67,155,67,67,170,80,67,67,18,191,]),'FLOAT':([0,11,19,20,31,34,35,36,37,38,39,40,49,63,83,84,85,86,87,88,118,121,125,126,138,142,148,150,163,178,],[21,21,21,21,71,81,21,-21,-22,-23,-24,-25,21,71,21,-18,-19,-20,-34,-35,71,81,81,71,71,71,81,71,71,21,]),'ID':([0,14,15,16,17,18,21,27,28,29,31,34,41,42,43,44,45,47,48,62,63,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,118,121,123,125,126,127,128,129,132,133,134,135,138,139,142,143,145,148,150,163,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[22,-58,-59,-60,22,-26,-27,-102,-103,-104,68,22,-9,-10,-11,-12,-28,-29,-30,-48,68,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,22,22,-65,-84,-49,-77,68,22,-86,22,68,-15,-16,-17,22,-66,-67,-68,68,22,68,22,-57,22,68,68,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,22,22,]),'CONSTANT':([0,14,15,16,17,18,21,27,28,29,34,41,42,43,44,45,47,48,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,121,123,125,127,128,129,132,133,134,135,139,143,145,148,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[23,-58,-59,-60,23,-26,-27,-102,-103,-104,23,-9,-10,-11,-12,-28,-29,-30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,23,23,-65,-84,-49,-77,23,-86,23,-15,-16,-17,23,-66,-67,-68,23,23,-57,23,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,23,23,]),'GLOBAL':([0,14,15,16,17,18,21,27,28,29,34,41,42,43,44,45,47,48,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,121,123,125,127,128,129,132,133,134,135,139,143,145,148,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[24,-58,-59,-60,24,-26,-27,-102,-103,-104,24,-9,-10,-11,-12,-28,-29,-30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,24,24,-65,-84,-49,-77,24,-86,24,-15,-16,-17,24,-66,-67,-68,24,24,-57,24,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,24,24,]),'SET':([0,14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,49,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,123,126,127,128,129,132,133,134,135,145,150,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[30,-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,30,30,-65,-84,-49,-77,-86,30,-15,-16,-17,30,-66,-67,-68,-57,30,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,30,30,]),'LCOR':([0,14,15,16,18,21,27,28,29,30,41,42,43,44,45,47,48,49,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,123,126,127,128,129,132,133,134,135,138,145,150,158,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[31,-58,-59,-60,-26,-27,-102,-103,-104,63,-9,-10,-11,-12,-28,-29,-30,31,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,31,31,-65,-84,-49,-77,-86,31,-15,-16,-17,31,-66,-67,-68,163,-57,31,163,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,31,31,]),'ARRAY':([0,14,15,16,18,19,20,21,27,28,29,41,42,43,44,45,47,48,49,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,123,126,127,128,129,132,133,134,135,145,150,165,166,169,171,173,178,180,181,182,183,184,185,186,187,192,193,],[32,-58,-59,-60,-26,56,56,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,32,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,32,32,-65,-84,-49,-77,-86,32,-15,-16,-17,32,-66,-67,-68,-57,32,-64,-81,-85,-80,-100,56,-61,-62,-63,-82,-83,-79,-99,-101,32,32,]),'LBRACE':([0,14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,49,62,65,82,94,95,96,97,98,99,100,101,102,105,107,110,114,115,117,123,126,127,128,129,132,133,134,135,145,150,165,166,169,171,173,180,181,182,183,184,185,186,187,192,193,],[34,-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,34,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,34,34,-65,-84,-49,-77,-86,34,-15,-16,-17,34,-66,-67,-68,-57,34,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,34,34,]),'$end':([1,2,3,4,5,6,7,8,9,14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,62,65,82,94,95,96,97,98,99,100,101,102,103,110,114,115,117,123,127,128,129,145,156,165,166,169,171,173,179,180,181,182,183,184,185,186,187,197,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,-13,-65,-84,-49,-77,-86,-15,-16,-17,-57,-76,-64,-81,-85,-80,-100,-105,-61,-62,-63,-82,-83,-79,-99,-101,-71,]),'PLUS':([2,10,18,21,41,45,57,82,94,127,],[-28,36,-26,-27,36,-28,36,36,36,36,]),'MINUS':([2,10,18,21,41,45,57,82,94,127,],[-28,37,-26,-27,37,-28,37,37,37,37,]),'TIMES':([2,10,18,21,41,45,57,82,94,127,],[-28,38,-26,-27,38,-28,38,38,38,38,]),'DIVIDE':([2,10,18,21,41,45,57,82,94,127,],[-28,39,-26,-27,39,-28,39,39,39,39,]),'MOD':([2,10,18,21,41,45,57,82,94,127,],[-28,40,-26,-27,40,-28,40,40,40,40,]),'STRING':([11,19,20,31,34,49,63,87,88,89,118,121,125,126,138,142,148,150,163,178,],[44,58,58,69,79,95,69,-34,-35,128,69,79,79,69,69,69,79,69,69,58,]),'TRUE':([11,19,20,31,49,63,87,88,90,91,92,93,118,126,138,142,150,163,178,],[47,47,47,47,47,47,-34,-35,47,-31,-32,-33,47,47,47,47,47,47,47,]),'FALSE':([11,19,20,31,49,63,87,88,90,91,92,93,118,126,138,142,150,163,178,],[48,48,48,48,48,48,-34,-35,48,-31,-32,-33,48,48,48,48,48,48,48,]),'EQUAL':([12,22,23,24,],[49,-36,-37,-38,]),'PUNTO':([13,25,26,32,33,56,62,65,115,117,123,145,155,171,176,185,],[50,60,61,72,73,106,-48,-78,-49,-77,-86,-57,176,-80,188,-79,]),'END':([14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,62,65,82,94,95,96,97,98,99,100,101,102,110,114,115,117,123,127,128,129,131,132,133,134,135,145,157,160,165,166,169,171,173,180,181,182,183,184,185,186,187,195,196,198,],[-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,-65,-84,-49,-77,-86,-15,-16,-17,156,-69,-66,-67,-68,-57,-70,179,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,197,-106,-107,]),'NEWLINE':([14,15,16,18,21,27,28,29,41,42,43,44,45,47,48,53,54,55,59,62,65,82,94,95,96,97,98,99,100,101,102,110,114,115,117,123,127,128,129,132,133,134,135,137,145,157,165,166,169,171,173,180,181,182,183,184,185,186,187,189,190,194,196,],[-58,-59,-60,-26,-27,-102,-103,-104,-9,-10,-11,-12,-28,-29,-30,-72,-73,-74,107,-48,-78,-14,-39,-40,-41,-42,-43,-44,-45,-46,-47,-65,-84,-49,-77,-86,-15,-16,-17,-69,-66,-67,-68,159,-57,-70,-64,-81,-85,-80,-100,-61,-62,-63,-82,-83,-79,-99,-101,-75,192,196,159,]),'MAYORQUE':([18,21,41,45,57,82,94,],[-26,-27,84,-28,84,-14,84,]),'MENORQUE':([18,21,41,45,57,82,94,],[-26,-27,85,-28,85,-14,85,]),'EQUALSX2':([18,21,41,44,45,46,47,48,55,57,58,82,94,95,96,],[-26,-27,87,87,-28,87,-29,-30,87,87,87,-14,87,87,87,]),'NOTEQUALS':([18,21,41,44,45,46,47,48,55,57,58,82,94,95,96,],[-26,-27,88,88,-28,88,-29,-30,88,88,88,-14,88,88,88,]),'DO':([18,21,45,47,48,52,53,54,55,82,127,128,129,189,],[-26,-27,-28,-29,-30,105,-72,-73,-74,-14,-15,-16,-17,-75,]),'IN':([22,23,24,51,],[-36,-37,-38,104,]),'FLECHA':([22,23,24,77,78,79,80,81,],[-36,-37,-38,126,-93,-94,-95,-96,]),'RPAREN':([22,23,24,47,48,62,65,66,67,68,69,70,71,78,79,80,81,100,101,102,115,117,123,140,141,144,145,146,147,149,152,153,154,161,162,164,167,168,170,171,172,174,177,185,191,],[-36,-37,-38,-29,-30,-48,-78,-55,-50,-51,-52,-53,-54,-93,-94,-95,-96,-45,-46,-47,-49,-77,-86,165,166,169,-57,-56,171,173,-90,-97,-98,180,181,182,183,184,185,-80,186,187,189,-79,193,]),'RCOR':([31,47,48,63,64,66,67,68,69,70,71,116,146,],[65,-29,-30,115,117,-55,-50,-51,-52,-53,-54,145,-56,]),'AND':([46,47,48,55,96,],[91,-29,-30,91,91,]),'OR':([46,47,48,55,96,],[92,-29,-30,92,92,]),'COMMA':([47,48,62,65,66,67,68,69,70,71,75,100,101,102,115,117,123,145,151,152,153,154,171,185,],[-29,-30,-48,-78,118,-50,-51,-52,-53,-54,125,-45,-46,-47,-49,-77,-86,-57,125,-90,-97,-98,-80,-79,]),'RBRACE':([47,48,62,65,67,68,69,70,71,74,75,76,100,101,102,115,117,123,124,145,151,152,153,154,171,175,185,],[-29,-30,-48,-78,-50,-51,-52,-53,-54,123,-88,-89,-45,-46,-47,-49,-77,-86,-87,-57,-91,-90,-97,-98,-80,-92,-79,]),'CHOMP':([50,],[103,]),'ADD':([60,],[108,]),'MERGE':([60,],[109,]),'SIZE':([60,],[110,]),'LENGTH':([61,],[111,]),'PUSH':([61,],[112,]),'SAMPLE':([61,],[113,]),'FIRST':([61,],[114,]),'NEW':([72,106,],[119,136,]),'STORE':([73,],[120,]),'LPAREN':([73,104,108,109,110,111,112,113,114,119,120,122,136,],[121,130,138,139,140,141,142,143,144,147,148,150,158,]),'KEY':([73,],[122,]),'ELSIF':([159,],[178,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'expression':([0,11,19,20,35,49,83,178,],[2,45,45,45,45,45,45,45,]),'impresion':([0,105,107,132,192,193,],[3,133,133,133,133,133,]),'asignacion':([0,105,107,132,192,193,],[4,134,134,134,134,134,]),'leer':([0,],[5,]),'funcionstruct':([0,105,107,132,192,193,],[6,135,135,135,135,135,]),'sentenciafor':([0,],[7,]),'sentenciawhile':([0,],[8,]),'sentenciaElsif':([0,],[9,]),'factor':([0,11,19,20,35,49,83,178,],[10,41,57,57,82,94,127,57,]),'variables':([0,17,34,105,107,121,125,132,139,143,148,192,193,],[12,51,78,12,12,78,78,12,164,168,78,12,12,]),'funcionsconjunto':([0,105,107,132,192,193,],[14,14,14,14,14,14,]),'funcionsformacion':([0,105,107,132,192,193,],[15,15,15,15,15,15,]),'funcionsHash':([0,105,107,132,192,193,],[16,16,16,16,16,16,]),'conjunto':([0,49,105,107,126,132,150,192,193,],[25,100,25,25,100,25,100,25,25,]),'formacion':([0,49,105,107,126,132,150,192,193,],[26,101,26,26,101,26,101,26,26,]),'hash_add':([0,105,107,132,192,193,],[27,27,27,27,27,27,]),'hash_delete':([0,105,107,132,192,193,],[28,28,28,28,28,28,]),'hash_key':([0,105,107,132,192,193,],[29,29,29,29,29,29,]),'hash':([0,49,105,107,126,132,150,192,193,],[33,102,33,33,102,33,102,33,33,]),'operadoresMat':([10,41,57,82,94,127,],[35,35,35,35,35,35,]),'comparacion':([11,19,20,49,178,],[42,53,53,99,53,]),'comparacion_bool':([11,19,20,49,178,],[43,54,54,97,54,]),'booleanos':([11,19,20,31,49,63,90,118,126,138,142,150,163,178,],[46,55,55,70,96,70,129,70,70,70,70,70,70,55,]),'condicion':([19,20,178,],[52,59,190,]),'arr':([30,138,158,],[62,162,177,]),'repetirvalor':([31,63,118,142,163,],[64,116,146,167,116,]),'valor':([31,63,118,126,138,142,150,163,],[66,66,66,153,161,66,153,66,]),'hash_content':([34,],[74,]),'hash_element':([34,125,148,],[75,151,172,]),'hash_elements':([34,],[76,]),'clave':([34,121,125,148,],[77,149,77,77,]),'operadoresComp':([41,57,94,],[83,83,83,]),'operadoresEquals':([41,44,46,55,57,58,94,95,96,],[86,89,93,93,86,89,86,89,93,]),'operadoresBool':([46,55,96,],[90,90,90,]),'struct':([49,126,150,],[98,154,154,]),'hash_more_elements':([75,151,],[124,175,]),'repetircontenido':([105,107,132,192,193,],[131,137,157,194,195,]),'contenido':([105,107,132,192,193,],[132,132,132,132,132,]),'value':([126,150,],[152,174,]),'mas_sentencias':([137,196,],[160,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> expression','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> leer','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> funcionstruct','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> sentenciafor','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> sentenciawhile','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> sentenciaElsif','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('impresion -> PUTS factor','impresion',2,'p_impresion','sintactico.py',19),
  ('impresion -> PUTS comparacion','impresion',2,'p_impresion','sintactico.py',20),
  ('impresion -> PUTS comparacion_bool','impresion',2,'p_impresion','sintactico.py',21),
  ('impresion -> PUTS STRING','impresion',2,'p_impresion','sintactico.py',22),
  ('leer -> GETS PUNTO CHOMP','leer',3,'p_leer','sintactico.py',25),
  ('expression -> factor operadoresMat factor','expression',3,'p_expression_mat','sintactico.py',28),
  ('comparacion -> factor operadoresComp factor','comparacion',3,'p_comparacion','sintactico.py',34),
  ('comparacion -> STRING operadoresEquals STRING','comparacion',3,'p_comparacion','sintactico.py',35),
  ('comparacion_bool -> booleanos operadoresBool booleanos','comparacion_bool',3,'p_comparacion_bool','sintactico.py',39),
  ('operadoresComp -> MAYORQUE','operadoresComp',1,'p_operadoresComp','sintactico.py',42),
  ('operadoresComp -> MENORQUE','operadoresComp',1,'p_operadoresComp','sintactico.py',43),
  ('operadoresComp -> operadoresEquals','operadoresComp',1,'p_operadoresComp','sintactico.py',44),
  ('operadoresMat -> PLUS','operadoresMat',1,'p_operadoresMat','sintactico.py',47),
  ('operadoresMat -> MINUS','operadoresMat',1,'p_operadoresMat','sintactico.py',48),
  ('operadoresMat -> TIMES','operadoresMat',1,'p_operadoresMat','sintactico.py',49),
  ('operadoresMat -> DIVIDE','operadoresMat',1,'p_operadoresMat','sintactico.py',50),
  ('operadoresMat -> MOD','operadoresMat',1,'p_operadoresMat','sintactico.py',51),
  ('factor -> INT','factor',1,'p_factor_num','sintactico.py',54),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',55),
  ('factor -> expression','factor',1,'p_factor_expr','sintactico.py',58),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',61),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',62),
  ('operadoresBool -> AND','operadoresBool',1,'p_operadoresBool','sintactico.py',66),
  ('operadoresBool -> OR','operadoresBool',1,'p_operadoresBool','sintactico.py',67),
  ('operadoresBool -> operadoresEquals','operadoresBool',1,'p_operadoresBool','sintactico.py',68),
  ('operadoresEquals -> EQUALSX2','operadoresEquals',1,'p_operadoresEqual','sintactico.py',70),
  ('operadoresEquals -> NOTEQUALS','operadoresEquals',1,'p_operadoresEqual','sintactico.py',71),
  ('variables -> ID','variables',1,'p_variables','sintactico.py',73),
  ('variables -> CONSTANT','variables',1,'p_variables','sintactico.py',74),
  ('variables -> GLOBAL','variables',1,'p_variables','sintactico.py',75),
  ('asignacion -> variables EQUAL factor','asignacion',3,'p_asignacion','sintactico.py',79),
  ('asignacion -> variables EQUAL STRING','asignacion',3,'p_asignacion','sintactico.py',80),
  ('asignacion -> variables EQUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',81),
  ('asignacion -> variables EQUAL comparacion_bool','asignacion',3,'p_asignacion','sintactico.py',82),
  ('asignacion -> variables EQUAL struct','asignacion',3,'p_asignacion','sintactico.py',83),
  ('asignacion -> variables EQUAL comparacion','asignacion',3,'p_asignacion','sintactico.py',84),
  ('struct -> conjunto','struct',1,'p_struct','sintactico.py',88),
  ('struct -> formacion','struct',1,'p_struct','sintactico.py',89),
  ('struct -> hash','struct',1,'p_struct','sintactico.py',90),
  ('conjunto -> SET arr','conjunto',2,'p_conjunto','sintactico.py',93),
  ('conjunto -> SET LCOR RCOR','conjunto',3,'p_conjunto','sintactico.py',94),
  ('valor -> INT','valor',1,'p_valor','sintactico.py',97),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',98),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',99),
  ('valor -> booleanos','valor',1,'p_valor','sintactico.py',100),
  ('valor -> FLOAT','valor',1,'p_valor','sintactico.py',101),
  ('repetirvalor -> valor','repetirvalor',1,'p_repetirvalor','sintactico.py',104),
  ('repetirvalor -> valor COMMA repetirvalor','repetirvalor',3,'p_repetirvalor','sintactico.py',105),
  ('arr -> LCOR repetirvalor RCOR','arr',3,'p_arr','sintactico.py',110),
  ('funcionstruct -> funcionsconjunto','funcionstruct',1,'p_funcionstruct','sintactico.py',113),
  ('funcionstruct -> funcionsformacion','funcionstruct',1,'p_funcionstruct','sintactico.py',114),
  ('funcionstruct -> funcionsHash','funcionstruct',1,'p_funcionstruct','sintactico.py',115),
  ('funcionsconjunto -> conjunto PUNTO ADD LPAREN valor RPAREN','funcionsconjunto',6,'p_funcionsconjunto','sintactico.py',118),
  ('funcionsconjunto -> conjunto PUNTO ADD LPAREN arr RPAREN','funcionsconjunto',6,'p_funcionsconjunto','sintactico.py',119),
  ('funcionsconjunto -> conjunto PUNTO MERGE LPAREN variables RPAREN','funcionsconjunto',6,'p_funcionsconjunto','sintactico.py',120),
  ('funcionsconjunto -> conjunto PUNTO SIZE LPAREN RPAREN','funcionsconjunto',5,'p_funcionsconjunto','sintactico.py',121),
  ('funcionsconjunto -> conjunto PUNTO SIZE','funcionsconjunto',3,'p_funcionsconjunto','sintactico.py',122),
  ('contenido -> impresion','contenido',1,'p_contenido','sintactico.py',125),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintactico.py',126),
  ('contenido -> funcionstruct','contenido',1,'p_contenido','sintactico.py',127),
  ('repetircontenido -> contenido','repetircontenido',1,'p_repetircontenido','sintactico.py',129),
  ('repetircontenido -> contenido repetircontenido','repetircontenido',2,'p_repetircontenido','sintactico.py',130),
  ('sentenciafor -> FOR variables IN LPAREN INT PUNTO PUNTO INT RPAREN repetircontenido END','sentenciafor',11,'p_sentenciafor','sintactico.py',133),
  ('condicion -> comparacion','condicion',1,'p_condicion','sintactico.py',137),
  ('condicion -> comparacion_bool','condicion',1,'p_condicion','sintactico.py',138),
  ('condicion -> booleanos','condicion',1,'p_condicion','sintactico.py',139),
  ('condicion -> ARRAY PUNTO NEW LPAREN arr RPAREN','condicion',6,'p_condicion','sintactico.py',140),
  ('sentenciawhile -> WHILE condicion DO repetircontenido END','sentenciawhile',5,'p_sentenciawhile','sintactico.py',143),
  ('formacion -> LCOR repetirvalor RCOR','formacion',3,'p_formacion','sintactico.py',146),
  ('formacion -> LCOR RCOR','formacion',2,'p_formacion','sintactico.py',147),
  ('formacion -> ARRAY PUNTO NEW LPAREN INT RPAREN','formacion',6,'p_formacion','sintactico.py',148),
  ('formacion -> ARRAY PUNTO NEW LPAREN RPAREN','formacion',5,'p_formacion','sintactico.py',149),
  ('funcionsformacion -> formacion PUNTO LENGTH LPAREN RPAREN','funcionsformacion',5,'p_funcionsformacion','sintactico.py',152),
  ('funcionsformacion -> formacion PUNTO PUSH LPAREN repetirvalor RPAREN','funcionsformacion',6,'p_funcionsformacion','sintactico.py',153),
  ('funcionsformacion -> formacion PUNTO SAMPLE LPAREN variables RPAREN','funcionsformacion',6,'p_funcionsformacion','sintactico.py',154),
  ('funcionsformacion -> formacion PUNTO FIRST','funcionsformacion',3,'p_funcionsformacion','sintactico.py',155),
  ('funcionsformacion -> formacion PUNTO FIRST LPAREN RPAREN','funcionsformacion',5,'p_funcionsformacion','sintactico.py',156),
  ('hash -> LBRACE hash_content RBRACE','hash',3,'p_hash','sintactico.py',159),
  ('hash_elements -> hash_element hash_more_elements','hash_elements',2,'p_hash_elements','sintactico.py',162),
  ('hash_content -> hash_element','hash_content',1,'p_hash_content','sintactico.py',165),
  ('hash_content -> hash_elements','hash_content',1,'p_hash_content','sintactico.py',166),
  ('hash_element -> clave FLECHA value','hash_element',3,'p_hash_element','sintactico.py',169),
  ('hash_more_elements -> COMMA hash_element','hash_more_elements',2,'p_hash_more_elements','sintactico.py',172),
  ('hash_more_elements -> COMMA hash_element hash_more_elements','hash_more_elements',3,'p_hash_more_elements','sintactico.py',173),
  ('clave -> variables','clave',1,'p_clave','sintactico.py',175),
  ('clave -> STRING','clave',1,'p_clave','sintactico.py',176),
  ('clave -> INT','clave',1,'p_clave','sintactico.py',177),
  ('clave -> FLOAT','clave',1,'p_clave','sintactico.py',178),
  ('value -> valor','value',1,'p_value','sintactico.py',180),
  ('value -> struct','value',1,'p_value','sintactico.py',181),
  ('hash_add -> hash PUNTO STORE LPAREN hash_element RPAREN','hash_add',6,'p_hash_store','sintactico.py',184),
  ('hash_delete -> hash PUNTO LPAREN clave RPAREN','hash_delete',5,'p_hash_delete','sintactico.py',187),
  ('hash_key -> hash PUNTO KEY LPAREN value RPAREN','hash_key',6,'p_hash_key','sintactico.py',190),
  ('funcionsHash -> hash_add','funcionsHash',1,'p_funcionsHash','sintactico.py',193),
  ('funcionsHash -> hash_delete','funcionsHash',1,'p_funcionsHash','sintactico.py',194),
  ('funcionsHash -> hash_key','funcionsHash',1,'p_funcionsHash','sintactico.py',195),
  ('sentenciaElsif -> IF condicion NEWLINE repetircontenido mas_sentencias END','sentenciaElsif',6,'p_sentenciaElsif','sintactico.py',197),
  ('mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE','mas_sentencias',6,'p_mas_sentencias','sintactico.py',200),
  ('mas_sentencias -> NEWLINE ELSIF condicion NEWLINE repetircontenido NEWLINE mas_sentencias','mas_sentencias',7,'p_mas_sentencias','sintactico.py',201),
  ('operacionNumeros -> INT PLUS INT','operacionNumeros',3,'p_operacionNumeros','sintactico.py',206),
]
